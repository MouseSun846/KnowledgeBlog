import{_ as i,c as s,o as a,a as e}from"./app-CK5tDyFF.js";const l={},n=e(`<div class="hint-container tip"><p class="hint-container-title">http2与http1区别?</p></div><p>HTTP/2 是对 HTTP/1.x 协议的重大升级，旨在提高网络性能和效率。以下是 HTTP/2 相对于 HTTP/1 的一些关键区别和改进：</p><h3 id="_1-协议基础" tabindex="-1"><a class="header-anchor" href="#_1-协议基础"><span>1. 协议基础</span></a></h3><ul><li><strong>HTTP/1.x</strong>: 基于纯文本的协议，使用新行符分隔的文本消息进行通信。</li><li><strong>HTTP/2</strong>: 基于二进制的协议，使用二进制帧传输数据，更高效地解析和传输数据。</li></ul><h3 id="_2-连接管理" tabindex="-1"><a class="header-anchor" href="#_2-连接管理"><span>2. 连接管理</span></a></h3><ul><li><p><strong>HTTP/1.x</strong>:</p><ul><li>每个请求/响应对通常需要一个单独的TCP连接（HTTP/1.0）。</li><li>HTTP/1.1 引入了连接保持（Keep-Alive），允许在同一个TCP连接上复用多个请求，但在同一时刻只能处理一个请求（串行化处理）。</li></ul></li><li><p><strong>HTTP/2</strong>:</p><ul><li>单个TCP连接上可以处理多个并发的请求/响应对。</li><li>使用流的概念，每个请求/响应对在一个单独的流中，流之间可以独立并行处理。</li></ul></li></ul><h3 id="_3-多路复用" tabindex="-1"><a class="header-anchor" href="#_3-多路复用"><span>3. 多路复用</span></a></h3><ul><li><strong>HTTP/1.x</strong>: 在一个连接上，只有一个请求/响应对可以被处理（头部阻塞问题），需要等待当前请求完成后，才能开始下一个请求。</li><li><strong>HTTP/2</strong>: 允许多个请求/响应对在同一连接上的多个流中并发传输，不同的流可以独立处理，不会相互阻塞。</li></ul><h3 id="_4-头部压缩" tabindex="-1"><a class="header-anchor" href="#_4-头部压缩"><span>4. 头部压缩</span></a></h3><ul><li><strong>HTTP/1.x</strong>: HTTP头部是以纯文本格式传输的，每个请求都需要发送完整的头部信息，导致冗余和带宽浪费。</li><li><strong>HTTP/2</strong>: 使用 HPACK 算法对头部进行压缩，减少了传输数据量。头部信息仅在第一次请求时完整传输，后续请求只需发送差异部分。</li></ul><h3 id="_5-服务器推送" tabindex="-1"><a class="header-anchor" href="#_5-服务器推送"><span>5. 服务器推送</span></a></h3><ul><li><strong>HTTP/1.x</strong>: 客户端必须明确请求每个资源，服务器只能响应客户端的请求。</li><li><strong>HTTP/2</strong>: 支持服务器推送功能，服务器可以在客户端请求之前主动发送资源，这有助于减少延迟和提升性能。例如，当客户端请求HTML页面时，服务器可以主动推送相关的CSS和JavaScript文件。</li></ul><h3 id="_6-优先级和流控制" tabindex="-1"><a class="header-anchor" href="#_6-优先级和流控制"><span>6. 优先级和流控制</span></a></h3><ul><li><strong>HTTP/1.x</strong>: 没有内建的优先级控制机制，所有请求被平等对待。</li><li><strong>HTTP/2</strong>: 支持流的优先级，客户端可以指定不同流的优先级，允许更重要的请求先行处理。同时，HTTP/2 提供流量控制机制，确保没有流会独占带宽。</li></ul><h3 id="_7-加密和安全" tabindex="-1"><a class="header-anchor" href="#_7-加密和安全"><span>7. 加密和安全</span></a></h3><ul><li><strong>HTTP/1.x</strong>: 加密是可选的（通过HTTP或HTTPS），但非加密的HTTP请求仍然普遍存在。</li><li><strong>HTTP/2</strong>: 大多数实现强制要求使用加密（通过HTTPS），尽管协议本身不强制这一点。现代浏览器和服务器在实际应用中通常要求 HTTP/2 使用 TLS。</li></ul><h3 id="_8-协议扩展性" tabindex="-1"><a class="header-anchor" href="#_8-协议扩展性"><span>8. 协议扩展性</span></a></h3><ul><li><strong>HTTP/1.x</strong>: 由于是文本协议，扩展和添加新功能变得复杂。</li><li><strong>HTTP/2</strong>: 作为二进制协议，HTTP/2 更容易扩展，添加新功能可以通过新帧类型和更复杂的协议操作来实现，而不影响现有的功能。</li></ul><h3 id="_9-性能改进" tabindex="-1"><a class="header-anchor" href="#_9-性能改进"><span>9. 性能改进</span></a></h3><ul><li><strong>HTTP/1.x</strong>: 多个小的请求可能会因为串行化处理导致较高的延迟和低效的带宽利用。</li><li><strong>HTTP/2</strong>: 通过多路复用、头部压缩和服务器推送等功能，HTTP/2 显著降低了延迟，改善了带宽利用，提升了整体性能。</li></ul><h3 id="总结" tabindex="-1"><a class="header-anchor" href="#总结"><span>总结</span></a></h3><table><thead><tr><th>特性</th><th>HTTP/1.x</th><th>HTTP/2</th></tr></thead><tbody><tr><td>协议类型</td><td>基于纯文本</td><td>基于二进制</td></tr><tr><td>连接管理</td><td>每个请求通常需要一个TCP连接</td><td>单个连接处理多个并发请求</td></tr><tr><td>多路复用</td><td>不支持（有头部阻塞问题）</td><td>支持</td></tr><tr><td>头部压缩</td><td>不支持</td><td>使用HPACK算法进行压缩</td></tr><tr><td>服务器推送</td><td>不支持</td><td>支持</td></tr><tr><td>优先级和流控制</td><td>不支持</td><td>支持</td></tr><tr><td>加密和安全</td><td>可选（但非强制）</td><td>大多数实现要求加密（HTTPS）</td></tr><tr><td>协议扩展性</td><td>扩展复杂</td><td>更容易扩展</td></tr><tr><td>性能</td><td>受限于串行化处理和头部阻塞</td><td>显著提升（多路复用、压缩、推送）</td></tr></tbody></table><p>HTTP/2 带来了显著的改进和优化，使得网络应用能够更高效地传输数据，提升了用户体验和网络性能。</p><h2 id="查看系统中已有的veth设备对或确认已创建的veth设备对-可以使用以下几种方法" tabindex="-1"><a class="header-anchor" href="#查看系统中已有的veth设备对或确认已创建的veth设备对-可以使用以下几种方法"><span>查看系统中已有的veth设备对或确认已创建的veth设备对，可以使用以下几种方法：</span></a></h2><h3 id="使用-ip-命令" tabindex="-1"><a class="header-anchor" href="#使用-ip-命令"><span>使用 <code>ip</code> 命令</span></a></h3><p><code>ip</code> 命令是查看和管理网络设备的主要工具：</p><ol><li><p><strong>列出所有网络接口</strong>：</p><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">ip</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> link</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> show</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>该命令会列出系统中所有的网络接口，包括veth设备对。</p></li><li><p><strong>过滤veth设备</strong>：</p><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">ip</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> link</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> show</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;"> grep</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> veth</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>通过<code>grep</code>过滤出veth设备。</p></li></ol><h3 id="使用-ifconfig-命令" tabindex="-1"><a class="header-anchor" href="#使用-ifconfig-命令"><span>使用 <code>ifconfig</code> 命令</span></a></h3><p><code>ifconfig</code>命令也可以用于查看网络接口：</p><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">ifconfig</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>同样，可以使用<code>grep</code>过滤出veth设备：</p><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">ifconfig</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;"> grep</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> veth</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="查看具体veth设备对的详细信息" tabindex="-1"><a class="header-anchor" href="#查看具体veth设备对的详细信息"><span>查看具体veth设备对的详细信息</span></a></h3><p>可以使用以下命令查看某个veth设备对的详细信息：</p><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">ip</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> link</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> show</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> veth0</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="示例" tabindex="-1"><a class="header-anchor" href="#示例"><span>示例</span></a></h3><p>假设创建了一个veth设备对：</p><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">ip</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> link</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> add</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> veth0</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> type</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> veth</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> peer</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> name</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> veth1</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>然后，可以使用以下命令查看：</p><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">ip</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> link</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> show</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;"> grep</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> veth</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>输出可能类似于：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>10: veth0@veth1: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc noqueue state UNKNOWN mode DEFAULT group default qlen 1000</span></span>
<span class="line"><span>11: veth1@veth0: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc noqueue state UNKNOWN mode DEFAULT group default qlen 1000</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>这表明<code>veth0</code>和<code>veth1</code>是一对互相连接的虚拟以太网设备。</p><h3 id="检查命名空间中的veth设备" tabindex="-1"><a class="header-anchor" href="#检查命名空间中的veth设备"><span>检查命名空间中的veth设备</span></a></h3><p>如果将veth设备移动到不同的命名空间，可以使用以下命令查看特定命名空间中的网络接口：</p><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">ip</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> netns</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> exec</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> ns1</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> ip</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> link</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> show</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">ip</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> netns</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> exec</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> ns1</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> ip</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> link</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> show</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">1:</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> lo:</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">LOOPBAC</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">K</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> mtu</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 65536</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> qdisc</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> noop</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> state</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> DOWN</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> mode</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> DEFAULT</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> group</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> default</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> qlen</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 1000</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">    link/loopback</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> 00:00:00:00:00:00</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> brd</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> 00:00:00:00:00:00</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">28:</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> veth1@if29:</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">BROADCAST,MULTICAST,UP,LOWER_U</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">P</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> mtu</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 1500</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> qdisc</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> noqueue</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> state</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> UP</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> mode</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> DEFAULT</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> group</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> default</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> qlen</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 1000</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">    link/ether</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> 52:7e:e0:b6:47:d2</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> brd</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> ff:ff:ff:ff:ff:ff</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> link-netnsid</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 0</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">ip</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> netns</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> exec</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> ns1</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> ip</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> a</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">1:</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> lo:</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">LOOPBAC</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">K</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> mtu</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 65536</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> qdisc</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> noop</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> state</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> DOWN</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> group</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> default</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> qlen</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 1000</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">    link/loopback</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> 00:00:00:00:00:00</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> brd</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> 00:00:00:00:00:00</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">28:</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> veth1@if29:</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">BROADCAST,MULTICAST,UP,LOWER_U</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">P</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> mtu</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 1500</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> qdisc</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> noqueue</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> state</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> UP</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> group</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> default</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> qlen</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 1000</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">    link/ether</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> 52:7e:e0:b6:47:d2</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> brd</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> ff:ff:ff:ff:ff:ff</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> link-netnsid</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 0</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">    inet</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> 192.168.1.2/24</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> scope</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> global</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> veth1</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">       valid_lft</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> forever</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> preferred_lft</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> forever</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">    inet6</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> fe80::507e:e0ff:feb6:47d2/64</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> scope</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> link</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">       valid_lft</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> forever</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> preferred_lft</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> forever</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>假设<code>veth1</code>被移动到命名空间<code>ns1</code>，可以在<code>ns1</code>命名空间中看到它。</p><p>通过这些命令，可以方便地查看和管理系统中的veth设备对。</p><h2 id="vlan-与vxlan" tabindex="-1"><a class="header-anchor" href="#vlan-与vxlan"><span>VLAN 与VXLAN</span></a></h2><p>VLAN（Virtual Local Area Network）和VXLAN（Virtual Extensible LAN）是两种用于网络分段和虚拟化的技术，它们各自有不同的应用场景和特点。以下是对它们的解析：</p><h3 id="vlan-virtual-local-area-network" tabindex="-1"><a class="header-anchor" href="#vlan-virtual-local-area-network"><span>VLAN（Virtual Local Area Network）</span></a></h3><p>VLAN是一种用于在同一物理网络上创建多个逻辑网络的技术。它的主要特点和用途如下：</p><ol><li><p><strong>网络分段</strong>：通过VLAN，可以将一个物理网络分割成多个逻辑网络，使得不同VLAN之间的通信受到限制，从而提高网络的安全性和性能。</p></li><li><p><strong>标记帧</strong>：VLAN使用IEEE 802.1Q标准，在以太网帧中添加一个4字节的标签，标记帧属于哪个VLAN。</p></li><li><p><strong>VLAN ID</strong>：每个VLAN都有一个唯一的VLAN ID，范围是1到4094。网络设备根据这个ID来区分不同的VLAN。</p></li><li><p><strong>配置简单</strong>：VLAN的配置相对简单，只需要在交换机上配置相关的端口或接口即可。</p></li><li><p><strong>常见用途</strong>：</p><ul><li>提高网络安全性，通过分割网络减少广播域。</li><li>提高网络性能，通过减少广播流量和冲突域。</li><li>提供灵活的网络管理和用户分组。</li></ul></li></ol><h3 id="vxlan-virtual-extensible-lan" tabindex="-1"><a class="header-anchor" href="#vxlan-virtual-extensible-lan"><span>VXLAN（Virtual Extensible LAN）</span></a></h3><p>VXLAN是一种用于在大规模数据中心和云环境中创建虚拟网络的技术。它的主要特点和用途如下：</p><ol><li><p><strong>扩展性</strong>：VXLAN使用24位的VNI（VXLAN Network Identifier），理论上支持多达1600万个虚拟网络，大大超过了VLAN的4094个限制。</p></li><li><p><strong>基于隧道</strong>：VXLAN通过UDP隧道封装，将二层以太网帧封装在三层IP包中，从而可以跨越传统的二层边界在IP网络上传输。</p></li><li><p><strong>分布式架构</strong>：VXLAN适用于大规模的分布式数据中心环境，支持跨多个物理位置的虚拟机迁移和负载均衡。</p></li><li><p><strong>网络虚拟化</strong>：VXLAN可以在现有的IP网络基础上创建虚拟网络，使得虚拟机和容器之间的通信更加灵活和高效。</p></li><li><p><strong>常见用途</strong>：</p><ul><li>数据中心和云环境中的大规模虚拟化网络。</li><li>跨多个数据中心的虚拟机迁移和高可用性。</li><li>支持多租户环境，每个租户可以有独立的虚拟网络。</li></ul></li></ol><h3 id="对比" tabindex="-1"><a class="header-anchor" href="#对比"><span>对比</span></a></h3><table><thead><tr><th>特点</th><th>VLAN</th><th>VXLAN</th></tr></thead><tbody><tr><td>标识符</td><td>12位VLAN ID（最多4094个）</td><td>24位VNI（最多1600万个）</td></tr><tr><td>封装层</td><td>二层以太网（IEEE 802.1Q）</td><td>三层IP（UDP隧道封装）</td></tr><tr><td>应用场景</td><td>小规模网络、局域网</td><td>大规模数据中心、云环境、跨数据中心</td></tr><tr><td>配置复杂度</td><td>简单</td><td>较复杂，需要配置隧道端点（VTEP）</td></tr><tr><td>扩展性</td><td>有限，最多4094个VLAN</td><td>高扩展性，支持多达1600万个虚拟网络</td></tr></tbody></table><h3 id="总结-1" tabindex="-1"><a class="header-anchor" href="#总结-1"><span>总结</span></a></h3><p>VLAN适用于较小规模的网络分段和隔离，而VXLAN适用于大规模数据中心和云环境中的网络虚拟化和扩展。它们各自有不同的优缺点和应用场景，根据具体需求选择合适的技术可以提高网络的性能、安全性和管理灵活性。</p><h2 id="vxlan与vtep" tabindex="-1"><a class="header-anchor" href="#vxlan与vtep"><span>VXLAN与VTEP</span></a></h2><h3 id="vxlan-virtual-extensible-lan-1" tabindex="-1"><a class="header-anchor" href="#vxlan-virtual-extensible-lan-1"><span>VXLAN（Virtual Extensible LAN）</span></a></h3><p>VXLAN是一种用于扩展二层网络的技术，特别适合在大型数据中心和云环境中使用。其主要特性包括：</p><ol><li><strong>扩展性</strong>：VXLAN使用24位的VNI（VXLAN Network Identifier），支持多达1600万个虚拟网络，远远超过传统VLAN的4094个限制。</li><li><strong>隧道封装</strong>：VXLAN通过UDP隧道封装将二层以太网帧封装在三层IP包中，从而可以在三层IP网络上进行传输。这种方式允许二层流量跨越不同的三层网络，使得虚拟机可以在不同的物理位置之间自由迁移。</li><li><strong>多租户支持</strong>：VXLAN允许在同一个物理网络基础设施上运行多个独立的虚拟网络，每个虚拟网络可以有自己的VNI，从而支持多租户环境。</li><li><strong>弹性和高可用性</strong>：VXLAN可以在现有的IP网络上实现二层网络的扩展和弹性，支持负载均衡和高可用性。</li></ol><h3 id="vtep-vxlan-tunnel-endpoint" tabindex="-1"><a class="header-anchor" href="#vtep-vxlan-tunnel-endpoint"><span>VTEP（VXLAN Tunnel Endpoint）</span></a></h3><p>VTEP是VXLAN架构中的关键组件，负责VXLAN隧道的端点操作。其主要功能包括：</p><ol><li><strong>隧道端点</strong>：VTEP是VXLAN隧道的起点和终点，负责VXLAN包的封装和解封装。每个VTEP有两个主要接口：一个是连接到传统二层网络的接口，另一个是连接到IP网络的接口。</li><li><strong>封装和解封装</strong>：当VTEP接收到来自二层网络的以太网帧时，它将帧封装在UDP包中，附加上VNI，然后通过IP网络发送到目标VTEP。目标VTEP解封装UDP包，并将以太网帧发送到其二层网络接口。</li><li><strong>VNI映射</strong>：VTEP负责将二层网络中的VLAN ID映射到VXLAN的VNI，从而在VXLAN隧道中维护虚拟网络的隔离和标识。</li><li><strong>MAC地址学习</strong>：VTEP通过监听网络流量和ARP（Address Resolution Protocol）请求，学习和维护虚拟网络中MAC地址到VTEP的映射关系。这类似于传统二层交换机的MAC地址表。</li></ol><h3 id="vxlan-和-vtep-的工作流程" tabindex="-1"><a class="header-anchor" href="#vxlan-和-vtep-的工作流程"><span>VXLAN 和 VTEP 的工作流程</span></a></h3><ol><li><strong>帧封装</strong>：当主机A发送一个以太网帧给主机B时，该帧首先被发送到本地的VTEP。</li><li><strong>VXLAN包封装</strong>：VTEP将该帧封装到一个UDP包中，并附加上对应的VNI。UDP包的源IP和目的IP是VTEP的IP地址。</li><li><strong>通过IP网络传输</strong>：封装好的VXLAN包通过三层IP网络传输到目的VTEP。</li><li><strong>帧解封装</strong>：目的VTEP接收到VXLAN包后，解封装出原始的以太网帧。</li><li><strong>帧传递</strong>：解封装的以太网帧被发送到目标主机B所在的二层网络。</li></ol><h3 id="总结-2" tabindex="-1"><a class="header-anchor" href="#总结-2"><span>总结</span></a></h3><p>VXLAN通过在现有的三层IP网络上创建虚拟二层网络，实现了大规模的数据中心和云环境中的网络虚拟化和扩展。VTEP作为VXLAN架构中的关键组件，负责隧道的端点操作，完成VXLAN包的封装和解封装。VXLAN和VTEP的结合，使得跨越不同物理位置的虚拟机能够像在同一个二层网络中一样进行通信，从而实现了高效、灵活和可扩展的网络架构。</p><h2 id="ip-neigh-show" tabindex="-1"><a class="header-anchor" href="#ip-neigh-show"><span>ip neigh show</span></a></h2><p><code>ip neigh show dev flannel.1</code>命令用于显示指定网络设备（在这里是<code>flannel.1</code>）的邻居表项。邻居表存储了网络设备的邻居节点的信息，包括其IP地址和MAC地址。</p><p>在使用<code>flannel</code>的Kubernetes集群中，<code>flannel.1</code>通常是用于Overlay网络的设备接口。运行这个命令会列出该接口的所有邻居节点的信息。每个邻居节点条目通常包含以下信息：</p><ul><li><strong>IP地址</strong>：邻居节点的IP地址。</li><li><strong>MAC地址</strong>：邻居节点的MAC地址。</li><li><strong>状态</strong>：邻居节点的状态，例如<code>REACHABLE</code>（可达）、<code>STALE</code>（陈旧）、<code>DELAY</code>（延迟）、<code>PROBE</code>（探测）等。</li></ul><p>例如，运行<code>ip neigh show dev flannel.1</code>可能得到以下输出：</p><div class="language-plaintext line-numbers-mode" data-highlighter="shiki" data-ext="plaintext" data-title="plaintext" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>10.244.2.1 dev flannel.1 lladdr 0a:58:0a:f4:02:01 REACHABLE</span></span>
<span class="line"><span>10.244.2.2 dev flannel.1 lladdr 0a:58:0a:f4:02:02 STALE</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>在这个例子中：</p><ul><li><strong>10.244.2.1</strong> 是一个邻居节点的IP地址，<strong>0a:58:0a:f4:02:01</strong> 是其MAC地址，状态是<strong>REACHABLE</strong>。</li><li><strong>10.244.2.2</strong> 是另一个邻居节点的IP地址，<strong>0a:58:0a:f4:02:02</strong> 是其MAC地址，状态是<strong>STALE</strong>。</li></ul><h3 id="总结-3" tabindex="-1"><a class="header-anchor" href="#总结-3"><span>总结</span></a></h3><p><code>ip neigh show dev flannel.1</code>命令用于查看指定设备（如<code>flannel.1</code>）的邻居节点信息，帮助管理员了解当前网络设备与其他节点的连接状态和MAC地址映射情况。这对于排查网络问题和管理网络连接非常有用。</p><h2 id="bridge-fdb-show" tabindex="-1"><a class="header-anchor" href="#bridge-fdb-show"><span>bridge fdb show</span></a></h2><p><code>bridge fdb show</code>命令用于显示Linux桥接设备的前向数据库（Forwarding Database，FDB）。FDB记录了MAC地址与网络接口的映射关系，帮助桥接设备确定数据帧的转发路径。通过这个命令，可以查看桥接设备当前的MAC地址表，了解哪些MAC地址通过哪些接口连接。</p><h3 id="示例输出" tabindex="-1"><a class="header-anchor" href="#示例输出"><span>示例输出</span></a></h3><p>运行<code>bridge fdb show</code>命令的示例输出可能如下所示：</p><div class="language-plaintext line-numbers-mode" data-highlighter="shiki" data-ext="plaintext" data-title="plaintext" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>33:33:00:00:00:01 dev ens3 self permanent</span></span>
<span class="line"><span>01:00:5e:00:00:01 dev ens3 self permanent</span></span>
<span class="line"><span>02:42:ac:11:00:02 dev docker0 vlan 1 master docker0</span></span>
<span class="line"><span>02:42:ac:11:00:03 dev docker0 vlan 1 master docker0</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="输出字段解释" tabindex="-1"><a class="header-anchor" href="#输出字段解释"><span>输出字段解释</span></a></h3><ul><li><strong>MAC地址</strong>：如<code>33:33:00:00:00:01</code>，这是设备的MAC地址。</li><li><strong>dev</strong>：后面跟随的是设备名，如<code>ens3</code>或<code>docker0</code>，表示该MAC地址对应的设备。</li><li><strong>self</strong>：表示该条目是本地接口的MAC地址。</li><li><strong>permanent</strong>：表示该条目是永久性的，而不是动态学习到的。</li><li><strong>vlan</strong>：VLAN ID，表示该条目所属的VLAN。</li><li><strong>master</strong>：表示该设备所属的主设备。</li></ul><h3 id="常用选项" tabindex="-1"><a class="header-anchor" href="#常用选项"><span>常用选项</span></a></h3><ul><li><code>bridge fdb show [dev DEVICE]</code>：显示特定设备的FDB条目。例如，<code>bridge fdb show dev br0</code>显示设备<code>br0</code>的FDB。</li><li><code>bridge fdb show [br BRIDGE]</code>：显示特定桥接设备的FDB条目。</li></ul><h3 id="使用示例" tabindex="-1"><a class="header-anchor" href="#使用示例"><span>使用示例</span></a></h3><ol><li><p><strong>显示所有桥接设备的FDB条目</strong>：</p><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">bridge</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> fdb</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> show</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><p><strong>显示特定设备的FDB条目</strong>：</p><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">bridge</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> fdb</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> show</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> dev</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> br0</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><p><strong>显示特定桥接设备的FDB条目</strong>：</p><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">bridge</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> fdb</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> show</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> br</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> br0</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li></ol><h3 id="总结-4" tabindex="-1"><a class="header-anchor" href="#总结-4"><span>总结</span></a></h3><p><code>bridge fdb show</code>命令用于查看Linux桥接设备的前向数据库，帮助管理员了解网络中MAC地址的分布情况和转发路径。这对于网络故障排查和性能优化非常有用。</p><h2 id="arp协议" tabindex="-1"><a class="header-anchor" href="#arp协议"><span>ARP协议</span></a></h2><p>ARP（Address Resolution Protocol，地址解析协议）是一种用于在IPv4网络中将IP地址解析为物理地址（如MAC地址）的网络协议。它在以太网等局域网环境中起着关键作用，使得设备能够通过IP地址找到目标设备的物理地址，从而进行通信。</p><h3 id="arp-工作原理" tabindex="-1"><a class="header-anchor" href="#arp-工作原理"><span>ARP 工作原理</span></a></h3><ol><li><p><strong>ARP 请求</strong>：</p><ul><li>当设备A需要向设备B发送数据时，它知道设备B的IP地址，但不知道设备B的MAC地址。设备A会先在本地的ARP缓存中查找设备B的IP地址对应的MAC地址。</li><li>如果在ARP缓存中找不到设备B的MAC地址，设备A会广播一条ARP请求帧到网络中。该ARP请求包含设备B的IP地址，并询问“谁是这个IP地址的拥有者？请告诉我你的MAC地址。”</li></ul></li><li><p><strong>ARP 响应</strong>：</p><ul><li>网络中的所有设备都会接收到这个ARP请求帧。当设备B接收到这个ARP请求时，它会检查其中的IP地址。</li><li>如果设备B的IP地址与请求中的IP地址匹配，设备B会发送一条ARP响应帧。该响应帧包含设备B的MAC地址，并单播发送给设备A。</li></ul></li><li><p><strong>更新ARP缓存</strong>：</p><ul><li>设备A接收到设备B的ARP响应后，会将设备B的IP地址和MAC地址映射关系存储在本地的ARP缓存中，以便后续通信时可以直接使用，而无需再次发送ARP请求。</li></ul></li></ol><h3 id="arp-报文格式" tabindex="-1"><a class="header-anchor" href="#arp-报文格式"><span>ARP 报文格式</span></a></h3><p>ARP报文包含两个主要部分：ARP请求和ARP响应。其报文格式如下：</p><ul><li>硬件类型（Hardware Type）：通常为1，表示以太网。</li><li>协议类型（Protocol Type）：通常为0x0800，表示IPv4。</li><li>硬件地址长度（Hardware Address Length）：表示硬件地址的长度，通常为6（MAC地址长度）。</li><li>协议地址长度（Protocol Address Length）：表示协议地址的长度，通常为4（IPv4地址长度）。</li><li>操作码（Operation Code）：1表示ARP请求，2表示ARP响应。</li><li>发送方硬件地址（Sender Hardware Address）：发送设备的MAC地址。</li><li>发送方协议地址（Sender Protocol Address）：发送设备的IP地址。</li><li>目标硬件地址（Target Hardware Address）：目标设备的MAC地址（ARP请求中该字段为空）。</li><li>目标协议地址（Target Protocol Address）：目标设备的IP地址。</li></ul><h3 id="arp-缓存" tabindex="-1"><a class="header-anchor" href="#arp-缓存"><span>ARP 缓存</span></a></h3><p>为了提高效率，设备会将最近解析的IP地址和MAC地址映射关系存储在ARP缓存中。ARP缓存中的条目通常有一个生存时间（TTL），超过该时间后条目将被删除，以保证ARP缓存的最新性。</p><h3 id="arp的安全问题" tabindex="-1"><a class="header-anchor" href="#arp的安全问题"><span>ARP的安全问题</span></a></h3><p>ARP协议本身没有安全机制，因此容易受到ARP欺骗（ARP Spoofing）攻击。攻击者可以发送伪造的ARP响应，将其MAC地址伪装成另一个设备的MAC地址，从而拦截或篡改网络通信。</p><h3 id="arp欺骗的防御措施" tabindex="-1"><a class="header-anchor" href="#arp欺骗的防御措施"><span>ARP欺骗的防御措施</span></a></h3><ul><li><strong>静态ARP表</strong>：手动配置IP地址和MAC地址的映射，防止ARP欺骗。</li><li><strong>ARP检测</strong>：使用网络设备（如交换机）提供的ARP检测功能，过滤掉伪造的ARP报文。</li><li><strong>VPN</strong>：通过虚拟专用网络（VPN）加密通信，防止中间人攻击。</li></ul><h3 id="总结-5" tabindex="-1"><a class="header-anchor" href="#总结-5"><span>总结</span></a></h3><p>ARP协议在IPv4网络中起到了关键的地址解析作用，使设备能够通过IP地址找到目标设备的MAC地址，从而进行通信。虽然ARP协议本身存在安全隐患，但通过适当的防御措施可以有效防止ARP欺骗攻击。</p><h2 id="bgp协议" tabindex="-1"><a class="header-anchor" href="#bgp协议"><span>BGP协议</span></a></h2><p>BGP（Border Gateway Protocol，边界网关协议）是互联网核心路由协议，用于在不同自治系统（AS, Autonomous Systems）之间交换路由信息。BGP是唯一能够处理互联网中如此大规模路由的协议，被广泛应用于ISP（互联网服务提供商）、大型企业和数据中心网络中。</p><h3 id="bgp-的主要特性和工作原理" tabindex="-1"><a class="header-anchor" href="#bgp-的主要特性和工作原理"><span>BGP 的主要特性和工作原理</span></a></h3><ol><li><p><strong>自治系统（AS）</strong>：</p><ul><li>一个AS是一组由同一管理实体管理的IP网络和路由器。每个AS都有一个唯一的AS编号（ASN）。</li></ul></li><li><p><strong>BGP 会话</strong>：</p><ul><li>BGP运行在TCP之上（端口179），通过建立BGP会话来交换路由信息。这些会话通常是静态配置的，由网络管理员手动设置。</li></ul></li><li><p><strong>路径向量协议</strong>：</p><ul><li>BGP是一种路径向量协议，通过维护到达每个目标网络的路径信息来选择最佳路径。路径信息包括多个AS路径，以避免环路。</li></ul></li><li><p><strong>路由选择</strong>：</p><ul><li>BGP使用一套复杂的路由选择规则来确定最佳路径。这些规则包括： <ul><li>最短的AS路径</li><li>优先级最高的本地优先级（local preference）</li><li>最小的多出口判别器（MED, Multi-Exit Discriminator）</li><li>最稳定的路径（考虑路由抖动）</li><li>最小的路由器ID</li></ul></li></ul></li><li><p><strong>策略控制</strong>：</p><ul><li>BGP允许网络管理员基于策略控制路由选择和路由传播。管理员可以设置各种策略，例如路由过滤、路由聚合和路由优先级，以满足特定的网络需求。</li></ul></li><li><p><strong>类型</strong>：</p><ul><li>iBGP（内部BGP）：在同一AS内的路由器之间运行，用于传播内部路由信息。</li><li>eBGP（外部BGP）：在不同AS之间的路由器之间运行，用于交换外部路由信息。</li></ul></li></ol><h3 id="bgp-的工作过程" tabindex="-1"><a class="header-anchor" href="#bgp-的工作过程"><span>BGP 的工作过程</span></a></h3><ol><li><p><strong>建立BGP会话</strong>：</p><ul><li>两个BGP路由器（称为BGP对等体或邻居）首先建立TCP连接，然后交换BGP OPEN消息以建立BGP会话。</li></ul></li><li><p><strong>交换路由信息</strong>：</p><ul><li>一旦会话建立，BGP对等体之间就开始交换完整的BGP路由表。之后，路由器仅在路由信息发生变化时交换更新。</li></ul></li><li><p><strong>路由传播</strong>：</p><ul><li>BGP路由器根据接收到的路由信息更新其路由表，并根据策略决定是否将这些路由信息传播给其他对等体。</li></ul></li><li><p><strong>路由更新和撤销</strong>：</p><ul><li>当网络拓扑发生变化时，BGP路由器会发送路由更新（UPDATE）或撤销（WITHDRAW）消息，以通知其他对等体。</li></ul></li></ol><h3 id="bgp-的优势和挑战" tabindex="-1"><a class="header-anchor" href="#bgp-的优势和挑战"><span>BGP 的优势和挑战</span></a></h3><h4 id="优势" tabindex="-1"><a class="header-anchor" href="#优势"><span>优势：</span></a></h4><ul><li><strong>可扩展性</strong>：BGP能够处理大量的路由信息，非常适合大规模的网络环境。</li><li><strong>灵活性</strong>：BGP允许管理员根据特定需求配置路由策略。</li><li><strong>稳定性</strong>：BGP设计用于在大型、复杂的网络环境中保持稳定和高效。</li></ul><h4 id="挑战" tabindex="-1"><a class="header-anchor" href="#挑战"><span>挑战：</span></a></h4><ul><li><strong>复杂性</strong>：BGP配置和管理相对复杂，需要深入的网络知识。</li><li><strong>收敛时间</strong>：BGP在处理大型网络拓扑变化时的收敛时间较长。</li><li><strong>安全性</strong>：BGP缺乏内置的安全机制，需要额外的配置和措施来防止路由劫持和攻击。</li></ul><h3 id="总结-6" tabindex="-1"><a class="header-anchor" href="#总结-6"><span>总结</span></a></h3><p>BGP是互联网的关键路由协议，负责在不同AS之间交换路由信息。它的路径向量机制、策略控制能力和高可扩展性使其成为管理互联网复杂路由需求的理想选择。然而，BGP的配置和管理也相对复杂，需要专业知识和经验。</p><h2 id="ifconfig、ip-a、ip-link、ip-route-和-iptables-是网络管理中常用的命令。它们各自有不同的功能-但一起使用时可以全面管理和配置网络接口、路由和防火墙规则。以下是这些命令的功能及其关系的详细介绍" tabindex="-1"><a class="header-anchor" href="#ifconfig、ip-a、ip-link、ip-route-和-iptables-是网络管理中常用的命令。它们各自有不同的功能-但一起使用时可以全面管理和配置网络接口、路由和防火墙规则。以下是这些命令的功能及其关系的详细介绍"><span><code>ifconfig</code>、<code>ip a</code>、<code>ip link</code>、<code>ip route</code> 和 <code>iptables</code> 是网络管理中常用的命令。它们各自有不同的功能，但一起使用时可以全面管理和配置网络接口、路由和防火墙规则。以下是这些命令的功能及其关系的详细介绍：</span></a></h2><h3 id="ifconfig" tabindex="-1"><a class="header-anchor" href="#ifconfig"><span><code>ifconfig</code></span></a></h3><h4 id="功能" tabindex="-1"><a class="header-anchor" href="#功能"><span>功能：</span></a></h4><p><code>ifconfig</code> 是一个传统的工具，用于配置网络接口。它可以查看和修改接口配置，包括 IP 地址、子网掩码、广播地址等。</p><h4 id="用法" tabindex="-1"><a class="header-anchor" href="#用法"><span>用法：</span></a></h4><ul><li>查看网络接口信息：<div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">ifconfig</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li>启用或禁用接口：<div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> ifconfig</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> eth0</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> up</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> ifconfig</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> eth0</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> down</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div></li><li>配置 IP 地址：<div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> ifconfig</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> eth0</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 192.168.1.100</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> netmask</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 255.255.255.0</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li></ul><h3 id="ip-a-也称-ip-addr" tabindex="-1"><a class="header-anchor" href="#ip-a-也称-ip-addr"><span><code>ip a</code> (也称 <code>ip addr</code>)</span></a></h3><h4 id="功能-1" tabindex="-1"><a class="header-anchor" href="#功能-1"><span>功能：</span></a></h4><p><code>ip a</code> 是 <code>ip</code> 命令套件的一部分，用于显示或修改网络接口的地址信息。相比 <code>ifconfig</code>，<code>ip</code> 提供了更丰富和更强大的功能。</p><h4 id="用法-1" tabindex="-1"><a class="header-anchor" href="#用法-1"><span>用法：</span></a></h4><ul><li>查看所有接口的地址信息：<div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">ip</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> a</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li></ul><h3 id="ip-link" tabindex="-1"><a class="header-anchor" href="#ip-link"><span><code>ip link</code></span></a></h3><h4 id="功能-2" tabindex="-1"><a class="header-anchor" href="#功能-2"><span>功能：</span></a></h4><p><code>ip link</code> 是 <code>ip</code> 命令套件的一部分，用于显示和修改网络接口的属性。</p><h4 id="用法-2" tabindex="-1"><a class="header-anchor" href="#用法-2"><span>用法：</span></a></h4><ul><li>查看所有接口的链路状态：<div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">ip</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> link</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> show</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li>启用或禁用接口：<div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> ip</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> link</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> set</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> eth0</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> up</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> ip</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> link</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> set</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> eth0</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> down</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h3 id="ip-route" tabindex="-1"><a class="header-anchor" href="#ip-route"><span><code>ip route</code></span></a></h3><h4 id="功能-3" tabindex="-1"><a class="header-anchor" href="#功能-3"><span>功能：</span></a></h4><p><code>ip route</code> 用于显示和管理路由表。它可以添加、删除和查看路由规则。</p><h4 id="用法-3" tabindex="-1"><a class="header-anchor" href="#用法-3"><span>用法：</span></a></h4><ul><li>查看当前的路由表：<div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">ip</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> route</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> show</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li>添加路由：<div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> ip</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> route</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> add</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> 192.168.2.0/24</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> via</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 192.168.1.1</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> dev</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> eth0</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li>删除路由：<div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> ip</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> route</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> del</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> 192.168.2.0/24</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li></ul><h3 id="iptables" tabindex="-1"><a class="header-anchor" href="#iptables"><span><code>iptables</code></span></a></h3><h4 id="功能-4" tabindex="-1"><a class="header-anchor" href="#功能-4"><span>功能：</span></a></h4><p><code>iptables</code> 是一个用户空间实用程序，用于配置 Linux 内核防火墙实现（在 <code>netfilter</code> 框架下）。它用于管理入站、出站和转发的数据包过滤规则。</p><h4 id="用法-4" tabindex="-1"><a class="header-anchor" href="#用法-4"><span>用法：</span></a></h4><ul><li>查看所有规则：<div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> iptables</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> -L</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> -v</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> -n</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li>添加规则：<div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> iptables</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> -A</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> INPUT</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> -p</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> tcp</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> --dport</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 22</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> -j</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> ACCEPT</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li>删除规则：<div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> iptables</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> -D</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> INPUT</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> -p</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> tcp</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> --dport</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 22</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> -j</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> ACCEPT</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li></ul><h3 id="关系" tabindex="-1"><a class="header-anchor" href="#关系"><span>关系</span></a></h3><p>这些命令一起使用可以全面管理和配置网络：</p><ul><li><strong>接口配置</strong>：使用 <code>ifconfig</code>、<code>ip a</code> 和 <code>ip link</code> 可以查看和配置网络接口的状态和地址。</li><li><strong>路由管理</strong>：使用 <code>ip route</code> 可以添加、删除和查看路由规则，决定数据包如何在网络中转发。</li><li><strong>防火墙规则</strong>：使用 <code>iptables</code> 可以设置防火墙规则，控制数据包的流入、流出和转发。</li></ul><p><code>ifconfig</code> 是一个较老的工具，功能相对有限，但在某些系统上仍然可用。<code>ip</code> 命令套件（包括 <code>ip a</code>、<code>ip link</code> 和 <code>ip route</code>）是现代的、功能更强大的替代品。<code>iptables</code> 提供了强大的防火墙配置能力，可以与 <code>ip</code> 命令一起使用，实现全面的网络管理。</p><h2 id="七层网络模型" tabindex="-1"><a class="header-anchor" href="#七层网络模型"><span>七层网络模型</span></a></h2><p>七层网络模型，也称为OSI（开放系统互连）模型，是由国际标准化组织（ISO）制定的一种网络通信标准框架。它将网络通信过程划分为七个层次，每个层次都有其特定的功能和协议。以下是七层网络模型的详细介绍：</p><h3 id="_1-物理层-physical-layer" tabindex="-1"><a class="header-anchor" href="#_1-物理层-physical-layer"><span>1. 物理层（Physical Layer）</span></a></h3><ul><li><strong>功能</strong>：负责在物理介质上传输比特流，包括定义硬件设备的电气、机械、过程和功能特性。</li><li><strong>协议和设备</strong>：电缆、网卡、集线器（Hub）、传输介质（如双绞线、光纤）等。</li></ul><h3 id="_2-数据链路层-data-link-layer" tabindex="-1"><a class="header-anchor" href="#_2-数据链路层-data-link-layer"><span>2. 数据链路层（Data Link Layer）</span></a></h3><ul><li><strong>功能</strong>：提供节点之间的可靠数据传输，负责帧的创建、传输、错误检测和纠正。</li><li><strong>协议和设备</strong>：以太网（Ethernet）、Wi-Fi（802.11）、交换机（Switch）、网桥（Bridge）等。</li></ul><h3 id="_3-网络层-network-layer" tabindex="-1"><a class="header-anchor" href="#_3-网络层-network-layer"><span>3. 网络层（Network Layer）</span></a></h3><ul><li><strong>功能</strong>：负责逻辑地址的管理和数据包的路由选择，确保数据包从源节点到达目标节点。</li><li><strong>协议和设备</strong>：IP（互联网协议）、ICMP（Internet Control Message Protocol）、路由器（Router）等。</li></ul><h3 id="_4-传输层-transport-layer" tabindex="-1"><a class="header-anchor" href="#_4-传输层-transport-layer"><span>4. 传输层（Transport Layer）</span></a></h3><ul><li><strong>功能</strong>：提供端到端的通信服务，确保数据在主机之间可靠、有序地传输。主要负责流量控制、数据分段和重组、错误检测和恢复。</li><li><strong>协议和设备</strong>：TCP（传输控制协议）、UDP（用户数据报协议）。</li></ul><h3 id="_5-会话层-session-layer" tabindex="-1"><a class="header-anchor" href="#_5-会话层-session-layer"><span>5. 会话层（Session Layer）</span></a></h3><ul><li><strong>功能</strong>：管理应用程序之间的会话，负责建立、管理和终止会话。它还提供同步和对话控制。</li><li><strong>协议和设备</strong>：NetBIOS、RPC（远程过程调用）。</li></ul><h3 id="_6-表示层-presentation-layer" tabindex="-1"><a class="header-anchor" href="#_6-表示层-presentation-layer"><span>6. 表示层（Presentation Layer）</span></a></h3><ul><li><strong>功能</strong>：负责数据格式的转换和表示，包括数据加密、解密、压缩和解压缩。确保不同系统间的数据格式一致。</li><li><strong>协议和设备</strong>：SSL/TLS（安全套接层/传输层安全）、JPEG、MPEG、GIF。</li></ul><h3 id="_7-应用层-application-layer" tabindex="-1"><a class="header-anchor" href="#_7-应用层-application-layer"><span>7. 应用层（Application Layer）</span></a></h3><ul><li><strong>功能</strong>：提供网络服务和应用程序接口，是用户与网络交互的界面。负责识别通信伙伴、资源分配和同步通信。</li><li><strong>协议和设备</strong>：HTTP（超文本传输协议）、FTP（文件传输协议）、SMTP（简单邮件传输协议）、DNS（域名系统）等。</li></ul><h3 id="各层之间的关系" tabindex="-1"><a class="header-anchor" href="#各层之间的关系"><span>各层之间的关系</span></a></h3><ul><li><strong>层次依赖</strong>：每一层依赖于下一层提供的服务。例如，传输层依赖于网络层提供的路由和地址服务。</li><li><strong>封装和解封装</strong>：当数据从发送端传输到接收端时，每一层会添加或移除相应的协议头。这种过程称为封装和解封装。</li></ul><h3 id="应用示例" tabindex="-1"><a class="header-anchor" href="#应用示例"><span>应用示例</span></a></h3><ul><li><strong>网页浏览</strong>：用户在浏览器中输入网址，应用层的HTTP协议将请求传递到传输层的TCP协议，TCP将数据包分段并传递到网络层的IP协议，IP协议进行路由选择，将数据包通过数据链路层和物理层传输到目标服务器。服务器接收到数据后，逆向处理，最终将网页内容展示给用户。</li></ul><h3 id="总结-7" tabindex="-1"><a class="header-anchor" href="#总结-7"><span>总结</span></a></h3><p>OSI模型通过将网络通信过程划分为七个独立的层次，使得网络设计和实现更加模块化和清晰。这种分层模型有助于不同网络设备和协议的互操作性和标准化，从而促进了网络技术的发展和普及。</p>`,174),t=[n];function h(r,d){return a(),s("div",null,t)}const k=i(l,[["render",h],["__file","计算机网络.html.vue"]]),o=JSON.parse('{"path":"/%E6%8A%80%E6%9C%AF%E7%A7%91%E6%99%AE/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C.html","title":"计算机网络","lang":"zh-CN","frontmatter":{"date":"2024-07-08T00:00:00.000Z","title":"计算机网络","category":["网络"],"tag":["http"],"description":"http2与http1区别? HTTP/2 是对 HTTP/1.x 协议的重大升级，旨在提高网络性能和效率。以下是 HTTP/2 相对于 HTTP/1 的一些关键区别和改进： 1. 协议基础 HTTP/1.x: 基于纯文本的协议，使用新行符分隔的文本消息进行通信。 HTTP/2: 基于二进制的协议，使用二进制帧传输数据，更高效地解析和传输数据。 2. ...","head":[["meta",{"property":"og:url","content":"https://mousesun846.github.io/KnowledgeBlog/KnowledgeBlog/%E6%8A%80%E6%9C%AF%E7%A7%91%E6%99%AE/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C.html"}],["meta",{"property":"og:site_name","content":"知识笔记"}],["meta",{"property":"og:title","content":"计算机网络"}],["meta",{"property":"og:description","content":"http2与http1区别? HTTP/2 是对 HTTP/1.x 协议的重大升级，旨在提高网络性能和效率。以下是 HTTP/2 相对于 HTTP/1 的一些关键区别和改进： 1. 协议基础 HTTP/1.x: 基于纯文本的协议，使用新行符分隔的文本消息进行通信。 HTTP/2: 基于二进制的协议，使用二进制帧传输数据，更高效地解析和传输数据。 2. ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-07-22T07:15:28.000Z"}],["meta",{"property":"article:author","content":"MouseSun"}],["meta",{"property":"article:tag","content":"http"}],["meta",{"property":"article:published_time","content":"2024-07-08T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-07-22T07:15:28.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"计算机网络\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-07-08T00:00:00.000Z\\",\\"dateModified\\":\\"2024-07-22T07:15:28.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"MouseSun\\",\\"url\\":\\"https://github.com/MouseSun846\\",\\"email\\":\\"\\"}]}"]]},"headers":[{"level":3,"title":"1. 协议基础","slug":"_1-协议基础","link":"#_1-协议基础","children":[]},{"level":3,"title":"2. 连接管理","slug":"_2-连接管理","link":"#_2-连接管理","children":[]},{"level":3,"title":"3. 多路复用","slug":"_3-多路复用","link":"#_3-多路复用","children":[]},{"level":3,"title":"4. 头部压缩","slug":"_4-头部压缩","link":"#_4-头部压缩","children":[]},{"level":3,"title":"5. 服务器推送","slug":"_5-服务器推送","link":"#_5-服务器推送","children":[]},{"level":3,"title":"6. 优先级和流控制","slug":"_6-优先级和流控制","link":"#_6-优先级和流控制","children":[]},{"level":3,"title":"7. 加密和安全","slug":"_7-加密和安全","link":"#_7-加密和安全","children":[]},{"level":3,"title":"8. 协议扩展性","slug":"_8-协议扩展性","link":"#_8-协议扩展性","children":[]},{"level":3,"title":"9. 性能改进","slug":"_9-性能改进","link":"#_9-性能改进","children":[]},{"level":3,"title":"总结","slug":"总结","link":"#总结","children":[]},{"level":2,"title":"查看系统中已有的veth设备对或确认已创建的veth设备对，可以使用以下几种方法：","slug":"查看系统中已有的veth设备对或确认已创建的veth设备对-可以使用以下几种方法","link":"#查看系统中已有的veth设备对或确认已创建的veth设备对-可以使用以下几种方法","children":[{"level":3,"title":"使用 ip 命令","slug":"使用-ip-命令","link":"#使用-ip-命令","children":[]},{"level":3,"title":"使用 ifconfig 命令","slug":"使用-ifconfig-命令","link":"#使用-ifconfig-命令","children":[]},{"level":3,"title":"查看具体veth设备对的详细信息","slug":"查看具体veth设备对的详细信息","link":"#查看具体veth设备对的详细信息","children":[]},{"level":3,"title":"示例","slug":"示例","link":"#示例","children":[]},{"level":3,"title":"检查命名空间中的veth设备","slug":"检查命名空间中的veth设备","link":"#检查命名空间中的veth设备","children":[]}]},{"level":2,"title":"VLAN 与VXLAN","slug":"vlan-与vxlan","link":"#vlan-与vxlan","children":[{"level":3,"title":"VLAN（Virtual Local Area Network）","slug":"vlan-virtual-local-area-network","link":"#vlan-virtual-local-area-network","children":[]},{"level":3,"title":"VXLAN（Virtual Extensible LAN）","slug":"vxlan-virtual-extensible-lan","link":"#vxlan-virtual-extensible-lan","children":[]},{"level":3,"title":"对比","slug":"对比","link":"#对比","children":[]},{"level":3,"title":"总结","slug":"总结-1","link":"#总结-1","children":[]}]},{"level":2,"title":"VXLAN与VTEP","slug":"vxlan与vtep","link":"#vxlan与vtep","children":[{"level":3,"title":"VXLAN（Virtual Extensible LAN）","slug":"vxlan-virtual-extensible-lan-1","link":"#vxlan-virtual-extensible-lan-1","children":[]},{"level":3,"title":"VTEP（VXLAN Tunnel Endpoint）","slug":"vtep-vxlan-tunnel-endpoint","link":"#vtep-vxlan-tunnel-endpoint","children":[]},{"level":3,"title":"VXLAN 和 VTEP 的工作流程","slug":"vxlan-和-vtep-的工作流程","link":"#vxlan-和-vtep-的工作流程","children":[]},{"level":3,"title":"总结","slug":"总结-2","link":"#总结-2","children":[]}]},{"level":2,"title":"ip neigh show","slug":"ip-neigh-show","link":"#ip-neigh-show","children":[{"level":3,"title":"总结","slug":"总结-3","link":"#总结-3","children":[]}]},{"level":2,"title":"bridge fdb show","slug":"bridge-fdb-show","link":"#bridge-fdb-show","children":[{"level":3,"title":"示例输出","slug":"示例输出","link":"#示例输出","children":[]},{"level":3,"title":"输出字段解释","slug":"输出字段解释","link":"#输出字段解释","children":[]},{"level":3,"title":"常用选项","slug":"常用选项","link":"#常用选项","children":[]},{"level":3,"title":"使用示例","slug":"使用示例","link":"#使用示例","children":[]},{"level":3,"title":"总结","slug":"总结-4","link":"#总结-4","children":[]}]},{"level":2,"title":"ARP协议","slug":"arp协议","link":"#arp协议","children":[{"level":3,"title":"ARP 工作原理","slug":"arp-工作原理","link":"#arp-工作原理","children":[]},{"level":3,"title":"ARP 报文格式","slug":"arp-报文格式","link":"#arp-报文格式","children":[]},{"level":3,"title":"ARP 缓存","slug":"arp-缓存","link":"#arp-缓存","children":[]},{"level":3,"title":"ARP的安全问题","slug":"arp的安全问题","link":"#arp的安全问题","children":[]},{"level":3,"title":"ARP欺骗的防御措施","slug":"arp欺骗的防御措施","link":"#arp欺骗的防御措施","children":[]},{"level":3,"title":"总结","slug":"总结-5","link":"#总结-5","children":[]}]},{"level":2,"title":"BGP协议","slug":"bgp协议","link":"#bgp协议","children":[{"level":3,"title":"BGP 的主要特性和工作原理","slug":"bgp-的主要特性和工作原理","link":"#bgp-的主要特性和工作原理","children":[]},{"level":3,"title":"BGP 的工作过程","slug":"bgp-的工作过程","link":"#bgp-的工作过程","children":[]},{"level":3,"title":"BGP 的优势和挑战","slug":"bgp-的优势和挑战","link":"#bgp-的优势和挑战","children":[]},{"level":3,"title":"总结","slug":"总结-6","link":"#总结-6","children":[]}]},{"level":2,"title":"ifconfig、ip a、ip link、ip route 和 iptables 是网络管理中常用的命令。它们各自有不同的功能，但一起使用时可以全面管理和配置网络接口、路由和防火墙规则。以下是这些命令的功能及其关系的详细介绍：","slug":"ifconfig、ip-a、ip-link、ip-route-和-iptables-是网络管理中常用的命令。它们各自有不同的功能-但一起使用时可以全面管理和配置网络接口、路由和防火墙规则。以下是这些命令的功能及其关系的详细介绍","link":"#ifconfig、ip-a、ip-link、ip-route-和-iptables-是网络管理中常用的命令。它们各自有不同的功能-但一起使用时可以全面管理和配置网络接口、路由和防火墙规则。以下是这些命令的功能及其关系的详细介绍","children":[{"level":3,"title":"ifconfig","slug":"ifconfig","link":"#ifconfig","children":[]},{"level":3,"title":"ip a (也称 ip addr)","slug":"ip-a-也称-ip-addr","link":"#ip-a-也称-ip-addr","children":[]},{"level":3,"title":"ip link","slug":"ip-link","link":"#ip-link","children":[]},{"level":3,"title":"ip route","slug":"ip-route","link":"#ip-route","children":[]},{"level":3,"title":"iptables","slug":"iptables","link":"#iptables","children":[]},{"level":3,"title":"关系","slug":"关系","link":"#关系","children":[]}]},{"level":2,"title":"七层网络模型","slug":"七层网络模型","link":"#七层网络模型","children":[{"level":3,"title":"1. 物理层（Physical Layer）","slug":"_1-物理层-physical-layer","link":"#_1-物理层-physical-layer","children":[]},{"level":3,"title":"2. 数据链路层（Data Link Layer）","slug":"_2-数据链路层-data-link-layer","link":"#_2-数据链路层-data-link-layer","children":[]},{"level":3,"title":"3. 网络层（Network Layer）","slug":"_3-网络层-network-layer","link":"#_3-网络层-network-layer","children":[]},{"level":3,"title":"4. 传输层（Transport Layer）","slug":"_4-传输层-transport-layer","link":"#_4-传输层-transport-layer","children":[]},{"level":3,"title":"5. 会话层（Session Layer）","slug":"_5-会话层-session-layer","link":"#_5-会话层-session-layer","children":[]},{"level":3,"title":"6. 表示层（Presentation Layer）","slug":"_6-表示层-presentation-layer","link":"#_6-表示层-presentation-layer","children":[]},{"level":3,"title":"7. 应用层（Application Layer）","slug":"_7-应用层-application-layer","link":"#_7-应用层-application-layer","children":[]},{"level":3,"title":"各层之间的关系","slug":"各层之间的关系","link":"#各层之间的关系","children":[]},{"level":3,"title":"应用示例","slug":"应用示例","link":"#应用示例","children":[]},{"level":3,"title":"总结","slug":"总结-7","link":"#总结-7","children":[]}]}],"git":{"createdTime":1720408320000,"updatedTime":1721632528000,"contributors":[{"name":"mousesun","email":"3026098675@qq.com","commits":10}]},"readingTime":{"minutes":24.55,"words":7366},"filePathRelative":"技术科普/计算机网络.md","localizedDate":"2024年7月8日","excerpt":"<div class=\\"hint-container tip\\">\\n<p class=\\"hint-container-title\\">http2与http1区别?</p>\\n</div>\\n<p>HTTP/2 是对 HTTP/1.x 协议的重大升级，旨在提高网络性能和效率。以下是 HTTP/2 相对于 HTTP/1 的一些关键区别和改进：</p>\\n<h3>1. 协议基础</h3>\\n<ul>\\n<li><strong>HTTP/1.x</strong>: 基于纯文本的协议，使用新行符分隔的文本消息进行通信。</li>\\n<li><strong>HTTP/2</strong>: 基于二进制的协议，使用二进制帧传输数据，更高效地解析和传输数据。</li>\\n</ul>","autoDesc":true}');export{k as comp,o as data};
