export default "{\"documentCount\":94,\"nextId\":94,\"documentIds\":{\"0\":\"1\",\"1\":\"2\",\"2\":\"2#访问模式-access-modes\",\"3\":\"2#回收策略-reclaim-policy\",\"4\":\"2#pv-status\",\"5\":\"2#_1-available\",\"6\":\"2#_2-bound\",\"7\":\"2#_3-released\",\"8\":\"2#_4-failed\",\"9\":\"2#状态转换\",\"10\":\"2#状态图示\",\"11\":\"2#resourcequotas\",\"12\":\"2#作用\",\"13\":\"2#配置示例\",\"14\":\"2#主要字段\",\"15\":\"2#使用场景\",\"16\":\"2#limitranges\",\"17\":\"2#作用-1\",\"18\":\"2#配置示例-1\",\"19\":\"2#主要字段-1\",\"20\":\"2#使用场景-1\",\"21\":\"2#比较与总结\",\"22\":\"2#k8s技能图谱\",\"23\":\"2#静态pod\",\"24\":\"2#static-pod-的特点\",\"25\":\"2#创建-static-pod\",\"26\":\"2#使用场景-2\",\"27\":\"2#监控和管理\",\"28\":\"3\",\"29\":\"3#概念概述\",\"30\":\"3#pipeline\",\"31\":\"3#python-sdk\",\"32\":\"3#dsl-compiler\",\"33\":\"3#pipeline-service\",\"34\":\"3#kubernetes-resources\",\"35\":\"3#orchestration-controllers\",\"36\":\"3#artifact-storage\",\"37\":\"3#persistence-agent-and-ml-metadata\",\"38\":\"3#pipeline-web-server\",\"39\":\"3#pipeline-1\",\"40\":\"3#component\",\"41\":\"3#组件代码\",\"42\":\"3#组件定义\",\"43\":\"3#容器化组件\",\"44\":\"3#graph\",\"45\":\"3#experiment\",\"46\":\"3#主要的-argo-工作流执行器类型包括\",\"47\":\"3#如何选择适合的执行器\",\"48\":\"3#controller-manager\",\"49\":\"3#官网地址\",\"50\":\"3#kubernetes-应用程序\",\"51\":\"3#它提供了\",\"52\":\"3#这可以被以下用户使用\",\"53\":\"3#目标\",\"54\":\"3#非目标\",\"55\":\"3#什么是-katib\",\"56\":\"3#为什么选择-katib\",\"57\":\"3#pipeline服务注册流程\",\"58\":\"3#api-v1beta1-注册的服务\",\"59\":\"3#api-v2beta1-注册的服务\",\"60\":\"3#其他\",\"61\":\"3#总结\",\"62\":\"3#pipeline创建流程\",\"63\":\"3#创建runs\",\"64\":\"4\",\"65\":\"4#operator-的基本概念\",\"66\":\"4#operator-的工作原理\",\"67\":\"4#operator-的应用场景\",\"68\":\"4#operator-的优势\",\"69\":\"4#使用-operator-的示例\",\"70\":\"4#开发-operator-的工具\",\"71\":\"4#总结\",\"72\":\"5\",\"73\":\"5#编程语言\",\"74\":\"5#技术栈\",\"75\":\"5#mlops\",\"76\":\"5#前端开发\",\"77\":\"6\",\"78\":\"6#_1-协议基础\",\"79\":\"6#_2-连接管理\",\"80\":\"6#_3-多路复用\",\"81\":\"6#_4-头部压缩\",\"82\":\"6#_5-服务器推送\",\"83\":\"6#_6-优先级和流控制\",\"84\":\"6#_7-加密和安全\",\"85\":\"6#_8-协议扩展性\",\"86\":\"6#_9-性能改进\",\"87\":\"6#总结\",\"88\":\"7\",\"89\":\"8\",\"90\":\"9\",\"91\":\"10\",\"92\":\"11\",\"93\":\"12\"},\"fieldIds\":{\"h\":0,\"t\":1,\"c\":2},\"fieldLength\":{\"0\":[1,152],\"1\":[1,2],\"2\":[4,16],\"3\":[4,13],\"4\":[3,20],\"5\":[2,16],\"6\":[2,13],\"7\":[2,16],\"8\":[2,11],\"9\":[1,27],\"10\":[1,23],\"11\":[1,9],\"12\":[1,10],\"13\":[1,40],\"14\":[1,13],\"15\":[1,10],\"16\":[1,12],\"17\":[1,14],\"18\":[1,45],\"19\":[1,13],\"20\":[1,10],\"21\":[1,23],\"22\":[1],\"23\":[1,27],\"24\":[3,43],\"25\":[3,40],\"26\":[1,31],\"27\":[1,34],\"28\":[2,35],\"29\":[1,11],\"30\":[1,3],\"31\":[3,5],\"32\":[1,3],\"33\":[1,2],\"34\":[1,4],\"35\":[1,7],\"36\":[1,17],\"37\":[1,6],\"38\":[1,7],\"39\":[1,33],\"40\":[1,18],\"41\":[1,24],\"42\":[1,22],\"43\":[1,13],\"44\":[1,29],\"45\":[1,106],\"46\":[4,41],\"47\":[2,220],\"48\":[2,64],\"49\":[1,6],\"50\":[2,21],\"51\":[2,14],\"52\":[2,13],\"53\":[1,24],\"54\":[1,6],\"55\":[3,64],\"56\":[3,45],\"57\":[1,5],\"58\":[3,42],\"59\":[3,19],\"60\":[1,6],\"61\":[1,28],\"62\":[1,2],\"63\":[1,5],\"64\":[2,17],\"65\":[2,29],\"66\":[2,23],\"67\":[2,19],\"68\":[2,16],\"69\":[3,18],\"70\":[3,20],\"71\":[1,17],\"72\":[1,6],\"73\":[1,19],\"74\":[1,18],\"75\":[1,5],\"76\":[1,22],\"77\":[1,12],\"78\":[2,10],\"79\":[2,19],\"80\":[2,15],\"81\":[2,14],\"82\":[2,13],\"83\":[2,13],\"84\":[2,14],\"85\":[2,11],\"86\":[2,11],\"87\":[1,36],\"88\":[1,98],\"89\":[1,3],\"90\":[1],\"91\":[1],\"92\":[1],\"93\":[1]},\"averageFieldLength\":[1.5638297872340425,24.156565656565647],\"storedFields\":{\"0\":{\"h\":\"etcd\",\"t\":[\"etcd获取分布式锁\",\"cli, err := clientv3.New(clientv3.Config{Endpoints: endpoints}) if err != nil { log.Fatal(err) } defer cli.Close() // create two separate sessions for lock competition s1, err := concurrency.NewSession(cli, concurrency.WithTTL(10)) if err != nil { log.Fatal(err) } defer s1.Close() m1 := concurrency.NewMutex(s1, \\\"/my-lock/\\\") // acquire lock for s1 if err := m1.Lock(context.TODO()); err != nil { log.Fatal(err) } fmt.Println(\\\"acquired lock for s1\\\") if err := m1.Unlock(context.TODO()); err != nil { log.Fatal(err) } fmt.Println(\\\"released lock for s1\\\")\",\"1、首先通过 concurrency.NewSession 方法创建 Session，本质是创建了一个 TTL 为 10 的 Lease。\",\"2、其次得到 session 对象后，通过 concurrency.NewMutex 创建了一个 mutex 对象，包含 Lease、key prefix 等信息。\",\"3、然后通过 mutex 对象的 Lock 方法尝试获取锁。\",\"当 CreateRevision 为 0 时，它会创建一个 prefix 为 /my-lock 的 key（ /my-lock + LeaseID)，并获取到 /my-lock prefix 下面最早创建的一个 key（revision 最小），分布式锁最终是由写入此 key 的 client 获得，其他 client 则进入等待模式。\",\"4、最后使用结束，可通过 mutex 对象的 Unlock 方法释放锁。\",\"未获得锁的 client 是如何等待的呢?\",\"// wait for deletion revisions prior to myKey hdr, werr := waitDeletes(ctx, client, m.pfx, m.myRev-1) // release lock key if wait failed if werr != nil { m.Unlock(client.Ctx()) } else { m.hdr = hdr }\",\"通过 Watch 机制各自监听 prefix 相同，revision 比自己小的 key，因为只有 revision 比自己小的 key 释放锁，我才能有机会，获得锁，如下代码所示，其中 waitDelete 会使用我们上面的介绍的 Watch 去监听比自己小的 key\",\"为什么使用etcd分布式锁比redis分布式锁更好？\",\"相比 Redis 基于主备异步复制导致锁的安全性问题，etcd 是基于 Raft 共识算法实现的，一个写请求需要经过集群多数节点确认。因此一旦分布式锁申请返回给 client 成功后，它一定是持久化到了集群多数节点上，不会出现 Redis 主备异步复制可能导致丢数据的问题，具备更高的安全性。\",\"分布式锁的三个主要核心要素\",\"安全性、互斥性。在同一时间内，不允许多个 client 同时获得锁。\",\"活性。无论 client 出现 crash 还是遭遇网络分区，你都需要确保任意故障场景下，都不会出现死锁，常用的解决方案是超时和自动过期机制。\",\"高可用、高性能。加锁、释放锁的过程性能开销要尽量低，同时要保证高可用，避免单点故障。\"]},\"1\":{\"h\":\"k8s知识点\",\"t\":[\"k8s 笔记总结\"]},\"2\":{\"h\":\"访问模式（Access Modes）\",\"t\":[\"Kubernetes支持的访问模式如下。\",\"ReadWriteOnce（RWO）：读写权限，并且只能被单个Node挂 载。\",\"ReadOnlyMany（ROX）：只读权限，允许被多个Node挂载。\",\"ReadWriteMany（RWX）：读写权限，允许被多个Node挂载。\",\"某些PV可能支持多种访问模式，但PV在挂载时只能使用一种访问模式，多种访问模式不能同时生效。\"]},\"3\":{\"h\":\"回收策略（Reclaim Policy）\",\"t\":[\"Kubernetes支持的回收策略如下。\",\"Retain：保留数据，需要手工处理。\",\"Recycle：简单清除文件的操作。\",\"Delete：与PV相连的后端存储完成Volume的删除操作。\",\"目前只有NFS和HostPath两种类型的PV支持Recycle策略； AWSElasticBlockStore、GCEPersistentDisk、AzureDisk和Cinder类型的PV支持Delete策略。\"]},\"4\":{\"h\":\"PV (STATUS)\",\"t\":[\"在 Kubernetes 中，PersistentVolume (PV) 是一个集群级别的资源，用于表示集群中持久化存储的详细信息和状态。PV 的状态由其 STATUS 字段来表示，它反映了存储卷的当前状态。了解这些状态有助于掌握 PV 在生命周期中的位置，以及它是否能够被持久卷声明 (PersistentVolumeClaim, PVC) 使用。\",\"以下是 Kubernetes 中 PV 的几种可能的状态：\"]},\"5\":{\"h\":\"1.\",\"t\":[\"描述: 该状态表示 PV 可以被绑定到 PVC。PV 处于 Available 状态时，它未被任何 PVC 使用，可以供新的 PVC 绑定。\",\"特点: \",\"PV 还未与任何 PVC 绑定。\",\"准备好用于新的 PVC 绑定。\"]},\"6\":{\"h\":\"2.\",\"t\":[\"描述: 该状态表示 PV 已经被绑定到一个 PVC，且正被 PVC 使用。\",\"特点: \",\"PV 已经与一个 PVC 绑定。\",\"它不能再被其他 PVC 绑定，直到被释放。\"]},\"7\":{\"h\":\"3.\",\"t\":[\"描述: 该状态表示 PV 之前已经绑定的 PVC 已经被删除，但是 PV 本身还没有被集群中的任何新 PVC 再次使用。\",\"特点: \",\"PVC 已被删除。\",\"数据可能仍然存在于 PV 上，但它还未被新的 PVC 重新绑定。\"]},\"8\":{\"h\":\"4.\",\"t\":[\"描述: 该状态表示 PV 由于某种原因无法使用，通常是因为与 PV 相关的存储设备出现了错误或问题。\",\"特点: \",\"PV 在操作过程中遇到错误，无法正常使用。\",\"可能需要管理员干预以修复问题。\"]},\"9\":{\"h\":\"状态转换\",\"t\":[\"PV 的状态转换通常遵循以下过程：\",\"初始状态: PV 被创建后，处于 Available 状态。\",\"绑定: 一个 PVC 请求匹配 PV，PV 被绑定到 PVC 后，状态变为 Bound。\",\"释放: PVC 被删除后，PV 状态变为 Released。\",\"再利用或删除: \",\"如果允许再利用，管理员可以手动将 PV 状态重置为 Available，使其可以绑定到新的 PVC。\",\"如果 PV 被认为不再需要，可能会被删除。\"]},\"10\":{\"h\":\"状态图示\",\"t\":[\"以下是状态转换的示意图：\",\"Available | | PVC 绑定 V Bound | | PVC 删除 V Released | | 删除或再利用 V Failed (或) Available\",\"在 Kubernetes（K8s）集群中，ResourceQuotas 和 LimitRanges 是两种用于资源管理和控制的机制。它们帮助管理员确保资源的公平分配和高效利用。以下是对这两者的详细介绍：\"]},\"11\":{\"h\":\"ResourceQuotas\",\"t\":[\"ResourceQuotas 是一种在 Kubernetes 中用来限制命名空间（Namespace）内资源总量的机制。它们用于防止某个命名空间消耗过多的集群资源，从而影响其他命名空间的正常运行。\"]},\"12\":{\"h\":\"作用\",\"t\":[\"限制命名空间资源使用: ResourceQuotas 确保每个命名空间不会消耗超过指定的资源限额。\",\"控制资源分配: 它们帮助管理员公平分配集群资源，防止资源耗尽。\",\"提升资源管理能力: 通过设置资源限额，管理员可以更好地管理和监控资源使用情况。\"]},\"13\":{\"h\":\"配置示例\",\"t\":[\"以下是一个 ResourceQuota 的 YAML 配置示例，它限制了某个命名空间内的 CPU 和内存总量，以及对象数量（如 Pod 和 Service）：\",\"apiVersion: v1 kind: ResourceQuota metadata: name: example-quota namespace: example-namespace spec: hard: pods: \\\"10\\\" # 限制 Pod 的总数量 services: \\\"5\\\" # 限制 Service 的总数量 requests.cpu: \\\"4\\\" # 限制 CPU 请求总量 requests.memory: \\\"8Gi\\\" # 限制内存请求总量 limits.cpu: \\\"10\\\" # 限制 CPU 使用总量 limits.memory: \\\"16Gi\\\" # 限制内存使用总量\"]},\"14\":{\"h\":\"主要字段\",\"t\":[\"hard: 定义了资源的硬性限制，包括 CPU、内存、存储和对象数量等。\",\"scopes: 可选字段，指定了 ResourceQuota 适用的对象范围（如仅应用于某些特定的资源类型）。\"]},\"15\":{\"h\":\"使用场景\",\"t\":[\"开发环境: 限制资源以确保测试环境不会占用过多的生产资源。\",\"多租户环境: 在共享集群中，控制不同租户（命名空间）之间的资源使用。\",\"成本管理: 控制资源使用来管理和控制成本。\"]},\"16\":{\"h\":\"LimitRanges\",\"t\":[\"LimitRanges 是一种在 Kubernetes 中用于限制命名空间内单个 Pod 或容器资源使用的机制。与 ResourceQuotas 的整体限制不同，LimitRanges 主要控制单个 Pod 或容器的资源使用范围。\"]},\"17\":{\"h\":\"作用\",\"t\":[\"设置默认资源限制: 如果 Pod 或容器没有指定资源请求和限制，LimitRanges 可以提供默认值。\",\"防止资源过度消耗: 通过限制单个容器或 Pod 的资源使用，防止过多的资源消耗影响整个集群的性能。\",\"鼓励合理的资源分配: 鼓励开发人员在部署 Pod 时合理设置资源请求和限制。\"]},\"18\":{\"h\":\"配置示例\",\"t\":[\"以下是一个 LimitRange 的 YAML 配置示例，它为容器设置了 CPU 和内存的默认值和最大/最小值：\",\"apiVersion: v1 kind: LimitRange metadata: name: example-limits namespace: example-namespace spec: limits: - max: cpu: \\\"1\\\" # 容器的最大 CPU 使用量 memory: \\\"1Gi\\\" # 容器的最大内存使用量 min: cpu: \\\"100m\\\" # 容器的最小 CPU 使用量 memory: \\\"128Mi\\\" # 容器的最小内存使用量 default: cpu: \\\"500m\\\" # 容器的默认 CPU 请求量 memory: \\\"512Mi\\\" # 容器的默认内存请求量 defaultRequest: cpu: \\\"250m\\\" # 容器的默认 CPU 请求 memory: \\\"256Mi\\\" # 容器的默认内存请求 type: Container # 应用类型\"]},\"19\":{\"h\":\"主要字段\",\"t\":[\"max: 定义了单个容器可以请求的最大资源量。\",\"min: 定义了单个容器必须请求的最小资源量。\",\"default: 定义了容器没有指定资源请求和限制时的默认值。\",\"defaultRequest: 定义了容器没有指定资源请求时的默认请求值。\",\"type: 指定了限制适用于 Pod 还是容器。\"]},\"20\":{\"h\":\"使用场景\",\"t\":[\"应用程序标准化: 在命名空间内强制执行资源使用标准，确保所有容器符合预期的资源使用模式。\",\"资源优化: 防止资源过度配置或资源不足，从而优化集群性能和资源利用率。\",\"开发与测试环境: 在不同环境中设置不同的限制，确保资源的合理分配和使用。\"]},\"21\":{\"h\":\"比较与总结\",\"t\":[\"ResourceQuotas:\",\"范围: 适用于整个命名空间的资源总量。\",\"目的: 控制命名空间内的资源使用上限，确保集群资源的公平分配和高效利用。\",\"典型场景: 多租户环境、开发环境中的资源限制。\",\"LimitRanges:\",\"范围: 适用于单个 Pod 或容器的资源使用。\",\"目的: 设置资源使用的默认值和最大/最小限制，防止个体资源过度消耗。\",\"典型场景: 应用程序的资源标准化和资源优化。\",\"两者结合使用，可以在 Kubernetes 集群中提供强大的资源管理能力，确保资源的公平分配和高效使用。\"]},\"22\":{\"h\":\"k8s技能图谱\"},\"23\":{\"h\":\"静态pod\",\"t\":[\"Static Pod 是 Kubernetes 中的一种特殊类型的 Pod，它由 kubelet 直接管理，而不是通过 Kubernetes API Server 来创建和管理。Static Pod 通常用于集群管理工具（如 Kubernetes 本身）的部署和管理，尤其是在 Kubernetes 控制平面组件（如 etcd、kube-apiserver、kube-controller-manager 和 kube-scheduler）自身的管理中。\"]},\"24\":{\"h\":\"Static Pod 的特点\",\"t\":[\"由 kubelet 管理：\",\"Static Pod 由运行在节点上的 kubelet 直接管理，不需要 API Server 的参与。\",\"kubelet 会定期扫描特定的目录（通常是 /etc/kubernetes/manifests）中的 Pod 定义文件，并根据这些文件创建和管理 Pod。\",\"没有 ReplicaSet 或 Deployment：\",\"Static Pod 不是通过 Deployment、ReplicaSet 或其他控制器管理的，因此它们没有自动伸缩、滚动更新等高级特性。\",\"静态配置：\",\"Static Pod 的配置是静态文件，通常是 JSON 或 YAML 格式，存放在节点的文件系统中。\",\"这些配置文件不会因为 API Server 或 etcd 的故障而丢失，因此非常适合用于管理集群的核心组件。\",\"自动重启：\",\"如果 Static Pod 崩溃或被删除，kubelet 会根据配置文件自动重新创建它们，保证这些关键组件的高可用性。\"]},\"25\":{\"h\":\"创建 Static Pod\",\"t\":[\"要创建一个 Static Pod，你需要在节点的特定目录中（通常是 /etc/kubernetes/manifests）创建一个包含 Pod 定义的 YAML 文件。以下是一个示例：\",\"# 文件路径：/etc/kubernetes/manifests/static-pod-example.yaml apiVersion: v1 kind: Pod metadata: name: static-pod-example namespace: kube-system spec: containers: - name: nginx image: nginx:latest ports: - containerPort: 80\",\"将上述 YAML 文件保存到节点的 /etc/kubernetes/manifests 目录中后，kubelet 会自动检测到该文件并创建对应的 Pod。\"]},\"26\":{\"h\":\"使用场景\",\"t\":[\"Static Pod 通常用于以下场景：\",\"Kubernetes 控制平面组件：\",\"部署和管理 Kubernetes 控制平面组件（如 etcd、kube-apiserver、kube-controller-manager 和 kube-scheduler），这些组件必须在集群启动时运行，不能依赖于 Kubernetes 自身来管理。\",\"集群启动和恢复：\",\"在集群启动或恢复过程中，使用 Static Pod 确保关键组件能够独立于 Kubernetes API Server 和 etcd 正常启动。\",\"简化的节点管理：\",\"在一些简化的集群管理方案中，可能会使用 Static Pod 来运行节点级别的服务或代理，而不依赖于 Kubernetes 控制器。\"]},\"27\":{\"h\":\"监控和管理\",\"t\":[\"由于 Static Pod 由 kubelet 直接管理，因此它们的一些管理和监控操作与普通 Pod 略有不同：\",\"日志查看：你仍然可以使用 kubectl logs 命令查看 Static Pod 的日志。\",\"状态检查：可以使用 kubectl get pod -n kube-system 命令查看 Static Pod 的状态。\",\"更新 Pod：要更新 Static Pod，需要手动编辑对应的 YAML 文件，kubelet 会自动检测到文件的变化并重新创建 Pod。\",\"Static Pod 是 Kubernetes 提供的一种灵活机制，用于确保关键组件的高可用性和独立性，是集群稳定运行的关键保障之一。\"]},\"28\":{\"h\":\"Kubeflow 简介\",\"t\":[\"k8s 云原生之Kubeflow 简介\",\"https://www.kubeflow.org/docs/started/introduction/\",\"Kubeflow 简介 Kubeflow 项目致力于让机器学习 (ML) 工作流在 Kubernetes 上的部署变得简单、可移植且可扩展。我们的目标不是重新创建其他服务，而是提供一种简单的方法，将最佳的 ML 开源系统部署到各种基础设施中。只要您运行 Kubernetes，就可以运行 Kubeflow。 下图展示了主要的 Kubeflow 组件，涵盖 Kubernetes 之上 ML 生命周期的每个步骤。 \",\"Kubeflow 是一个面向想要构建和试验 ML 管道的数据科学家的平台。Kubeflow 还适用于想要将 ML 系统部署到各种环境以进行开发、测试和生产级服务的 ML 工程师和运营团队。\"]},\"29\":{\"h\":\"概念概述\",\"t\":[\"Kubeflow 是_Kubernetes 的 ML 工具包_。 下图展示了 Kubeflow 作为在 Kubernetes 之上安排 ML 系统组件的平台： \"]},\"30\":{\"h\":\"Pipeline\",\"t\":[\"在高层次上，管道的执行过程如下：\"]},\"31\":{\"h\":\"Python SDK：\",\"t\":[\"使用Kubeflow Pipelines特定领域语言（DSL）创建组件或指定管道。\"]},\"32\":{\"h\":\"：\",\"t\":[\"DSL编译器将您的管道的Python代码转换为静态配置（YAML）。\"]},\"33\":{\"h\":\"：\",\"t\":[\"调用管道服务以从静态配置创建管道运行。\"]},\"34\":{\"h\":\"：\",\"t\":[\"管道服务调用Kubernetes API服务器以创建运行管道所需的必要Kubernetes资源（CRD）。\"]},\"35\":{\"h\":\"：\",\"t\":[\"一组编排控制器执行完成管道所需的容器。这些容器在虚拟机上的Kubernetes Pod中执行。一个示例控制器是Argo Workflow控制器，它编排基于任务的工作流。\"]},\"36\":{\"h\":\"：\",\"t\":[\"Pod存储两种类型的数据：\",\"Metadata：实验、作业、管道运行和单个标量指标。度量数据被聚合用于排序和过滤。Kubeflow Pipelines将元数据存储在MySQL数据库中。\",\"Artifacts：管道包、视图和大规模指标（时间序列）。使用大规模指标来调试管道运行或调查单个运行的性能。Kubeflow Pipelines将工件存储在像Minio服务器或Cloud Storage之类的工件存储中。\",\"MySQL数据库和Minio服务器都由Kubernetes持久卷子系统支持。\"]},\"37\":{\"h\":\"：\",\"t\":[\"管道持久性代理监视管道服务创建的Kubernetes资源，并将这些资源的状态持久化到ML元数据服务中。管道持久性代理记录已执行的容器集合及其输入和输出。输入/输出包括容器参数或数据工件URI。\"]},\"38\":{\"h\":\"：\",\"t\":[\"管道Web服务器从各种服务中收集数据以显示相关视图：当前运行的管道列表、管道执行历史记录、数据工件列表、有关单个管道运行的调试信息、有关单个管道运行的执行状态。\"]},\"39\":{\"h\":\"Pipeline\",\"t\":[\"在 Kubeflow Pipelines 中，管道是对机器学习（ML）工作流的描述，包括工作流中的所有组件及其相互关系，以图的形式呈现。管道配置包括运行管道所需的输入（参数）的定义，以及每个组件的输入和输出。 当你运行一个管道时，系统会启动一个或多个 Kubernetes Pod，这些 Pod 对应于工作流（管道）中的各个步骤（组件）。这些 Pod 会启动 Docker 容器，而容器则会启动你的程序。 开发完成管道后，你可以使用 Kubeflow Pipelines UI 或 Kubeflow Pipelines SDK 上传你的管道。\"]},\"40\":{\"h\":\"Component\",\"t\":[\"在 Kubeflow Pipelines 中，组件是一个独立的代码集，它执行机器学习（ML）工作流（管道）中的某一步骤，例如数据预处理、数据转换、模型训练等。组件类似于函数，具有名称、参数、返回值和主体。\"]},\"41\":{\"h\":\"组件代码\",\"t\":[\"每个组件的代码包括以下部分：\",\"客户端代码：与端点通信以提交作业的代码。例如，与 Google Dataproc API 通信以提交 Spark 作业的代码。\",\"运行时代码：执行实际作业的代码，通常在集群中运行。例如，将原始数据转换为预处理数据的 Spark 代码。\",\"关于客户端代码和运行时代码的命名约定——对于名为“mytask”的任务：\",\"mytask.py 程序包含客户端代码。\",\"mytask 目录包含所有运行时代码。\"]},\"42\":{\"h\":\"组件定义\",\"t\":[\"用 YAML 格式的组件规范描述 Kubeflow Pipelines 系统中的组件。组件定义包括以下部分：\",\"元数据：名称、描述等。\",\"接口：输入/输出规范（名称、类型、描述、默认值等）。\",\"实现：描述在给定组件输入参数值的情况下如何运行组件的规范。实现部分还描述了组件完成运行后如何获取输出值。\",\"有关组件的完整定义，请参见组件规范。\"]},\"43\":{\"h\":\"容器化组件\",\"t\":[\"你必须将组件打包为 Docker 镜像。组件代表容器内的特定程序或入口点。 管道中的每个组件独立执行。组件不会在同一进程中运行，也不能直接共享内存数据。你必须将传递给组件之间的数据序列化（转换为字符串或文件），以便数据可以在分布式网络上传输。然后，必须反序列化这些数据以供下游组件使用。\"]},\"44\":{\"h\":\"Graph\",\"t\":[\"在 Kubeflow Pipelines 中，图（Graph）是管道运行时在 Kubeflow Pipelines UI 中的图形表示。图显示了管道运行已执行或正在执行的步骤，箭头指示了管道组件之间的父/子关系。运行一开始，就可以查看这个图。图中的每个节点对应管道中的一个步骤，并进行相应的标注。 每个节点的右上角有一个图标，指示其状态：运行中（running）、成功（succeeded）、失败（failed）或跳过（skipped）。当节点的父节点包含条件语句时，节点可能会被跳过。\"]},\"45\":{\"h\":\"Experiment\",\"t\":[\"实验是一个工作空间，你可以在其中尝试管道的不同配置。你可以使用实验将你的运行组织成逻辑组。实验可以包含任意的运行，包括定期运行。\",\"一次运行（run）是对管道的单次执行。运行包含你尝试的所有实验的不可变日志，设计为自包含的，以便于重现。你可以通过查看 Kubeflow Pipelines UI 上的运行详情页面来跟踪运行的进度，在那里你可以看到运行时的图表、输出工件和每个步骤的日志。 定期运行（recurring run）或在 Kubeflow Pipelines 后端 API 中称为作业（job），是管道的可重复运行。定期运行的配置包括指定所有参数值的管道副本和运行触发器。你可以在任何实验中启动定期运行，它会定期启动运行配置的新副本。你可以从 Kubeflow Pipelines UI 启用/禁用定期运行。你还可以指定最大并发运行数，以限制并行启动的运行数量。如果管道预计运行时间较长且触发频繁运行，这会很有帮助。\",\"运行触发器是一个标志，用于告知系统何时生成新的定期运行配置。可用的运行触发器类型包括：\",\"周期性（Periodic）：基于时间间隔调度运行（例如：每2小时或每45分钟）。\",\"Cron：使用 cron 语法调度运行。\",\"步骤（step）是管道中某个组件的执行。步骤与其组件之间的关系是一种实例化关系，类似于运行与其管道之间的关系。在复杂的管道中，组件可以在循环中多次执行，或在解析管道代码中的 if/else 类似子句后有条件地执行。\",\"输出工件（output artifact）是由管道组件发出的输出，Kubeflow Pipelines UI 能理解并呈现为丰富的可视化内容。包括工件在内的管道组件非常有用，因为它们可以用于性能评估、快速决策或不同运行间的比较。工件还使得理解管道各个组件的工作方式成为可能。工件可以是简单的文本数据视图，也可以是丰富的交互式可视化。\",\"注意：Kubeflow Pipelines 已从使用 kubeflow/metadata 转向使用 google/ml-metadata 作为元数据依赖。 Kubeflow Pipelines 后端将管道运行的运行时信息存储在元数据存储中。运行时信息包括任务的状态、工件的可用性、与执行或工件关联的自定义属性等。了解更多信息，请参阅 ML Metadata 入门指南。 如果一个工件被多个不同运行中的执行使用，你可以查看跨管道运行的工件和执行之间的连接。这种连接可视化称为谱系图（Lineage Graph）。\",\"Argo 工作流执行器是一个符合特定接口的进程，使 Argo 能够执行某些操作，如监控 Pod 日志、收集工件、管理容器生命周期等。 Kubeflow Pipelines 使用 Argo Workflows 作为工作流引擎，因此 Kubeflow Pipelines 用户需要选择一个工作流执行器。\"]},\"46\":{\"h\":\"主要的 Argo 工作流执行器类型包括：\",\"t\":[\"K8sAPIExecutor：通过 Kubernetes API 直接与集群交互，执行和监控容器。这是默认的执行器，适用于大多数场景。\",\"PNSExecutor：通过共享的进程命名空间（Process Namespace Sharing），使主容器可以访问子容器的文件系统和进程。这对于需要在容器之间共享数据的工作流特别有用。\",\"EmissaryExecutor：基于 Emissary-Ingress，专为高效的文件操作和网络操作设计，适用于需要高效处理大量小文件的工作流。 自 2022 年 2 月 Kubeflow Pipelines 1.8 正式发布以来，Emissary 执行器一直是 Kubeflow Pipelines 的默认执行器。\",\"DockerExecutor：直接与 Docker 守护进程交互来管理容器。这种方法依赖于 Docker，在某些 Kubernetes 配置中可能不适用。\"]},\"47\":{\"h\":\"如何选择适合的执行器：\",\"t\":[\"选择合适的工作流执行器取决于工作流的具体需求和集群环境：\",\"默认选择 K8sAPIExecutor：如果你的工作流不需要特别的资源共享或文件处理，默认的 K8sAPIExecutor 通常是最合适的选择。\",\"选择 PNSExecutor：如果你的工作流步骤之间需要共享文件或进程命名空间，那么 PNSExecutor 是一个好的选择。\",\"选择 EmissaryExecutor：如果你的工作流需要高效处理大量文件操作，尤其是小文件，可以选择 EmissaryExecutor。\",\"选择 DockerExecutor：如果你更熟悉 Docker 并且你的集群配置支持 Docker，可以考虑 DockerExecutor，但要注意其兼容性问题。\",\"注意，Argo Workflows 支持其他工作流执行器，但 Kubeflow Pipelines 团队仅推荐在 Emissary 执行器和 Docker 执行器之间进行选择。在配置 Kubeflow Pipelines 时，用户可以根据具体需求和工作流特点选择合适的 Argo 工作流执行器，以优化管道的执行效率和资源管理。\",\"[root@yigou-stg-101-61 ~]# kubectl get po -n kubeflow NAME READY STATUS RESTARTS AGE controller-manager-78d9bcc678-bgwtr 1/1 Running 0 17h katib-controller-7d7dffdb8f-7c6vk 1/1 Running 0 17h katib-db-manager-77d684cf4-tqtgh 1/1 Running 0 17h katib-ui-849479cf5f-rgmgf 1/1 Running 0 17h metadata-grpc-deployment-66457c4745-q9ddn 1/1 Running 0 17h metadata-writer-9956596d8-92g5h 1/1 Running 0 17h ml-pipeline-7cc7c5b47-k8r6z 1/1 Running 1 (17h ago) 17h ml-pipeline-persistenceagent-6c686b5b54-9bzwq 1/1 Running 0 17h ml-pipeline-scheduledworkflow-d894ffcd8-65j6h 1/1 Running 0 17h ml-pipeline-ui-57dbbdfd77-5bbh9 1/1 Running 0 17h ml-pipeline-viewer-crd-86868f775c-thcd8 1/1 Running 0 17h ml-pipeline-visualizationserver-5499555669-fsgks 1/1 Running 0 17h workflow-controller-799c5f4b48-nv8km 1/1 Running 0 17h\",\"下面是每个 Pod 的功能简介：\",\"controller-manager-78d9bcc678-bgwtr：\",\"控制器管理器 Pod，负责管理 Kubernetes 集群中的控制器，如 ReplicaSet、Deployment 等。\",\"katib-controller-7d7dffdb8f-7c6vk：\",\"Katib 控制器 Pod，是 Katib（超参数调优工具）的控制器组件，负责管理和调度超参数搜索任务。\",\"katib-db-manager-77d684cf4-tqtgh：\",\"Katib 数据库管理器 Pod，负责管理 Katib 的数据库，存储超参数调优任务的状态和结果。\",\"katib-ui-849479cf5f-rgmgf：\",\"Katib 用户界面 Pod，提供 Katib 的 Web 用户界面，用于查看和监控超参数调优任务的状态和结果。\",\"metadata-grpc-deployment-66457c4745-q9ddn：\",\"元数据 gRPC 服务 Pod，提供 Kubernetes 元数据服务，允许用户在 Kubeflow Pipelines 中创建和管理元数据。\",\"metadata-writer-9956596d8-92g5h：\",\"元数据写入器 Pod，负责将元数据写入到存储后端，与元数据 gRPC 服务一起用于 Kubeflow Pipelines。\",\"ml-pipeline-7cc7c5b47-k8r6z：\",\"ML Pipeline Pod，是 Kubeflow Pipelines 的核心组件之一，提供了机器学习工作流的定义、运行和监控功能。\",\"registry.cnbita.com:5000/kubeflow-pipelines/api-server\",\"backend/src/apiserver\",\"backend\\\\Dockerfile\",\"ml-pipeline-persistenceagent-6c686b5b54-9bzwq：\",\"ML Pipeline 持久化代理 Pod，负责管理 Kubeflow Pipelines 的持久化存储，存储工作流定义和执行状态。\",\"ml-pipeline-scheduledworkflow-d894ffcd8-65j6h：\",\"ML Pipeline 定时工作流 Pod，负责调度和执行 Kubeflow Pipelines 中的定时任务。\",\"ml-pipeline-ui-57dbbdfd77-5bbh9：\",\"ML Pipeline 用户界面 Pod，提供 Kubeflow Pipelines 的 Web 用户界面，用于创建、运行和监控机器学习工作流。\",\"ml-pipeline-viewer-crd-86868f775c-thcd8：\",\"ML Pipeline 视图 CRD Pod，用于自定义 Kubeflow Pipelines 中的自定义资源定义（CRD）的展示。\",\"ml-pipeline-visualizationserver-5499555669-fsgks：\",\"ML Pipeline 可视化服务器 Pod，提供 Kubeflow Pipelines 的可视化服务，用于展示机器学习工作流的执行状态和结果。\",\"workflow-controller-799c5f4b48-nv8km：\",\"工作流控制器 Pod，是 Kubeflow Pipelines 的控制器组件之一，负责管理和执行工作流任务。\",\"这些 Pod 组成了 Kubeflow 中的各个核心组件，提供了从超参数调优到机器学习工作流管理的完整功能。这些 Pod 之间有一定的关联关系，它们共同组成了 Kubeflow 平台，用于支持机器学习工作流的定义、运行、监控和优化。以下是它们之间的一些主要关联关系：\",\"控制器管理器 (controller-manager)：\",\"负责管理 Kubernetes 集群中的各种控制器，确保其他 Pod 和服务正常运行。\",\"Katib 组件：\",\"katib-controller：管理和调度超参数调优任务。\",\"katib-db-manager：管理存储 Katib 数据的数据库。\",\"katib-ui：提供 Katib 的 Web 用户界面。\",\"Katib 的各个组件通过数据库和控制器进行通信和协调，共同实现超参数调优功能。\",\"元数据服务 (metadata-grpc-deployment 和 metadata-writer)：\",\"metadata-grpc-deployment：提供 gRPC 接口，用于管理元数据。\",\"metadata-writer：负责将元数据写入到持久化存储中。\",\"这些组件通过元数据存储和 gRPC 接口进行通信，支持 Kubeflow Pipelines 中的元数据管理。\",\"Kubeflow Pipelines 组件：\",\"ml-pipeline：核心组件，负责机器学习工作流的定义、运行和监控。\",\"ml-pipeline-persistenceagent：管理工作流的持久化存储。\",\"ml-pipeline-scheduledworkflow：调度和执行定时任务。\",\"ml-pipeline-ui：提供 Web 用户界面，允许用户交互和监控工作流。\",\"ml-pipeline-viewer-crd：展示自定义资源定义（CRD）。\",\"ml-pipeline-visualizationserver：提供工作流执行状态和结果的可视化。\",\"这些组件通过存储系统、API 和用户界面进行紧密集成，形成完整的机器学习工作流管理平台。\",\"工作流控制器 (workflow-controller)：\",\"负责管理和执行工作流任务，确保工作流按照定义的步骤顺利执行。\",\"与 Kubeflow Pipelines 组件紧密合作，管理和协调工作流的各个部分。\",\"总体而言，这些 Pod 通过 Kubernetes 集群中的服务和控制器进行通信和协调，共同提供了一个功能强大的机器学习工作流管理平台。\"]},\"48\":{\"h\":\"controller-manager\",\"t\":[\"apiVersion: apps/v1 kind: Deployment metadata: name: controller-manager labels: control-plane: controller-manager controller-tools.k8s.io: \\\"1.0\\\" spec: selector: matchLabels: control-plane: controller-manager controller-tools.k8s.io: \\\"1.0\\\" template: metadata: labels: control-plane: controller-manager controller-tools.k8s.io: \\\"1.0\\\" spec: containers: - command: - /kube-app-manager # Built from https://github.com/kubernetes-sigs/application master branch on the date specified in the image tag. image: gcr.io/ml-pipeline/application-crd-controller:20231101 imagePullPolicy: IfNotPresent name: manager env: - name: NAMESPACE valueFrom: fieldRef: fieldPath: metadata.namespace resources: limits: cpu: 100m memory: 30Mi requests: cpu: 100m memory: 20Mi serviceAccountName: application\"]},\"49\":{\"h\":\"官网地址\",\"t\":[\"https://github.com/kubernetes-sigs/application\"]},\"50\":{\"h\":\"Kubernetes 应用程序\",\"t\":[\"Kubernetes 是一个开源系统，用于自动化部署、扩展和管理容器化应用程序。 上述描述来自 Kubernetes 主页，主要集中在容器化应用程序上。然而，Kubernetes 的元数据、对象和可视化（例如在 Dashboard 中）都集中在容器基础设施上，而不是应用程序本身。 本项目中的应用程序 CRD（自定义资源定义）和控制器旨在改变这种状况，使其能够在众多支持工具之间实现互操作。\"]},\"51\":{\"h\":\"它提供了：\",\"t\":[\"描述应用程序元数据的能力（例如，运行一个像 WordPress 这样的应用程序）\",\"一个连接基础设施（例如 Deployments）的根对象。这对于将各种资源联系在一起甚至清理（即垃圾回收）很有用\",\"为支持应用程序提供信息，帮助它们查询和理解支持应用程序的对象\",\"应用程序级别的健康检查\"]},\"52\":{\"h\":\"这可以被以下用户使用：\",\"t\":[\"希望以应用程序为中心进行操作的应用程序运营商\",\"像 Helm 这样的工具，它们将其软件包发布集中在应用程序安装上，并且希望与其他工具（例如 Dashboard）实现互操作\",\"希望可视化应用程序（不仅仅是基础设施视图）的 Dashboards\"]},\"53\":{\"h\":\"目标\",\"t\":[\"提供一个用于在 Kubernetes 中创建、查看和管理应用程序的标准 API。\",\"提供通过 kubectl 与应用程序 API 交互的 CLI 实现。\",\"提供应用程序的安装状态和垃圾回收。\",\"提供一种标准方式，使应用程序能够向 UI 展示基本的健康检查。\",\"提供一种明确的机制，使应用程序能够声明对另一个应用程序的依赖关系。\",\"通过创建工具可以实现的标准，促进生态系统工具和 UI 之间的互操作性。\",\"促进 Kubernetes 应用程序使用通用的标签和注释。\"]},\"54\":{\"h\":\"非目标\",\"t\":[\"创建一个所有工具必须实现的标准。\",\"提供一种方式，使 UI 能够显示应用程序的指标。\"]},\"55\":{\"h\":\"什么是 Katib？\",\"t\":[\"Katib 是一个原生于 Kubernetes 的自动化机器学习（AutoML）项目。Katib 支持超参数调优、提前停止和神经架构搜索（NAS）。了解更多 AutoML 信息，请访问 fast.ai、Google Cloud、Microsoft Azure 或 Amazon SageMaker。 Katib 是一个与机器学习（ML）框架无关的项目。它可以调优用任何用户选择的语言编写的应用程序的超参数，并且本身支持许多 ML 框架，例如 TensorFlow、MXNet、PyTorch、XGBoost 等。 Katib 支持多种 AutoML 算法，例如贝叶斯优化（Bayesian optimization）、帕尔森估计树（Tree of Parzen Estimators）、随机搜索（Random Search）、协方差矩阵自适应进化策略（Covariance Matrix Adaptation Evolution Strategy）、Hyperband、高效神经架构搜索（Efficient Neural Architecture Search）、可微分架构搜索（Differentiable Architecture Search）等等。更多算法支持即将推出。 Katib 项目是开源的。开发者指南是希望为该项目做出贡献的开发者的良好起点。 \"]},\"56\":{\"h\":\"为什么选择 Katib？\",\"t\":[\"Katib 解决了 AI/ML 生命周期中的自动化机器学习（AutoML）步骤中的超参数优化或神经架构搜索问题，如下图所示： \",\"多节点和多GPU分布式训练：Katib 可以协调多节点和多GPU的分布式训练工作负载。\",\"与 Kubeflow Training Operator 集成：Katib 与 Kubeflow 的训练操作（如 PyTorchJob）集成，允许优化任何规模的大模型的超参数。\",\"此外，Katib 可以协调更高级的优化工作流，如 Argo Workflows 和 Tekton Pipelines。\",\"可扩展性和可移植性：Katib 是可扩展和可移植的。Katib 运行 Kubernetes 容器来执行超参数调优任务，这使得 Katib 可以与任何 ML 训练框架一起使用。\",\"用户甚至可以使用 Katib 来优化非ML任务，只要能够收集优化指标。\",\"丰富的优化算法支持：Katib 与许多优化框架（如 Hyperopt 和 Optuna）集成，这些框架实现了大多数最先进的优化算法。\",\"用户可以利用 Katib 控制平面来实现和基准测试他们自己的优化算法。\"]},\"57\":{\"h\":\"pipeline服务注册流程\",\"t\":[\" 其他服务注册在 startRpcServer 函数中，注册了以下服务：\"]},\"58\":{\"h\":\"API v1beta1 注册的服务\",\"t\":[\"ExperimentService: 实验服务\",\"apiv1beta1.RegisterExperimentServiceServer(s, sharedExperimentServer)\",\"PipelineService: 流水线服务\",\"apiv1beta1.RegisterPipelineServiceServer(s, sharedPipelineServer)\",\"JobService: 作业服务\",\"apiv1beta1.RegisterJobServiceServer(s, sharedJobServer)\",\"RunService: 运行服务\",\"apiv1beta1.RegisterRunServiceServer(s, sharedRunServer)\",\"TaskService: 任务服务\",\"apiv1beta1.RegisterTaskServiceServer(s, server.NewTaskServer(resourceManager))\",\"ReportService: 报告服务\",\"apiv1beta1.RegisterReportServiceServer(s, server.NewReportServer(resourceManager))\",\"VisualizationService: 可视化服务\",\"apiv1beta1.RegisterVisualizationServiceServer( s, server.NewVisualizationServer( resourceManager, common.GetStringConfig(cm.VisualizationServiceHost), common.GetStringConfig(cm.VisualizationServicePort), ))\",\"AuthService: 认证服务\",\"apiv1beta1.RegisterAuthServiceServer(s, server.NewAuthServer(resourceManager))\"]},\"59\":{\"h\":\"API v2beta1 注册的服务\",\"t\":[\"ExperimentService: 实验服务\",\"apiv2beta1.RegisterExperimentServiceServer(s, sharedExperimentServer)\",\"PipelineService: 流水线服务\",\"apiv2beta1.RegisterPipelineServiceServer(s, sharedPipelineServer)\",\"RecurringRunService: 定期运行服务\",\"apiv2beta1.RegisterRecurringRunServiceServer(s, sharedJobServer)\",\"RunService: 运行服务\",\"apiv2beta1.RegisterRunServiceServer(s, sharedRunServer)\"]},\"60\":{\"h\":\"其他\",\"t\":[\"ReflectionService: 反射服务\",\"reflection.Register(s)\"]},\"61\":{\"h\":\"总结\",\"t\":[\"在这个 startRpcServer 函数中，注册了以下 13 个服务：\",\"ExperimentService（v1beta1 和 v2beta1）\",\"PipelineService（v1beta1 和 v2beta1）\",\"JobService（v1beta1）\",\"RunService（v1beta1 和 v2beta1）\",\"TaskService（v1beta1）\",\"ReportService（v1beta1）\",\"VisualizationService（v1beta1）\",\"AuthService（v1beta1）\",\"RecurringRunService（v2beta1）\",\"ReflectionService\",\"这些服务涵盖了实验管理、流水线管理、作业管理、运行管理、任务管理、报告生成、数据可视化和认证功能，并且支持不同版本的API。 \"]},\"62\":{\"h\":\"pipeline创建流程\",\"t\":[\" 创建流水线只是把相关参数信息写入数据库。\"]},\"63\":{\"h\":\"创建Runs\",\"t\":[\" Runs创建过程是 请求apiserver->请求workflow,然后保存相关数据\"]},\"64\":{\"h\":\"k8s operator\",\"t\":[\"什么是 Kubernetes Operator？\",\"Kubernetes Operator 是一种软件扩展，使用 Kubernetes 原生的 API 和工具来自动管理复杂应用的生命周期。Operator 可以将人类操作员（例如系统管理员）的操作自动化，管理 Kubernetes 应用程序的配置、部署、升级、备份和故障处理等任务。\"]},\"65\":{\"h\":\"Operator 的基本概念\",\"t\":[\"Custom Resource (自定义资源，CR): Kubernetes 的内置资源（如 Pod、Service）可能无法满足所有应用的需求。CR 提供了定义自定义对象的能力，使得用户可以在 Kubernetes 中引入新的资源类型。\",\"Custom Resource Definition (自定义资源定义，CRD): CRD 是 Kubernetes 用于定义 CR 结构的机制。通过 CRD，用户可以创建和管理新的自定义资源。\",\"Controller (控制器): 控制器是 Kubernetes 中一个不断循环检查资源实际状态并使其符合预期状态的逻辑组件。Operator 就是一个高级的控制器，专门用于管理自定义资源。\"]},\"66\":{\"h\":\"Operator 的工作原理\",\"t\":[\"定义 CRD: 开发者首先需要定义 CRD，这描述了自定义资源的结构和规范。CRD 定义了资源的 API 和行为方式。\",\"实现控制器: 控制器监控自定义资源的状态，并根据用户定义的逻辑执行相应的操作。控制器的核心任务是不断将资源的实际状态调整为期望状态。\",\"部署 Operator: Operator 本质上是一个 Kubernetes 应用，它包括了 CRD 和控制器的实现。部署 Operator 后，用户可以使用 kubectl 等工具创建和管理自定义资源。\"]},\"67\":{\"h\":\"Operator 的应用场景\",\"t\":[\"应用部署和管理: Operator 可以自动化复杂应用的部署和管理过程。例如，数据库集群的创建、分片、复制等任务都可以通过 Operator 自动执行。\",\"自动化升级: Operator 可以监控应用的新版本，并自动执行无中断的滚动升级。\",\"备份和恢复: Operator 可以定期备份应用的数据，并在出现故障时自动进行恢复。\",\"自愈能力: Operator 可以监控应用的健康状态，自动修复出现的问题，例如重新启动故障的组件。\"]},\"68\":{\"h\":\"Operator 的优势\",\"t\":[\"简化运维操作: Operator 自动化了许多日常的运维任务，减少了人为操作的复杂性和风险。\",\"标准化管理流程: 通过 Operator，可以将最佳实践和操作流程编码成标准化的流程，使得复杂应用的管理变得更一致和可靠。\",\"增强 Kubernetes 的能力: Operator 将 Kubernetes 的管理能力扩展到了自定义应用领域，使得 Kubernetes 可以管理更复杂的工作负载。\"]},\"69\":{\"h\":\"使用 Operator 的示例\",\"t\":[\"Prometheus Operator: 用于简化 Prometheus 集群的部署和管理，自动处理 Prometheus 配置、目标发现和告警管理。\",\"ElasticSearch Operator: 管理 ElasticSearch 集群的部署、升级和扩展，确保高可用性和数据一致性。\",\"MySQL Operator: 自动化 MySQL 数据库的创建、备份和恢复，简化数据库集群的管理。\"]},\"70\":{\"h\":\"开发 Operator 的工具\",\"t\":[\"Operator SDK: 一个流行的工具包，提供了从生成基础代码到测试和部署的全流程支持，简化了 Operator 的开发过程。\",\"Kubebuilder: 提供了面向 Go 语言的开发框架和工具，用于生成和管理 Kubernetes API 扩展。\",\"KUDO (Kubernetes Universal Declarative Operator): 提供了一种声明性的方式来定义和管理 Operator，使得创建复杂的应用管理变得更简单。\"]},\"71\":{\"h\":\"总结\",\"t\":[\"Kubernetes Operator 是一种强大的工具，可以自动化和简化复杂应用的管理。通过定义自定义资源和控制器，Operator 能够将人类操作员的经验和最佳实践转化为自动化的操作流程，大大增强了 Kubernetes 的管理能力。无论是管理数据库、消息队列，还是大数据处理集群，Operator 都可以帮助实现高效的运维管理。\",\"如果你对开发 Kubernetes Operator 有兴趣，可以先从简单的示例开始，逐步深入理解其背后的原理和应用场景。\"]},\"72\":{\"h\":\"个人介绍\",\"t\":[\"个人简介\",\"大家好，我是一名全栈开发工程师，拥有广泛的编程语言知识和丰富的技术经验。以下是我的专业技能和经验介绍：\"]},\"73\":{\"h\":\"编程语言\",\"t\":[\"Java: 熟练使用Java进行企业级应用开发，精通Spring Boot框架，擅长构建高性能和可扩展的后端服务。\",\"C++: 具备扎实的C++基础，能够开发高效的系统级应用程序。\",\"C: 精通C语言，擅长底层编程和系统开发。\",\"Python: 精通Python，尤其在数据分析、机器学习以及自动化脚本编写方面有丰富经验。\",\"Go: 熟悉Go语言，能够利用其高并发和高性能特点开发后端服务。\"]},\"74\":{\"h\":\"技术栈\",\"t\":[\"Kubernetes (k8s): 熟悉容器编排，能够使用Kubernetes进行微服务管理和部署。\",\"Spring Boot: 深入理解Spring Boot框架，能够快速开发和部署企业级应用。\",\"MySQL: 精通关系型数据库设计和优化，具备高效处理大规模数据的能力。\",\"Redis: 熟悉Redis，能够利用其高性能特性进行缓存和存储操作。\",\"Nacos: 擅长使用Nacos进行服务发现和配置管理。\"]},\"75\":{\"h\":\"MLOps\",\"t\":[\"Kubeflow: 精通Kubeflow，能够构建、部署和管理机器学习模型流水线。\"]},\"76\":{\"h\":\"前端开发\",\"t\":[\"Vue: 熟练使用Vue.js进行前端开发，能够创建动态和响应式的用户界面。\",\"TypeScript (TS): 熟悉TypeScript，能够编写高质量的可维护代码。\",\"HTML: 精通HTML，能够设计和实现网页结构。\",\"Element-UI: 熟悉Element-UI库，能够快速开发美观且实用的前端界面。\",\"我致力于不断提升自己的技术水平和解决实际问题的能力，乐于接受新挑战，追求技术创新。如果你对我的技能和经验感兴趣，欢迎联系我！\"]},\"77\":{\"h\":\"计算机网络\",\"t\":[\"http2与http1区别?\",\"HTTP/2 是对 HTTP/1.x 协议的重大升级，旨在提高网络性能和效率。以下是 HTTP/2 相对于 HTTP/1 的一些关键区别和改进：\"]},\"78\":{\"h\":\"1. 协议基础\",\"t\":[\"HTTP/1.x: 基于纯文本的协议，使用新行符分隔的文本消息进行通信。\",\"HTTP/2: 基于二进制的协议，使用二进制帧传输数据，更高效地解析和传输数据。\"]},\"79\":{\"h\":\"2. 连接管理\",\"t\":[\"HTTP/1.x:\",\"每个请求/响应对通常需要一个单独的TCP连接（HTTP/1.0）。\",\"HTTP/1.1 引入了连接保持（Keep-Alive），允许在同一个TCP连接上复用多个请求，但在同一时刻只能处理一个请求（串行化处理）。\",\"HTTP/2:\",\"单个TCP连接上可以处理多个并发的请求/响应对。\",\"使用流的概念，每个请求/响应对在一个单独的流中，流之间可以独立并行处理。\"]},\"80\":{\"h\":\"3. 多路复用\",\"t\":[\"HTTP/1.x: 在一个连接上，只有一个请求/响应对可以被处理（头部阻塞问题），需要等待当前请求完成后，才能开始下一个请求。\",\"HTTP/2: 允许多个请求/响应对在同一连接上的多个流中并发传输，不同的流可以独立处理，不会相互阻塞。\"]},\"81\":{\"h\":\"4. 头部压缩\",\"t\":[\"HTTP/1.x: HTTP头部是以纯文本格式传输的，每个请求都需要发送完整的头部信息，导致冗余和带宽浪费。\",\"HTTP/2: 使用 HPACK 算法对头部进行压缩，减少了传输数据量。头部信息仅在第一次请求时完整传输，后续请求只需发送差异部分。\"]},\"82\":{\"h\":\"5. 服务器推送\",\"t\":[\"HTTP/1.x: 客户端必须明确请求每个资源，服务器只能响应客户端的请求。\",\"HTTP/2: 支持服务器推送功能，服务器可以在客户端请求之前主动发送资源，这有助于减少延迟和提升性能。例如，当客户端请求HTML页面时，服务器可以主动推送相关的CSS和JavaScript文件。\"]},\"83\":{\"h\":\"6. 优先级和流控制\",\"t\":[\"HTTP/1.x: 没有内建的优先级控制机制，所有请求被平等对待。\",\"HTTP/2: 支持流的优先级，客户端可以指定不同流的优先级，允许更重要的请求先行处理。同时，HTTP/2 提供流量控制机制，确保没有流会独占带宽。\"]},\"84\":{\"h\":\"7. 加密和安全\",\"t\":[\"HTTP/1.x: 加密是可选的（通过HTTP或HTTPS），但非加密的HTTP请求仍然普遍存在。\",\"HTTP/2: 大多数实现强制要求使用加密（通过HTTPS），尽管协议本身不强制这一点。现代浏览器和服务器在实际应用中通常要求 HTTP/2 使用 TLS。\"]},\"85\":{\"h\":\"8. 协议扩展性\",\"t\":[\"HTTP/1.x: 由于是文本协议，扩展和添加新功能变得复杂。\",\"HTTP/2: 作为二进制协议，HTTP/2 更容易扩展，添加新功能可以通过新帧类型和更复杂的协议操作来实现，而不影响现有的功能。\"]},\"86\":{\"h\":\"9. 性能改进\",\"t\":[\"HTTP/1.x: 多个小的请求可能会因为串行化处理导致较高的延迟和低效的带宽利用。\",\"HTTP/2: 通过多路复用、头部压缩和服务器推送等功能，HTTP/2 显著降低了延迟，改善了带宽利用，提升了整体性能。\"]},\"87\":{\"h\":\"总结\",\"t\":[\"特性\",\"HTTP/1.x\",\"HTTP/2\",\"协议类型\",\"基于纯文本\",\"基于二进制\",\"连接管理\",\"每个请求通常需要一个TCP连接\",\"单个连接处理多个并发请求\",\"多路复用\",\"不支持（有头部阻塞问题）\",\"支持\",\"头部压缩\",\"不支持\",\"使用HPACK算法进行压缩\",\"服务器推送\",\"不支持\",\"支持\",\"优先级和流控制\",\"不支持\",\"支持\",\"加密和安全\",\"可选（但非强制）\",\"大多数实现要求加密（HTTPS）\",\"协议扩展性\",\"扩展复杂\",\"更容易扩展\",\"性能\",\"受限于串行化处理和头部阻塞\",\"显著提升（多路复用、压缩、推送）\",\"HTTP/2 带来了显著的改进和优化，使得网络应用能够更高效地传输数据，提升了用户体验和网络性能。\"]},\"88\":{\"h\":\"独立开发者一点思考\",\"t\":[\"杂谈之独立开发者一点思考\",\"https://indiehacker.one/\",\"全文总结 本文主要介绍了独立开发者的相关内容，包括什么是独立开发者、为什么要做独立开发者、有哪些牛逼的独立开发者、独立开发者面临的困境、独立开发的一些基本流程、想法、如何判断想法的是不是可以赚钱、三大核心问题、如何解决用户的问题、使用什么样的编程语言、采用什么样的产品形态、一个 MVP 产品最少需要做多少工作、一周开发一个新产品、三点金规铁律、发布、别人说你的产品是垃圾，伪需求怎么办、增长、心态、如何保持积极的心态、如何面对压力等。\",\"重要亮点\",\"什么是独立开发者：指的是一类独立的、自主运营并开发自己的在线业务以获得收入的人。\",\"为什么要做独立开发者：成为一名独立开发者可以提供很多传统工作所无法提供的优点，包括人身自由、财务自由、成长与学习、实现自己的想法等。\",\"有哪些牛逼的独立开发者：levelsio 和 Baye aka 威力狈是公认的独立开发者中的牛逼人物。\",\"独立开发者面临的困境：包括美工问题、营销问题、生活压力、保持动力等。\",\"独立开发的一些基本流程：包括想法、开发、发布等环节。\",\"想法：想法是一个产品的起始点，需要大致正确即可，在实践的过程中，想法可能会发生改变，产品方向也会发生改变。\",\"如何判断想法的是不是可以赚钱：做好一个 DEMO 页面，罗列你的想法和产品特点，中间加个具有号召性的按钮。然后把这个页面推广出去。最后做数据分析。根据分析结果，你很快就会知道你的想法是不是可以赚到钱。\",\"三大核心问题：包括产品有什么核心功能和特点、产品的目标客户是谁、目标客户会经常出现在那里。\",\"如何解决用户的问题：用户并不知道自己需要什么，直到我们拿出自己的产品，他们就会发现，这就是我想要的。\",\"使用什么样的编程语言：你会哪个就用哪个，熟悉哪个就用哪个。\",\"采用什么样的产品形态：需要考虑产品适合使用哪种产品形态、目标客户更愿意使用哪种产品、目前有能力提供哪种产品形态。\",\"一个 MVP 产品最少需要做多少工作：答案是 9 个页面和 9 个接口。\",\"一周开发一个新产品：对于一个中等水平的技术人员来说，一周的时间足够开发一个新产品。\",\"三点金规铁律：包括不要熬夜做产品、不做免费的产品、不做完美的产品。\",\"发布：当你的产品完成了最小 MVP 的时候，就可以发布了。\",\"别人说你的产品是垃圾，伪需求怎么办：需要重申审视是不是你的产品功能和特性不够，他是不是你的目标客户。\",\"如何保持积极的心态：积极是暂时的，不积极才是常态，关键是不要消极。\",\"如何面对压力：独立开发和创业一样有风险，需要有心理准备，最好有以下几方面准备：将独立开发当作\",\"全文总结 本文主要介绍了独立开发者的相关内容，包括什么是独立开发者、为什么要做独立开发者、有哪些牛逼的独立开发者、独立开发者面临的困境、独立开发的一些基本流程、想法、如何判断想法的是不是可以赚钱、三大核心问题、如何解决用户的问题、使用什么样的编程语言、采用什么样的产品形态、一个 MVP 产品最少需要做多少工作、一周开发一个新产品、三点金规铁律、发布、别人说你的产品是垃圾，伪需求怎么办、增长、心态、如何保持积极的心态、如何面对压力等。\",\"重要亮点\",\"什么是独立开发者：指的是一类独立的、自主运营并开发自己的在线业务以获得收入的人。\",\"为什么要做独立开发者：成为一名独立开发者可以提供很多传统工作所无法提供的优点，包括人身自由、财务自由、成长与学习、实现自己的想法等。\",\"有哪些牛逼的独立开发者：levelsio 和 Baye aka 威力狈是公认的独立开发者中的牛逼人物。\",\"独立开发者面临的困境：包括美工问题、营销问题、生活压力、保持动力等。\",\"独立开发的一些基本流程：包括想法、开发、发布等环节。\",\"想法：想法是一个产品的起始点，需要大致正确即可，在实践的过程中，想法可能会发生改变，产品方向也会发生改变。\",\"如何判断想法的是不是可以赚钱：做好一个 DEMO 页面，罗列你的想法和产品特点，中间加个具有号召性的按钮。然后把这个页面推广出去。最后做数据分析。根据分析结果，你很快就会知道你的想法是不是可以赚到钱。\",\"三大核心问题：包括产品有什么核心功能和特点、产品的目标客户是谁、目标客户会经常出现在那里。\",\"如何解决用户的问题：用户并不知道自己需要什么，直到我们拿出自己的产品，他们就会发现，这就是我想要的。\",\"使用什么样的编程语言：你会哪个就用哪个，熟悉哪个就用哪个。\",\"采用什么样的产品形态：需要考虑产品适合使用哪种产品形态、目标客户更愿意使用哪种产品、目前有能力提供哪种产品形态。\",\"一个 MVP 产品最少需要做多少工作：答案是 9 个页面和 9 个接口。\",\"一周开发一个新产品：对于一个中等水平的技术人员来说，一周的时间足够开发一个新产品。\",\"三点金规铁律：包括不要熬夜做产品、不做免费的产品、不做完美的产品。\",\"发布：当你的产品完成了最小 MVP 的时候，就可以发布了。\",\"别人说你的产品是垃圾，伪需求怎么办：需要重申审视是不是你的产品功能和特性不够，他是不是你的目标客户。\",\"如何保持积极的心态：积极是暂时的，不积极才是常态，关键是不要消极。\",\"如何面对压力：独立开发和创业一样有风险，需要有心理准备，最好有以下几方面准备：将独立开发当作\"]},\"89\":{\"h\":\"\",\"t\":[\"404 Not Found\"]},\"90\":{\"h\":\"云原生\"},\"91\":{\"h\":\"介绍\"},\"92\":{\"h\":\"技术科普\"},\"93\":{\"h\":\"杂谈\"}},\"dirtCount\":0,\"index\":[[\"杂谈\",{\"0\":{\"93\":1}}],[\"杂谈之独立开发者一点思考\",{\"1\":{\"88\":1}}],[\"技术科普\",{\"0\":{\"92\":1}}],[\"技术栈\",{\"0\":{\"74\":1}}],[\"介绍\",{\"0\":{\"91\":1}}],[\"云原生\",{\"0\":{\"90\":1}}],[\"云原生之kubeflow\",{\"1\":{\"28\":1}}],[\"关键是不要消极\",{\"1\":{\"88\":2}}],[\"关于客户端代码和运行时代码的命名约定\",{\"1\":{\"41\":1}}],[\"积极是暂时的\",{\"1\":{\"88\":2}}],[\"他是不是你的目标客户\",{\"1\":{\"88\":2}}],[\"他们就会发现\",{\"1\":{\"88\":2}}],[\"答案是\",{\"1\":{\"88\":2}}],[\"根据分析结果\",{\"1\":{\"88\":2}}],[\"罗列你的想法和产品特点\",{\"1\":{\"88\":2}}],[\"页面\",{\"1\":{\"88\":2}}],[\"做好一个\",{\"1\":{\"88\":2}}],[\"产品的目标客户是谁\",{\"1\":{\"88\":2}}],[\"产品方向也会发生改变\",{\"1\":{\"88\":2}}],[\"产品最少需要做多少工作\",{\"1\":{\"88\":4}}],[\"生活压力\",{\"1\":{\"88\":2}}],[\"生命周期中的自动化机器学习\",{\"1\":{\"56\":1}}],[\"生命周期的每个步骤\",{\"1\":{\"28\":1}}],[\"营销问题\",{\"1\":{\"88\":2}}],[\"威力狈是公认的独立开发者中的牛逼人物\",{\"1\":{\"88\":2}}],[\"财务自由\",{\"1\":{\"88\":2}}],[\"重要亮点\",{\"1\":{\"88\":2}}],[\"重新绑定\",{\"1\":{\"7\":1}}],[\"心态\",{\"1\":{\"88\":2}}],[\"增长\",{\"1\":{\"88\":2}}],[\"增强\",{\"1\":{\"68\":1}}],[\"伪需求怎么办\",{\"1\":{\"88\":4}}],[\"别人说你的产品是垃圾\",{\"1\":{\"88\":4}}],[\"发布等环节\",{\"1\":{\"88\":2}}],[\"发布\",{\"1\":{\"88\":4}}],[\"三点金规铁律\",{\"1\":{\"88\":4}}],[\"三大核心问题\",{\"1\":{\"88\":4}}],[\"采用什么样的产品形态\",{\"1\":{\"88\":4}}],[\"想法可能会发生改变\",{\"1\":{\"88\":2}}],[\"想法是一个产品的起始点\",{\"1\":{\"88\":2}}],[\"想法\",{\"1\":{\"88\":4}}],[\"独立开发和创业一样有风险\",{\"1\":{\"88\":2}}],[\"独立开发的一些基本流程\",{\"1\":{\"88\":4}}],[\"独立开发者面临的困境\",{\"1\":{\"88\":4}}],[\"独立开发者一点思考\",{\"0\":{\"88\":1}}],[\"全文总结\",{\"1\":{\"88\":2}}],[\"带来了显著的改进和优化\",{\"1\":{\"87\":1}}],[\"推送\",{\"1\":{\"87\":1}}],[\"压缩\",{\"1\":{\"87\":1}}],[\"显著提升\",{\"1\":{\"87\":1}}],[\"显著降低了延迟\",{\"1\":{\"86\":1}}],[\"受限于串行化处理和头部阻塞\",{\"1\":{\"87\":1}}],[\"性能\",{\"1\":{\"87\":1}}],[\"性能改进\",{\"0\":{\"86\":1}}],[\"单个连接处理多个并发请求\",{\"1\":{\"87\":1}}],[\"单个tcp连接上可以处理多个并发的请求\",{\"1\":{\"79\":1}}],[\"特性\",{\"1\":{\"87\":1}}],[\"特点\",{\"1\":{\"5\":1,\"6\":1,\"7\":1,\"8\":1}}],[\"改善了带宽利用\",{\"1\":{\"86\":1}}],[\"添加新功能可以通过新帧类型和更复杂的协议操作来实现\",{\"1\":{\"85\":1}}],[\"现代浏览器和服务器在实际应用中通常要求\",{\"1\":{\"84\":1}}],[\"尽管协议本身不强制这一点\",{\"1\":{\"84\":1}}],[\"加密是可选的\",{\"1\":{\"84\":1}}],[\"加密和安全\",{\"0\":{\"84\":1},\"1\":{\"87\":1}}],[\"加锁\",{\"1\":{\"0\":1}}],[\"所有请求被平等对待\",{\"1\":{\"83\":1}}],[\"优先级和流控制\",{\"0\":{\"83\":1},\"1\":{\"87\":1}}],[\"客户端可以指定不同流的优先级\",{\"1\":{\"83\":1}}],[\"客户端必须明确请求每个资源\",{\"1\":{\"82\":1}}],[\"客户端代码\",{\"1\":{\"41\":1}}],[\"减少了传输数据量\",{\"1\":{\"81\":1}}],[\"减少了人为操作的复杂性和风险\",{\"1\":{\"68\":1}}],[\"导致冗余和带宽浪费\",{\"1\":{\"81\":1}}],[\"头部信息仅在第一次请求时完整传输\",{\"1\":{\"81\":1}}],[\"头部压缩和服务器推送等功能\",{\"1\":{\"86\":1}}],[\"头部压缩\",{\"0\":{\"81\":1},\"1\":{\"87\":1}}],[\"头部阻塞问题\",{\"1\":{\"80\":1}}],[\"才能开始下一个请求\",{\"1\":{\"80\":1}}],[\"需要有心理准备\",{\"1\":{\"88\":2}}],[\"需要重申审视是不是你的产品功能和特性不够\",{\"1\":{\"88\":2}}],[\"需要考虑产品适合使用哪种产品形态\",{\"1\":{\"88\":2}}],[\"需要大致正确即可\",{\"1\":{\"88\":2}}],[\"需要等待当前请求完成后\",{\"1\":{\"80\":1}}],[\"需要手动编辑对应的\",{\"1\":{\"27\":1}}],[\"需要手工处理\",{\"1\":{\"3\":1}}],[\"流之间可以独立并行处理\",{\"1\":{\"79\":1}}],[\"流水线管理\",{\"1\":{\"61\":1}}],[\"流水线服务\",{\"1\":{\"58\":1,\"59\":1}}],[\"响应对在同一连接上的多个流中并发传输\",{\"1\":{\"80\":1}}],[\"响应对在一个单独的流中\",{\"1\":{\"79\":1}}],[\"响应对可以被处理\",{\"1\":{\"80\":1}}],[\"响应对\",{\"1\":{\"79\":1}}],[\"响应对通常需要一个单独的tcp连接\",{\"1\":{\"79\":1}}],[\"串行化处理\",{\"1\":{\"79\":1}}],[\"引入了连接保持\",{\"1\":{\"79\":1}}],[\"连接管理\",{\"0\":{\"79\":1},\"1\":{\"87\":1}}],[\"旨在提高网络性能和效率\",{\"1\":{\"77\":1}}],[\"协议类型\",{\"1\":{\"87\":1}}],[\"协议扩展性\",{\"0\":{\"85\":1},\"1\":{\"87\":1}}],[\"协议基础\",{\"0\":{\"78\":1}}],[\"协议的重大升级\",{\"1\":{\"77\":1}}],[\"协方差矩阵自适应进化策略\",{\"1\":{\"55\":1}}],[\"x\",{\"1\":{\"77\":1,\"78\":1,\"79\":1,\"80\":1,\"81\":1,\"82\":1,\"83\":1,\"84\":1,\"85\":1,\"86\":1,\"87\":1}}],[\"xgboost\",{\"1\":{\"55\":1}}],[\"计算机网络\",{\"0\":{\"77\":1}}],[\"欢迎联系我\",{\"1\":{\"76\":1}}],[\"追求技术创新\",{\"1\":{\"76\":1}}],[\"乐于接受新挑战\",{\"1\":{\"76\":1}}],[\"前端开发\",{\"0\":{\"76\":1}}],[\"深入理解spring\",{\"1\":{\"74\":1}}],[\"熟练使用vue\",{\"1\":{\"76\":1}}],[\"熟练使用java进行企业级应用开发\",{\"1\":{\"73\":1}}],[\"熟悉哪个就用哪个\",{\"1\":{\"88\":2}}],[\"熟悉element\",{\"1\":{\"76\":1}}],[\"熟悉typescript\",{\"1\":{\"76\":1}}],[\"熟悉redis\",{\"1\":{\"74\":1}}],[\"熟悉容器编排\",{\"1\":{\"74\":1}}],[\"熟悉go语言\",{\"1\":{\"73\":1}}],[\"机器学习以及自动化脚本编写方面有丰富经验\",{\"1\":{\"73\":1}}],[\"机制各自监听\",{\"1\":{\"0\":1}}],[\"尤其在数据分析\",{\"1\":{\"73\":1}}],[\"尤其是小文件\",{\"1\":{\"47\":1}}],[\"尤其是在\",{\"1\":{\"23\":1}}],[\"擅长使用nacos进行服务发现和配置管理\",{\"1\":{\"74\":1}}],[\"擅长底层编程和系统开发\",{\"1\":{\"73\":1}}],[\"擅长构建高性能和可扩展的后端服务\",{\"1\":{\"73\":1}}],[\"精通html\",{\"1\":{\"76\":1}}],[\"精通kubeflow\",{\"1\":{\"75\":1}}],[\"精通关系型数据库设计和优化\",{\"1\":{\"74\":1}}],[\"精通python\",{\"1\":{\"73\":1}}],[\"精通c语言\",{\"1\":{\"73\":1}}],[\"精通spring\",{\"1\":{\"73\":1}}],[\"编程语言\",{\"0\":{\"73\":1}}],[\"拥有广泛的编程语言知识和丰富的技术经验\",{\"1\":{\"72\":1}}],[\"大多数实现要求加密\",{\"1\":{\"87\":1}}],[\"大多数实现强制要求使用加密\",{\"1\":{\"84\":1}}],[\"大家好\",{\"1\":{\"72\":1}}],[\"大大增强了\",{\"1\":{\"71\":1}}],[\"个接口\",{\"1\":{\"88\":2}}],[\"个页面和\",{\"1\":{\"88\":2}}],[\"个人简介\",{\"1\":{\"72\":1}}],[\"个人介绍\",{\"0\":{\"72\":1}}],[\"个服务\",{\"1\":{\"61\":1}}],[\"逐步深入理解其背后的原理和应用场景\",{\"1\":{\"71\":1}}],[\"有哪些牛逼的独立开发者\",{\"1\":{\"88\":4}}],[\"有头部阻塞问题\",{\"1\":{\"87\":1}}],[\"有兴趣\",{\"1\":{\"71\":1}}],[\"有关组件的完整定义\",{\"1\":{\"42\":1}}],[\"有关单个管道运行的执行状态\",{\"1\":{\"38\":1}}],[\"有关单个管道运行的调试信息\",{\"1\":{\"38\":1}}],[\"消息队列\",{\"1\":{\"71\":1}}],[\"扩展复杂\",{\"1\":{\"87\":1}}],[\"扩展和添加新功能变得复杂\",{\"1\":{\"85\":1}}],[\"扩展和管理容器化应用程序\",{\"1\":{\"50\":1}}],[\"扩展\",{\"1\":{\"70\":1}}],[\"语言的开发框架和工具\",{\"1\":{\"70\":1}}],[\"语法调度运行\",{\"1\":{\"45\":1}}],[\"标准化管理流程\",{\"1\":{\"68\":1}}],[\"备份和恢复\",{\"1\":{\"67\":1,\"69\":1}}],[\"备份和故障处理等任务\",{\"1\":{\"64\":1}}],[\"复制等任务都可以通过\",{\"1\":{\"67\":1}}],[\"分片\",{\"1\":{\"67\":1}}],[\"分布式锁的三个主要核心要素\",{\"1\":{\"0\":1}}],[\"分布式锁最终是由写入此\",{\"1\":{\"0\":1}}],[\"专门用于管理自定义资源\",{\"1\":{\"65\":1}}],[\"专为高效的文件操作和网络操作设计\",{\"1\":{\"46\":1}}],[\"就是一个高级的控制器\",{\"1\":{\"65\":1}}],[\"就可以发布了\",{\"1\":{\"88\":2}}],[\"就可以查看这个图\",{\"1\":{\"44\":1}}],[\"就可以运行\",{\"1\":{\"28\":1}}],[\"结构的机制\",{\"1\":{\"65\":1}}],[\"升级和扩展\",{\"1\":{\"69\":1}}],[\"升级\",{\"1\":{\"64\":1}}],[\"部署\",{\"1\":{\"64\":1,\"66\":2}}],[\"部署和管理机器学习模型流水线\",{\"1\":{\"75\":1}}],[\"部署和管理\",{\"1\":{\"26\":1}}],[\"原生的\",{\"1\":{\"64\":1}}],[\">请求workflow\",{\"1\":{\"63\":1}}],[\"报告生成\",{\"1\":{\"61\":1}}],[\"报告服务\",{\"1\":{\"58\":1}}],[\"任务管理\",{\"1\":{\"61\":1}}],[\"任务服务\",{\"1\":{\"58\":1}}],[\"总结\",{\"0\":{\"61\":1,\"71\":1,\"87\":1}}],[\"总体而言\",{\"1\":{\"47\":1}}],[\"反射服务\",{\"1\":{\"60\":1}}],[\"认证服务\",{\"1\":{\"58\":1}}],[\"注册了以下\",{\"1\":{\"61\":1}}],[\"注册了以下服务\",{\"1\":{\"57\":1}}],[\"注册的服务\",{\"0\":{\"58\":1,\"59\":1}}],[\"注意\",{\"1\":{\"45\":1,\"47\":1}}],[\"函数中\",{\"1\":{\"57\":1,\"61\":1}}],[\"丰富的优化算法支持\",{\"1\":{\"56\":1}}],[\"训练框架一起使用\",{\"1\":{\"56\":1}}],[\"此外\",{\"1\":{\"56\":1}}],[\"集成\",{\"1\":{\"56\":3}}],[\"集群的部署\",{\"1\":{\"69\":1}}],[\"集群的部署和管理\",{\"1\":{\"69\":1}}],[\"集群启动和恢复\",{\"1\":{\"26\":1}}],[\"集群中的服务和控制器进行通信和协调\",{\"1\":{\"47\":1}}],[\"集群中的各种控制器\",{\"1\":{\"47\":1}}],[\"集群中的控制器\",{\"1\":{\"47\":1}}],[\"集群中提供强大的资源管理能力\",{\"1\":{\"21\":1}}],[\"集群中\",{\"1\":{\"10\":1}}],[\"解决了\",{\"1\":{\"56\":1}}],[\"更容易扩展\",{\"1\":{\"85\":1,\"87\":1}}],[\"更高效地解析和传输数据\",{\"1\":{\"78\":1}}],[\"更多算法支持即将推出\",{\"1\":{\"55\":1}}],[\"更新\",{\"1\":{\"27\":1}}],[\"随机搜索\",{\"1\":{\"55\":1}}],[\"帕尔森估计树\",{\"1\":{\"55\":1}}],[\"算法对头部进行压缩\",{\"1\":{\"81\":1}}],[\"算法\",{\"1\":{\"55\":1}}],[\"框架\",{\"1\":{\"55\":1}}],[\"框架无关的项目\",{\"1\":{\"55\":1}}],[\"信息\",{\"1\":{\"55\":1}}],[\"项目是开源的\",{\"1\":{\"55\":1}}],[\"项目\",{\"1\":{\"55\":1}}],[\"项目致力于让机器学习\",{\"1\":{\"28\":1}}],[\"什么是独立开发者\",{\"1\":{\"88\":2}}],[\"什么是\",{\"0\":{\"55\":1},\"1\":{\"64\":1}}],[\"非目标\",{\"0\":{\"54\":1}}],[\"促进\",{\"1\":{\"53\":1}}],[\"促进生态系统工具和\",{\"1\":{\"53\":1}}],[\"展示基本的健康检查\",{\"1\":{\"53\":1}}],[\"展示自定义资源定义\",{\"1\":{\"47\":1}}],[\"交互的\",{\"1\":{\"53\":1}}],[\"查看和管理应用程序的标准\",{\"1\":{\"53\":1}}],[\"希望可视化应用程序\",{\"1\":{\"52\":1}}],[\"希望以应用程序为中心进行操作的应用程序运营商\",{\"1\":{\"52\":1}}],[\"像\",{\"1\":{\"52\":1}}],[\"帮助它们查询和理解支持应用程序的对象\",{\"1\":{\"51\":1}}],[\"很有用\",{\"1\":{\"51\":1}}],[\"即垃圾回收\",{\"1\":{\"51\":1}}],[\"都可以帮助实现高效的运维管理\",{\"1\":{\"71\":1}}],[\"都集中在容器基础设施上\",{\"1\":{\"50\":1}}],[\"都不会出现死锁\",{\"1\":{\"0\":1}}],[\"然而\",{\"1\":{\"50\":1}}],[\"然后把这个页面推广出去\",{\"1\":{\"88\":2}}],[\"然后保存相关数据\",{\"1\":{\"63\":1}}],[\"然后\",{\"1\":{\"43\":1}}],[\"然后通过\",{\"1\":{\"0\":1}}],[\"官网地址\",{\"0\":{\"49\":1}}],[\"形成完整的机器学习工作流管理平台\",{\"1\":{\"47\":1}}],[\"调度和执行定时任务\",{\"1\":{\"47\":1}}],[\"调用管道服务以从静态配置创建管道运行\",{\"1\":{\"33\":1}}],[\"核心组件\",{\"1\":{\"47\":1}}],[\"支持流的优先级\",{\"1\":{\"83\":1}}],[\"支持服务器推送功能\",{\"1\":{\"82\":1}}],[\"支持多种\",{\"1\":{\"55\":1}}],[\"支持超参数调优\",{\"1\":{\"55\":1}}],[\"支持\",{\"1\":{\"47\":1,\"87\":3}}],[\"支持其他工作流执行器\",{\"1\":{\"47\":1}}],[\"共同提供了一个功能强大的机器学习工作流管理平台\",{\"1\":{\"47\":1}}],[\"共同实现超参数调优功能\",{\"1\":{\"47\":1}}],[\"共识算法实现的\",{\"1\":{\"0\":1}}],[\"监控和优化\",{\"1\":{\"47\":1}}],[\"监控和管理\",{\"0\":{\"27\":1}}],[\"平台\",{\"1\":{\"47\":1}}],[\"组成了\",{\"1\":{\"47\":1}}],[\"组件紧密合作\",{\"1\":{\"47\":1}}],[\"组件可以在循环中多次执行\",{\"1\":{\"45\":1}}],[\"组件不会在同一进程中运行\",{\"1\":{\"43\":1}}],[\"组件代表容器内的特定程序或入口点\",{\"1\":{\"43\":1}}],[\"组件代码\",{\"0\":{\"41\":1}}],[\"组件定义包括以下部分\",{\"1\":{\"42\":1}}],[\"组件定义\",{\"0\":{\"42\":1}}],[\"组件类似于函数\",{\"1\":{\"40\":1}}],[\"组件是一个独立的代码集\",{\"1\":{\"40\":1}}],[\"组件\",{\"1\":{\"28\":1,\"39\":1,\"47\":2}}],[\"视图\",{\"1\":{\"47\":1}}],[\"视图和大规模指标\",{\"1\":{\"36\":1}}],[\"持久化代理\",{\"1\":{\"47\":1}}],[\"负责机器学习工作流的定义\",{\"1\":{\"47\":1}}],[\"负责将元数据写入到持久化存储中\",{\"1\":{\"47\":1}}],[\"负责将元数据写入到存储后端\",{\"1\":{\"47\":1}}],[\"负责调度和执行\",{\"1\":{\"47\":1}}],[\"负责管理和执行工作流任务\",{\"1\":{\"47\":2}}],[\"负责管理和调度超参数搜索任务\",{\"1\":{\"47\":1}}],[\"负责管理\",{\"1\":{\"47\":4}}],[\"允许更重要的请求先行处理\",{\"1\":{\"83\":1}}],[\"允许多个请求\",{\"1\":{\"80\":1}}],[\"允许在同一个tcp连接上复用多个请求\",{\"1\":{\"79\":1}}],[\"允许优化任何规模的大模型的超参数\",{\"1\":{\"56\":1}}],[\"允许用户交互和监控工作流\",{\"1\":{\"47\":1}}],[\"允许用户在\",{\"1\":{\"47\":1}}],[\"允许被多个node挂载\",{\"1\":{\"2\":2}}],[\"服务器可以主动推送相关的css和javascript文件\",{\"1\":{\"82\":1}}],[\"服务器可以在客户端请求之前主动发送资源\",{\"1\":{\"82\":1}}],[\"服务器只能响应客户端的请求\",{\"1\":{\"82\":1}}],[\"服务器推送\",{\"0\":{\"82\":1},\"1\":{\"87\":1}}],[\"服务一起用于\",{\"1\":{\"47\":1}}],[\"服务\",{\"1\":{\"47\":1}}],[\"超参数调优工具\",{\"1\":{\"47\":1}}],[\"等工具创建和管理自定义资源\",{\"1\":{\"66\":1}}],[\"等等\",{\"1\":{\"55\":1}}],[\"等\",{\"1\":{\"47\":1,\"55\":1}}],[\"等信息\",{\"1\":{\"0\":1}}],[\"9\",{\"0\":{\"86\":1},\"1\":{\"88\":4}}],[\"9bzwq\",{\"1\":{\"47\":2}}],[\"92g5h\",{\"1\":{\"47\":2}}],[\"9956596d8\",{\"1\":{\"47\":2}}],[\"q9ddn\",{\"1\":{\"47\":2}}],[\"quota\",{\"1\":{\"13\":1}}],[\"6\",{\"0\":{\"83\":1}}],[\"65j6h\",{\"1\":{\"47\":2}}],[\"6c686b5b54\",{\"1\":{\"47\":2}}],[\"66457c4745\",{\"1\":{\"47\":2}}],[\"61\",{\"1\":{\"47\":1}}],[\"7\",{\"0\":{\"84\":1}}],[\"799c5f4b48\",{\"1\":{\"47\":2}}],[\"7cc7c5b47\",{\"1\":{\"47\":2}}],[\"7c6vk\",{\"1\":{\"47\":2}}],[\"77d684cf4\",{\"1\":{\"47\":2}}],[\"7d7dffdb8f\",{\"1\":{\"47\":2}}],[\"78d9bcc678\",{\"1\":{\"47\":2}}],[\"boot\",{\"1\":{\"74\":1}}],[\"boot框架\",{\"1\":{\"73\":1,\"74\":1}}],[\"bound\",{\"1\":{\"9\":1,\"10\":1}}],[\"baye\",{\"1\":{\"88\":2}}],[\"bayesian\",{\"1\":{\"55\":1}}],[\"backend\",{\"1\":{\"47\":2}}],[\"branch\",{\"1\":{\"48\":1}}],[\"built\",{\"1\":{\"48\":1}}],[\"bgwtr\",{\"1\":{\"47\":2}}],[\"~\",{\"1\":{\"47\":1}}],[\"yigou\",{\"1\":{\"47\":1}}],[\"yaml\",{\"1\":{\"13\":1,\"18\":1,\"24\":1,\"25\":3,\"27\":1,\"32\":1,\"42\":1}}],[\"团队仅推荐在\",{\"1\":{\"47\":1}}],[\"那么\",{\"1\":{\"47\":1}}],[\"选择\",{\"1\":{\"47\":3}}],[\"选择合适的工作流执行器取决于工作流的具体需求和集群环境\",{\"1\":{\"47\":1}}],[\"默认的\",{\"1\":{\"47\":1}}],[\"默认选择\",{\"1\":{\"47\":1}}],[\"默认值等\",{\"1\":{\"42\":1}}],[\"配置\",{\"1\":{\"69\":1}}],[\"配置中可能不适用\",{\"1\":{\"46\":1}}],[\"配置示例\",{\"0\":{\"13\":1,\"18\":1},\"1\":{\"13\":1,\"18\":1}}],[\"守护进程交互来管理容器\",{\"1\":{\"46\":1}}],[\"正式发布以来\",{\"1\":{\"46\":1}}],[\"正常启动\",{\"1\":{\"26\":1}}],[\"月\",{\"1\":{\"46\":1}}],[\"年\",{\"1\":{\"46\":1}}],[\"执行器之间进行选择\",{\"1\":{\"47\":1}}],[\"执行器和\",{\"1\":{\"47\":1}}],[\"执行器一直是\",{\"1\":{\"46\":1}}],[\"执行和监控容器\",{\"1\":{\"46\":1}}],[\"执行实际作业的代码\",{\"1\":{\"41\":1}}],[\"收集工件\",{\"1\":{\"45\":1}}],[\"日志\",{\"1\":{\"45\":1}}],[\"日志查看\",{\"1\":{\"27\":1}}],[\"能够快速开发美观且实用的前端界面\",{\"1\":{\"76\":1}}],[\"能够快速开发和部署企业级应用\",{\"1\":{\"74\":1}}],[\"能够设计和实现网页结构\",{\"1\":{\"76\":1}}],[\"能够编写高质量的可维护代码\",{\"1\":{\"76\":1}}],[\"能够创建动态和响应式的用户界面\",{\"1\":{\"76\":1}}],[\"能够构建\",{\"1\":{\"75\":1}}],[\"能够利用其高性能特性进行缓存和存储操作\",{\"1\":{\"74\":1}}],[\"能够利用其高并发和高性能特点开发后端服务\",{\"1\":{\"73\":1}}],[\"能够使用kubernetes进行微服务管理和部署\",{\"1\":{\"74\":1}}],[\"能够开发高效的系统级应用程序\",{\"1\":{\"73\":1}}],[\"能够将人类操作员的经验和最佳实践转化为自动化的操作流程\",{\"1\":{\"71\":1}}],[\"能够显示应用程序的指标\",{\"1\":{\"54\":1}}],[\"能够执行某些操作\",{\"1\":{\"45\":1}}],[\"能理解并呈现为丰富的可视化内容\",{\"1\":{\"45\":1}}],[\"入门指南\",{\"1\":{\"45\":1}}],[\"了解更多\",{\"1\":{\"55\":1}}],[\"了解更多信息\",{\"1\":{\"45\":1}}],[\"了解这些状态有助于掌握\",{\"1\":{\"4\":1}}],[\"转向使用\",{\"1\":{\"45\":1}}],[\"转换为字符串或文件\",{\"1\":{\"43\":1}}],[\"也可以是丰富的交互式可视化\",{\"1\":{\"45\":1}}],[\"也不能直接共享内存数据\",{\"1\":{\"43\":1}}],[\"快速决策或不同运行间的比较\",{\"1\":{\"45\":1}}],[\"optuna\",{\"1\":{\"56\":1}}],[\"optimization\",{\"1\":{\"55\":1}}],[\"operator\",{\"0\":{\"64\":1,\"65\":1,\"66\":1,\"67\":1,\"68\":1,\"69\":1,\"70\":1},\"1\":{\"56\":1,\"64\":3,\"65\":1,\"66\":3,\"67\":5,\"68\":3,\"69\":3,\"70\":4,\"71\":4}}],[\"of\",{\"1\":{\"55\":1}}],[\"one\",{\"1\":{\"88\":1}}],[\"on\",{\"1\":{\"48\":1}}],[\"output\",{\"1\":{\"45\":1}}],[\"org\",{\"1\":{\"28\":1}}],[\"类似子句后有条件地执行\",{\"1\":{\"45\":1}}],[\"类似于运行与其管道之间的关系\",{\"1\":{\"45\":1}}],[\"类型\",{\"1\":{\"42\":1}}],[\"步骤中的超参数优化或神经架构搜索问题\",{\"1\":{\"56\":1}}],[\"步骤与其组件之间的关系是一种实例化关系\",{\"1\":{\"45\":1}}],[\"步骤\",{\"1\":{\"45\":1}}],[\"每2小时或每45分钟\",{\"1\":{\"45\":1}}],[\"每个请求通常需要一个tcp连接\",{\"1\":{\"87\":1}}],[\"每个请求都需要发送完整的头部信息\",{\"1\":{\"81\":1}}],[\"每个请求\",{\"1\":{\"79\":2}}],[\"每个节点的右上角有一个图标\",{\"1\":{\"44\":1}}],[\"每个组件的代码包括以下部分\",{\"1\":{\"41\":1}}],[\"基于二进制\",{\"1\":{\"87\":1}}],[\"基于二进制的协议\",{\"1\":{\"78\":1}}],[\"基于纯文本\",{\"1\":{\"87\":1}}],[\"基于纯文本的协议\",{\"1\":{\"78\":1}}],[\"基于\",{\"1\":{\"46\":1}}],[\"基于时间间隔调度运行\",{\"1\":{\"45\":1}}],[\"基于主备异步复制导致锁的安全性问题\",{\"1\":{\"0\":1}}],[\"周期性\",{\"1\":{\"45\":1}}],[\"这就是我想要的\",{\"1\":{\"88\":2}}],[\"这有助于减少延迟和提升性能\",{\"1\":{\"82\":1}}],[\"这描述了自定义资源的结构和规范\",{\"1\":{\"66\":1}}],[\"这使得\",{\"1\":{\"56\":1}}],[\"这样的工具\",{\"1\":{\"52\":1}}],[\"这样的应用程序\",{\"1\":{\"51\":1}}],[\"这可以被以下用户使用\",{\"0\":{\"52\":1}}],[\"这对于将各种资源联系在一起甚至清理\",{\"1\":{\"51\":1}}],[\"这对于需要在容器之间共享数据的工作流特别有用\",{\"1\":{\"46\":1}}],[\"这种方法依赖于\",{\"1\":{\"46\":1}}],[\"这种连接可视化称为谱系图\",{\"1\":{\"45\":1}}],[\"这是默认的执行器\",{\"1\":{\"46\":1}}],[\"这会很有帮助\",{\"1\":{\"45\":1}}],[\"这些服务涵盖了实验管理\",{\"1\":{\"61\":1}}],[\"这些框架实现了大多数最先进的优化算法\",{\"1\":{\"56\":1}}],[\"这些组件通过存储系统\",{\"1\":{\"47\":1}}],[\"这些组件通过元数据存储和\",{\"1\":{\"47\":1}}],[\"这些组件必须在集群启动时运行\",{\"1\":{\"26\":1}}],[\"这些\",{\"1\":{\"39\":2,\"47\":3}}],[\"这些容器在虚拟机上的kubernetes\",{\"1\":{\"35\":1}}],[\"这些配置文件不会因为\",{\"1\":{\"24\":1}}],[\"禁用定期运行\",{\"1\":{\"45\":1}}],[\"启用\",{\"1\":{\"45\":1}}],[\"js进行前端开发\",{\"1\":{\"76\":1}}],[\"json\",{\"1\":{\"24\":1}}],[\"java\",{\"1\":{\"73\":1}}],[\"jobservice\",{\"1\":{\"58\":1,\"61\":1}}],[\"job\",{\"1\":{\"45\":1}}],[\"定时工作流\",{\"1\":{\"47\":1}}],[\"定期运行服务\",{\"1\":{\"59\":1}}],[\"定期运行的配置包括指定所有参数值的管道副本和运行触发器\",{\"1\":{\"45\":1}}],[\"定期运行\",{\"1\":{\"45\":1}}],[\"定义\",{\"1\":{\"66\":1}}],[\"定义的\",{\"1\":{\"25\":1}}],[\"定义文件\",{\"1\":{\"24\":1}}],[\"定义了资源的\",{\"1\":{\"66\":1}}],[\"定义了资源的硬性限制\",{\"1\":{\"14\":1}}],[\"定义了容器没有指定资源请求时的默认请求值\",{\"1\":{\"19\":1}}],[\"定义了容器没有指定资源请求和限制时的默认值\",{\"1\":{\"19\":1}}],[\"定义了单个容器必须请求的最小资源量\",{\"1\":{\"19\":1}}],[\"定义了单个容器可以请求的最大资源量\",{\"1\":{\"19\":1}}],[\"设计为自包含的\",{\"1\":{\"45\":1}}],[\"设置资源使用的默认值和最大\",{\"1\":{\"21\":1}}],[\"设置默认资源限制\",{\"1\":{\"17\":1}}],[\"节点可能会被跳过\",{\"1\":{\"44\":1}}],[\"失败\",{\"1\":{\"44\":1}}],[\"指的是一类独立的\",{\"1\":{\"88\":2}}],[\"指示其状态\",{\"1\":{\"44\":1}}],[\"指定了限制适用于\",{\"1\":{\"19\":1}}],[\"指定了\",{\"1\":{\"14\":1}}],[\"运行管理\",{\"1\":{\"61\":1}}],[\"运行服务\",{\"1\":{\"58\":1,\"59\":1}}],[\"运行一个像\",{\"1\":{\"51\":1}}],[\"运行一开始\",{\"1\":{\"44\":1}}],[\"运行\",{\"1\":{\"47\":1,\"56\":1}}],[\"运行和监控\",{\"1\":{\"47\":1}}],[\"运行和监控机器学习工作流\",{\"1\":{\"47\":1}}],[\"运行和监控功能\",{\"1\":{\"47\":1}}],[\"运行时信息包括任务的状态\",{\"1\":{\"45\":1}}],[\"运行时代码\",{\"1\":{\"41\":1}}],[\"运行触发器是一个标志\",{\"1\":{\"45\":1}}],[\"运行包含你尝试的所有实验的不可变日志\",{\"1\":{\"45\":1}}],[\"运行中\",{\"1\":{\"44\":1}}],[\"子关系\",{\"1\":{\"44\":1}}],[\"箭头指示了管道组件之间的父\",{\"1\":{\"44\":1}}],[\"图中的每个节点对应管道中的一个步骤\",{\"1\":{\"44\":1}}],[\"图显示了管道运行已执行或正在执行的步骤\",{\"1\":{\"44\":1}}],[\"图\",{\"1\":{\"44\":1}}],[\"必须反序列化这些数据以供下游组件使用\",{\"1\":{\"43\":1}}],[\"镜像\",{\"1\":{\"43\":1}}],[\"请访问\",{\"1\":{\"55\":1}}],[\"请参阅\",{\"1\":{\"45\":1}}],[\"请参见组件规范\",{\"1\":{\"42\":1}}],[\"请求apiserver\",{\"1\":{\"63\":1}}],[\"请求\",{\"1\":{\"18\":1}}],[\"请求量\",{\"1\":{\"18\":1}}],[\"请求总量\",{\"1\":{\"13\":1}}],[\"请求匹配\",{\"1\":{\"9\":1}}],[\"实现自己的想法等\",{\"1\":{\"88\":2}}],[\"实现控制器\",{\"1\":{\"66\":1}}],[\"实现互操作\",{\"1\":{\"52\":1}}],[\"实现部分还描述了组件完成运行后如何获取输出值\",{\"1\":{\"42\":1}}],[\"实现\",{\"1\":{\"42\":1,\"53\":1}}],[\"实验服务\",{\"1\":{\"58\":1,\"59\":1}}],[\"实验可以包含任意的运行\",{\"1\":{\"45\":1}}],[\"实验是一个工作空间\",{\"1\":{\"45\":1}}],[\"实验\",{\"1\":{\"36\":1}}],[\"接口进行通信\",{\"1\":{\"47\":1}}],[\"接口\",{\"1\":{\"42\":1,\"47\":1}}],[\"名称\",{\"1\":{\"42\":2}}],[\"元数据写入器\",{\"1\":{\"47\":1}}],[\"元数据服务\",{\"1\":{\"47\":2}}],[\"元数据\",{\"1\":{\"42\":1,\"47\":1}}],[\"用户并不知道自己需要什么\",{\"1\":{\"88\":2}}],[\"用户可以使用\",{\"1\":{\"66\":1}}],[\"用户可以创建和管理新的自定义资源\",{\"1\":{\"65\":1}}],[\"用户可以利用\",{\"1\":{\"56\":1}}],[\"用户可以根据具体需求和工作流特点选择合适的\",{\"1\":{\"47\":1}}],[\"用户甚至可以使用\",{\"1\":{\"56\":1}}],[\"用户界面\",{\"1\":{\"47\":6}}],[\"用户需要选择一个工作流执行器\",{\"1\":{\"45\":1}}],[\"用\",{\"1\":{\"42\":1}}],[\"用于生成和管理\",{\"1\":{\"70\":1}}],[\"用于简化\",{\"1\":{\"69\":1}}],[\"用于定义\",{\"1\":{\"65\":1}}],[\"用于自动化部署\",{\"1\":{\"50\":1}}],[\"用于自定义\",{\"1\":{\"47\":1}}],[\"用于管理元数据\",{\"1\":{\"47\":1}}],[\"用于支持机器学习工作流的定义\",{\"1\":{\"47\":1}}],[\"用于展示机器学习工作流的执行状态和结果\",{\"1\":{\"47\":1}}],[\"用于创建\",{\"1\":{\"47\":1}}],[\"用于查看和监控超参数调优任务的状态和结果\",{\"1\":{\"47\":1}}],[\"用于告知系统何时生成新的定期运行配置\",{\"1\":{\"45\":1}}],[\"用于确保关键组件的高可用性和独立性\",{\"1\":{\"27\":1}}],[\"用于表示集群中持久化存储的详细信息和状态\",{\"1\":{\"4\":1}}],[\"程序包含客户端代码\",{\"1\":{\"41\":1}}],[\"代码\",{\"1\":{\"41\":1}}],[\"例如重新启动故障的组件\",{\"1\":{\"67\":1}}],[\"例如系统管理员\",{\"1\":{\"64\":1}}],[\"例如贝叶斯优化\",{\"1\":{\"55\":1}}],[\"例如在\",{\"1\":{\"50\":1}}],[\"例如\",{\"1\":{\"41\":2,\"45\":1,\"51\":2,\"52\":1,\"55\":1,\"67\":1,\"82\":1}}],[\"例如数据预处理\",{\"1\":{\"40\":1}}],[\"返回值和主体\",{\"1\":{\"40\":1}}],[\"具备高效处理大规模数据的能力\",{\"1\":{\"74\":1}}],[\"具备扎实的c++基础\",{\"1\":{\"73\":1}}],[\"具备更高的安全性\",{\"1\":{\"0\":1}}],[\"具有名称\",{\"1\":{\"40\":1}}],[\"模型训练等\",{\"1\":{\"40\":1}}],[\"universal\",{\"1\":{\"70\":1}}],[\"unlock\",{\"1\":{\"0\":3}}],[\"ui库\",{\"1\":{\"76\":1}}],[\"ui\",{\"1\":{\"39\":1,\"44\":1,\"45\":3,\"47\":6,\"53\":2,\"54\":1,\"76\":1}}],[\"容器来执行超参数调优任务\",{\"1\":{\"56\":1}}],[\"容器化组件\",{\"0\":{\"43\":1}}],[\"容器\",{\"1\":{\"39\":1}}],[\"容器的默认内存请求\",{\"1\":{\"18\":1}}],[\"容器的默认内存请求量\",{\"1\":{\"18\":1}}],[\"容器的默认\",{\"1\":{\"18\":2}}],[\"容器的最小内存使用量\",{\"1\":{\"18\":1}}],[\"容器的最小\",{\"1\":{\"18\":1}}],[\"容器的最大内存使用量\",{\"1\":{\"18\":1}}],[\"容器的最大\",{\"1\":{\"18\":1}}],[\"对于一个中等水平的技术人员来说\",{\"1\":{\"88\":2}}],[\"对于名为\",{\"1\":{\"41\":1}}],[\"对应于工作流\",{\"1\":{\"39\":1}}],[\"对象和可视化\",{\"1\":{\"50\":1}}],[\"对象的\",{\"1\":{\"0\":2}}],[\"对象\",{\"1\":{\"0\":1}}],[\"对象后\",{\"1\":{\"0\":1}}],[\"参数\",{\"1\":{\"39\":1,\"40\":1}}],[\"数据库的创建\",{\"1\":{\"69\":1}}],[\"数据库集群的创建\",{\"1\":{\"67\":1}}],[\"数据库管理器\",{\"1\":{\"47\":1}}],[\"数据可视化和认证功能\",{\"1\":{\"61\":1}}],[\"数据可能仍然存在于\",{\"1\":{\"7\":1}}],[\"数据的数据库\",{\"1\":{\"47\":1}}],[\"数据转换\",{\"1\":{\"40\":1}}],[\"数据工件列表\",{\"1\":{\"38\":1}}],[\"输出工件\",{\"1\":{\"45\":1}}],[\"输出工件和每个步骤的日志\",{\"1\":{\"45\":1}}],[\"输出规范\",{\"1\":{\"42\":1}}],[\"输出包括容器参数或数据工件uri\",{\"1\":{\"37\":1}}],[\"输入\",{\"1\":{\"37\":1,\"42\":1}}],[\"度量数据被聚合用于排序和过滤\",{\"1\":{\"36\":1}}],[\"一周的时间足够开发一个新产品\",{\"1\":{\"88\":2}}],[\"一周开发一个新产品\",{\"1\":{\"88\":4}}],[\"一次运行\",{\"1\":{\"45\":1}}],[\"一组编排控制器执行完成管道所需的容器\",{\"1\":{\"35\":1}}],[\"一个流行的工具包\",{\"1\":{\"70\":1}}],[\"一个连接基础设施\",{\"1\":{\"51\":1}}],[\"一个示例控制器是argo\",{\"1\":{\"35\":1}}],[\"一个\",{\"1\":{\"9\":1,\"88\":4}}],[\"一个写请求需要经过集群多数节点确认\",{\"1\":{\"0\":1}}],[\"系统中的组件\",{\"1\":{\"42\":1}}],[\"系统会启动一个或多个\",{\"1\":{\"39\":1}}],[\"系统组件的平台\",{\"1\":{\"29\":1}}],[\"系统部署到各种环境以进行开发\",{\"1\":{\"28\":1}}],[\"作为二进制协议\",{\"1\":{\"85\":1}}],[\"作为工作流引擎\",{\"1\":{\"45\":1}}],[\"作为元数据依赖\",{\"1\":{\"45\":1}}],[\"作为在\",{\"1\":{\"29\":1}}],[\"作业管理\",{\"1\":{\"61\":1}}],[\"作业服务\",{\"1\":{\"58\":1}}],[\"作业的代码\",{\"1\":{\"41\":1}}],[\"作业\",{\"1\":{\"36\":1}}],[\"作用\",{\"0\":{\"12\":1,\"17\":1}}],[\"概念概述\",{\"0\":{\"29\":1}}],[\"工件的可用性\",{\"1\":{\"45\":1}}],[\"工件可以是简单的文本数据视图\",{\"1\":{\"45\":1}}],[\"工件还使得理解管道各个组件的工作方式成为可能\",{\"1\":{\"45\":1}}],[\"工作流控制器\",{\"1\":{\"47\":2}}],[\"工作流执行器\",{\"1\":{\"47\":1}}],[\"工作流执行器类型包括\",{\"0\":{\"46\":1}}],[\"工作流执行器是一个符合特定接口的进程\",{\"1\":{\"45\":1}}],[\"工作流\",{\"1\":{\"40\":1}}],[\"工作流的描述\",{\"1\":{\"39\":1}}],[\"工作流在\",{\"1\":{\"28\":1}}],[\"工具包\",{\"1\":{\"29\":1}}],[\"工程师和运营团队\",{\"1\":{\"28\":1}}],[\"测试和生产级服务的\",{\"1\":{\"28\":1}}],[\"管道中的每个组件独立执行\",{\"1\":{\"43\":1}}],[\"管道\",{\"1\":{\"39\":1,\"40\":1}}],[\"管道配置包括运行管道所需的输入\",{\"1\":{\"39\":1}}],[\"管道是对机器学习\",{\"1\":{\"39\":1}}],[\"管道执行历史记录\",{\"1\":{\"38\":1}}],[\"管道web服务器从各种服务中收集数据以显示相关视图\",{\"1\":{\"38\":1}}],[\"管道持久性代理记录已执行的容器集合及其输入和输出\",{\"1\":{\"37\":1}}],[\"管道持久性代理监视管道服务创建的kubernetes资源\",{\"1\":{\"37\":1}}],[\"管道包\",{\"1\":{\"36\":1}}],[\"管道运行和单个标量指标\",{\"1\":{\"36\":1}}],[\"管道服务调用kubernetes\",{\"1\":{\"34\":1}}],[\"管道的执行过程如下\",{\"1\":{\"30\":1}}],[\"管道的数据科学家的平台\",{\"1\":{\"28\":1}}],[\"管理和协调工作流的各个部分\",{\"1\":{\"47\":1}}],[\"管理和调度超参数调优任务\",{\"1\":{\"47\":1}}],[\"管理工作流的持久化存储\",{\"1\":{\"47\":1}}],[\"管理存储\",{\"1\":{\"47\":1}}],[\"管理容器生命周期等\",{\"1\":{\"45\":1}}],[\"管理\",{\"1\":{\"24\":1,\"64\":1,\"69\":1}}],[\"管理员可以更好地管理和监控资源使用情况\",{\"1\":{\"12\":1}}],[\"管理员可以手动将\",{\"1\":{\"9\":1}}],[\"涵盖\",{\"1\":{\"28\":1}}],[\"下面是每个\",{\"1\":{\"47\":1}}],[\"下面最早创建的一个\",{\"1\":{\"0\":1}}],[\"下图展示了\",{\"1\":{\"29\":1}}],[\"下图展示了主要的\",{\"1\":{\"28\":1}}],[\"只有一个请求\",{\"1\":{\"80\":1}}],[\"只要能够收集优化指标\",{\"1\":{\"56\":1}}],[\"只要您运行\",{\"1\":{\"28\":1}}],[\"只读权限\",{\"1\":{\"2\":1}}],[\"开源系统部署到各种基础设施中\",{\"1\":{\"28\":1}}],[\"开发\",{\"0\":{\"70\":1},\"1\":{\"88\":2}}],[\"开发者首先需要定义\",{\"1\":{\"66\":1}}],[\"开发者指南是希望为该项目做出贡献的开发者的良好起点\",{\"1\":{\"55\":1}}],[\"开发完成管道后\",{\"1\":{\"39\":1}}],[\"开发与测试环境\",{\"1\":{\"20\":1}}],[\"开发环境中的资源限制\",{\"1\":{\"21\":1}}],[\"开发环境\",{\"1\":{\"15\":1}}],[\"将独立开发当作\",{\"1\":{\"88\":2}}],[\"将\",{\"1\":{\"68\":1}}],[\"将原始数据转换为预处理数据的\",{\"1\":{\"41\":1}}],[\"将最佳的\",{\"1\":{\"28\":1}}],[\"将上述\",{\"1\":{\"25\":1}}],[\"而容器则会启动你的程序\",{\"1\":{\"39\":1}}],[\"而是提供一种简单的方法\",{\"1\":{\"28\":1}}],[\"而不影响现有的功能\",{\"1\":{\"85\":1}}],[\"而不是应用程序本身\",{\"1\":{\"50\":1}}],[\"而不是通过\",{\"1\":{\"23\":1}}],[\"而不依赖于\",{\"1\":{\"26\":1}}],[\"我致力于不断提升自己的技术水平和解决实际问题的能力\",{\"1\":{\"76\":1}}],[\"我是一名全栈开发工程师\",{\"1\":{\"72\":1}}],[\"我们的目标不是重新创建其他服务\",{\"1\":{\"28\":1}}],[\"我才能有机会\",{\"1\":{\"0\":1}}],[\"differentiable\",{\"1\":{\"55\":1}}],[\"dashboards\",{\"1\":{\"52\":1}}],[\"dashboard\",{\"1\":{\"50\":1,\"52\":1}}],[\"date\",{\"1\":{\"48\":1}}],[\"dataproc\",{\"1\":{\"41\":1}}],[\"d894ffcd8\",{\"1\":{\"47\":2}}],[\"db\",{\"1\":{\"47\":3}}],[\"dockerfile\",{\"1\":{\"47\":1}}],[\"dockerexecutor\",{\"1\":{\"46\":1,\"47\":2}}],[\"docker\",{\"1\":{\"39\":1,\"43\":1,\"46\":2,\"47\":3}}],[\"docs\",{\"1\":{\"28\":1}}],[\"dsl编译器将您的管道的python代码转换为静态配置\",{\"1\":{\"32\":1}}],[\"dsl\",{\"1\":{\"31\":1}}],[\"demo\",{\"1\":{\"88\":2}}],[\"declarative\",{\"1\":{\"70\":1}}],[\"deployments\",{\"1\":{\"51\":1}}],[\"deployment\",{\"1\":{\"24\":2,\"47\":5,\"48\":1}}],[\"definition\",{\"1\":{\"65\":1}}],[\"defaultrequest\",{\"1\":{\"18\":1,\"19\":1}}],[\"default\",{\"1\":{\"18\":1,\"19\":1}}],[\"defer\",{\"1\":{\"0\":2}}],[\"delete\",{\"1\":{\"3\":1}}],[\"deletion\",{\"1\":{\"0\":1}}],[\"提升了用户体验和网络性能\",{\"1\":{\"87\":1}}],[\"提升了整体性能\",{\"1\":{\"86\":1}}],[\"提升资源管理能力\",{\"1\":{\"12\":1}}],[\"提前停止和神经架构搜索\",{\"1\":{\"55\":1}}],[\"提供流量控制机制\",{\"1\":{\"83\":1}}],[\"提供一种方式\",{\"1\":{\"54\":1}}],[\"提供一种明确的机制\",{\"1\":{\"53\":1}}],[\"提供一种标准方式\",{\"1\":{\"53\":1}}],[\"提供一个用于在\",{\"1\":{\"53\":1}}],[\"提供应用程序的安装状态和垃圾回收\",{\"1\":{\"53\":1}}],[\"提供通过\",{\"1\":{\"53\":1}}],[\"提供工作流执行状态和结果的可视化\",{\"1\":{\"47\":1}}],[\"提供了一种声明性的方式来定义和管理\",{\"1\":{\"70\":1}}],[\"提供了面向\",{\"1\":{\"70\":1}}],[\"提供了从生成基础代码到测试和部署的全流程支持\",{\"1\":{\"70\":1}}],[\"提供了从超参数调优到机器学习工作流管理的完整功能\",{\"1\":{\"47\":1}}],[\"提供了定义自定义对象的能力\",{\"1\":{\"65\":1}}],[\"提供了机器学习工作流的定义\",{\"1\":{\"47\":1}}],[\"提供\",{\"1\":{\"47\":7}}],[\"提供的一种灵活机制\",{\"1\":{\"27\":1}}],[\"要更新\",{\"1\":{\"27\":1}}],[\"要创建一个\",{\"1\":{\"25\":1}}],[\"go\",{\"1\":{\"70\":1,\"73\":1}}],[\"google\",{\"1\":{\"41\":1,\"45\":1,\"55\":1}}],[\"gcr\",{\"1\":{\"48\":1}}],[\"gcepersistentdisk\",{\"1\":{\"3\":1}}],[\"github\",{\"1\":{\"48\":1,\"49\":1}}],[\"grpc\",{\"1\":{\"47\":8}}],[\"graph\",{\"0\":{\"44\":1},\"1\":{\"44\":1,\"45\":1}}],[\"getstringconfig\",{\"1\":{\"58\":2}}],[\"get\",{\"1\":{\"27\":1,\"47\":1}}],[\"命令查看\",{\"1\":{\"27\":2}}],[\"命名空间\",{\"1\":{\"15\":1}}],[\"略有不同\",{\"1\":{\"27\":1}}],[\"来优化非ml任务\",{\"1\":{\"56\":1}}],[\"来运行节点级别的服务或代理\",{\"1\":{\"26\":1}}],[\"来创建和管理\",{\"1\":{\"23\":1}}],[\"简化了\",{\"1\":{\"70\":1}}],[\"简化数据库集群的管理\",{\"1\":{\"69\":1}}],[\"简化运维操作\",{\"1\":{\"68\":1}}],[\"简化的节点管理\",{\"1\":{\"26\":1}}],[\"简介\",{\"0\":{\"28\":1},\"1\":{\"28\":2}}],[\"简单清除文件的操作\",{\"1\":{\"3\":1}}],[\"86868f775c\",{\"1\":{\"47\":2}}],[\"849479cf5f\",{\"1\":{\"47\":2}}],[\"8\",{\"0\":{\"85\":1},\"1\":{\"46\":1}}],[\"80\",{\"1\":{\"25\":1}}],[\"8gi\",{\"1\":{\"13\":1}}],[\"io\",{\"1\":{\"48\":4}}],[\"indiehacker\",{\"1\":{\"88\":1}}],[\"in\",{\"1\":{\"48\":1}}],[\"ingress\",{\"1\":{\"46\":1}}],[\"introduction\",{\"1\":{\"28\":1}}],[\"imagepullpolicy\",{\"1\":{\"48\":1}}],[\"image\",{\"1\":{\"25\":1,\"48\":2}}],[\"ifnotpresent\",{\"1\":{\"48\":1}}],[\"if\",{\"1\":{\"0\":6,\"45\":1}}],[\"文件保存到节点的\",{\"1\":{\"25\":1}}],[\"文件路径\",{\"1\":{\"25\":1}}],[\"文件\",{\"1\":{\"25\":1,\"27\":1}}],[\"你会哪个就用哪个\",{\"1\":{\"88\":2}}],[\"你很快就会知道你的想法是不是可以赚到钱\",{\"1\":{\"88\":2}}],[\"你还可以指定最大并发运行数\",{\"1\":{\"45\":1}}],[\"你可以查看跨管道运行的工件和执行之间的连接\",{\"1\":{\"45\":1}}],[\"你可以从\",{\"1\":{\"45\":1}}],[\"你可以在任何实验中启动定期运行\",{\"1\":{\"45\":1}}],[\"你可以在其中尝试管道的不同配置\",{\"1\":{\"45\":1}}],[\"你可以通过查看\",{\"1\":{\"45\":1}}],[\"你可以使用实验将你的运行组织成逻辑组\",{\"1\":{\"45\":1}}],[\"你可以使用\",{\"1\":{\"39\":1}}],[\"你必须将传递给组件之间的数据序列化\",{\"1\":{\"43\":1}}],[\"你必须将组件打包为\",{\"1\":{\"43\":1}}],[\"你仍然可以使用\",{\"1\":{\"27\":1}}],[\"你需要在节点的特定目录中\",{\"1\":{\"25\":1}}],[\"你都需要确保任意故障场景下\",{\"1\":{\"0\":1}}],[\"创建runs\",{\"0\":{\"63\":1}}],[\"创建流水线只是把相关参数信息写入数据库\",{\"1\":{\"62\":1}}],[\"创建一个所有工具必须实现的标准\",{\"1\":{\"54\":1}}],[\"创建一个包含\",{\"1\":{\"25\":1}}],[\"创建组件或指定管道\",{\"1\":{\"31\":1}}],[\"创建\",{\"0\":{\"25\":1}}],[\"创建了一个\",{\"1\":{\"0\":1}}],[\"保持动力等\",{\"1\":{\"88\":2}}],[\"保证这些关键组件的高可用性\",{\"1\":{\"24\":1}}],[\"保留数据\",{\"1\":{\"3\":1}}],[\"崩溃或被删除\",{\"1\":{\"24\":1}}],[\"自主运营并开发自己的在线业务以获得收入的人\",{\"1\":{\"88\":2}}],[\"自愈能力\",{\"1\":{\"67\":1}}],[\"自动处理\",{\"1\":{\"69\":1}}],[\"自动化\",{\"1\":{\"69\":1}}],[\"自动化了许多日常的运维任务\",{\"1\":{\"68\":1}}],[\"自动化升级\",{\"1\":{\"67\":1}}],[\"自动修复出现的问题\",{\"1\":{\"67\":1}}],[\"自动执行\",{\"1\":{\"67\":1}}],[\"自动重启\",{\"1\":{\"24\":1}}],[\"自定义资源\",{\"1\":{\"65\":1}}],[\"自定义资源定义\",{\"1\":{\"50\":1,\"65\":1}}],[\"自\",{\"1\":{\"46\":1}}],[\"自身来管理\",{\"1\":{\"26\":1}}],[\"自身的管理中\",{\"1\":{\"23\":1}}],[\"存储工作流定义和执行状态\",{\"1\":{\"47\":1}}],[\"存储超参数调优任务的状态和结果\",{\"1\":{\"47\":1}}],[\"存储和对象数量等\",{\"1\":{\"14\":1}}],[\"存放在节点的文件系统中\",{\"1\":{\"24\":1}}],[\"格式的组件规范描述\",{\"1\":{\"42\":1}}],[\"格式\",{\"1\":{\"24\":1}}],[\"静态配置\",{\"1\":{\"24\":1}}],[\"静态pod\",{\"0\":{\"23\":1}}],[\"滚动更新等高级特性\",{\"1\":{\"24\":1}}],[\"没有内建的优先级控制机制\",{\"1\":{\"83\":1}}],[\"没有\",{\"1\":{\"24\":1}}],[\"会启动\",{\"1\":{\"39\":1}}],[\"会自动检测到文件的变化并重新创建\",{\"1\":{\"27\":1}}],[\"会自动检测到该文件并创建对应的\",{\"1\":{\"25\":1}}],[\"会根据配置文件自动重新创建它们\",{\"1\":{\"24\":1}}],[\"会定期扫描特定的目录\",{\"1\":{\"24\":1}}],[\"会使用我们上面的介绍的\",{\"1\":{\"0\":1}}],[\"由于是文本协议\",{\"1\":{\"85\":1}}],[\"由于\",{\"1\":{\"27\":1}}],[\"由于某种原因无法使用\",{\"1\":{\"8\":1}}],[\"由运行在节点上的\",{\"1\":{\"24\":1}}],[\"由\",{\"1\":{\"24\":1,\"27\":1}}],[\"直到我们拿出自己的产品\",{\"1\":{\"88\":2}}],[\"直到被释放\",{\"1\":{\"6\":1}}],[\"直接与\",{\"1\":{\"46\":1}}],[\"直接与集群交互\",{\"1\":{\"46\":1}}],[\"直接管理\",{\"1\":{\"23\":1,\"24\":1,\"27\":1}}],[\"两者结合使用\",{\"1\":{\"21\":1}}],[\"典型场景\",{\"1\":{\"21\":2}}],[\"目前有能力提供哪种产品形态\",{\"1\":{\"88\":2}}],[\"目前只有nfs和hostpath两种类型的pv支持recycle策略\",{\"1\":{\"3\":1}}],[\"目标客户更愿意使用哪种产品\",{\"1\":{\"88\":2}}],[\"目标客户会经常出现在那里\",{\"1\":{\"88\":2}}],[\"目标发现和告警管理\",{\"1\":{\"69\":1}}],[\"目标\",{\"0\":{\"53\":1}}],[\"目录包含所有运行时代码\",{\"1\":{\"41\":1}}],[\"目录中后\",{\"1\":{\"25\":1}}],[\"目的\",{\"1\":{\"21\":2}}],[\"适用于需要高效处理大量小文件的工作流\",{\"1\":{\"46\":1}}],[\"适用于大多数场景\",{\"1\":{\"46\":1}}],[\"适用于单个\",{\"1\":{\"21\":1}}],[\"适用于整个命名空间的资源总量\",{\"1\":{\"21\":1}}],[\"适用的对象范围\",{\"1\":{\"14\":1}}],[\"范围\",{\"1\":{\"21\":2}}],[\"比较与总结\",{\"0\":{\"21\":1}}],[\"比自己小的\",{\"1\":{\"0\":2}}],[\"从而优化集群性能和资源利用率\",{\"1\":{\"20\":1}}],[\"从而影响其他命名空间的正常运行\",{\"1\":{\"11\":1}}],[\"资源优化\",{\"1\":{\"20\":1}}],[\"确保没有流会独占带宽\",{\"1\":{\"83\":1}}],[\"确保高可用性和数据一致性\",{\"1\":{\"69\":1}}],[\"确保工作流按照定义的步骤顺利执行\",{\"1\":{\"47\":1}}],[\"确保其他\",{\"1\":{\"47\":1}}],[\"确保关键组件能够独立于\",{\"1\":{\"26\":1}}],[\"确保资源的公平分配和高效使用\",{\"1\":{\"21\":1}}],[\"确保资源的合理分配和使用\",{\"1\":{\"20\":1}}],[\"确保集群资源的公平分配和高效利用\",{\"1\":{\"21\":1}}],[\"确保所有容器符合预期的资源使用模式\",{\"1\":{\"20\":1}}],[\"确保每个命名空间不会消耗超过指定的资源限额\",{\"1\":{\"12\":1}}],[\"应用部署和管理\",{\"1\":{\"67\":1}}],[\"应用\",{\"1\":{\"66\":1}}],[\"应用程序的配置\",{\"1\":{\"64\":1}}],[\"应用程序的资源标准化和资源优化\",{\"1\":{\"21\":1}}],[\"应用程序使用通用的标签和注释\",{\"1\":{\"53\":1}}],[\"应用程序级别的健康检查\",{\"1\":{\"51\":1}}],[\"应用程序\",{\"0\":{\"50\":1}}],[\"应用程序标准化\",{\"1\":{\"20\":1}}],[\"应用类型\",{\"1\":{\"18\":1}}],[\"鼓励开发人员在部署\",{\"1\":{\"17\":1}}],[\"鼓励合理的资源分配\",{\"1\":{\"17\":1}}],[\"防止个体资源过度消耗\",{\"1\":{\"21\":1}}],[\"防止过多的资源消耗影响整个集群的性能\",{\"1\":{\"17\":1}}],[\"防止资源过度配置或资源不足\",{\"1\":{\"20\":1}}],[\"防止资源过度消耗\",{\"1\":{\"17\":1}}],[\"防止资源耗尽\",{\"1\":{\"12\":1}}],[\"与许多优化框架\",{\"1\":{\"56\":1}}],[\"与应用程序\",{\"1\":{\"53\":1}}],[\"与元数据\",{\"1\":{\"47\":1}}],[\"与执行或工件关联的自定义属性等\",{\"1\":{\"45\":1}}],[\"与端点通信以提交作业的代码\",{\"1\":{\"41\":1}}],[\"与\",{\"1\":{\"16\":1,\"41\":1,\"47\":1,\"56\":2}}],[\"与pv相连的后端存储完成volume的删除操作\",{\"1\":{\"3\":1}}],[\"成长与学习\",{\"1\":{\"88\":2}}],[\"成为一名独立开发者可以提供很多传统工作所无法提供的优点\",{\"1\":{\"88\":2}}],[\"成功\",{\"1\":{\"44\":1}}],[\"成功后\",{\"1\":{\"0\":1}}],[\"成本管理\",{\"1\":{\"15\":1}}],[\"之间的互操作性\",{\"1\":{\"53\":1}}],[\"之间的资源使用\",{\"1\":{\"15\":1}}],[\"之间有一定的关联关系\",{\"1\":{\"47\":1}}],[\"之上安排\",{\"1\":{\"29\":1}}],[\"之上\",{\"1\":{\"28\":1}}],[\"之前已经绑定的\",{\"1\":{\"7\":1}}],[\"控制平面来实现和基准测试他们自己的优化算法\",{\"1\":{\"56\":1}}],[\"控制平面组件\",{\"1\":{\"23\":1,\"26\":2}}],[\"控制器的核心任务是不断将资源的实际状态调整为期望状态\",{\"1\":{\"66\":1}}],[\"控制器监控自定义资源的状态\",{\"1\":{\"66\":1}}],[\"控制器是\",{\"1\":{\"65\":1}}],[\"控制器管理器\",{\"1\":{\"47\":2}}],[\"控制器\",{\"1\":{\"26\":1,\"47\":1,\"65\":1}}],[\"控制命名空间内的资源使用上限\",{\"1\":{\"21\":1}}],[\"控制资源使用来管理和控制成本\",{\"1\":{\"15\":1}}],[\"控制资源分配\",{\"1\":{\"12\":1}}],[\"控制不同租户\",{\"1\":{\"15\":1}}],[\"多个小的请求可能会因为串行化处理导致较高的延迟和低效的带宽利用\",{\"1\":{\"86\":1}}],[\"多路复用\",{\"0\":{\"80\":1},\"1\":{\"87\":2}}],[\"多节点和多gpu分布式训练\",{\"1\":{\"56\":1}}],[\"多租户环境\",{\"1\":{\"15\":1,\"21\":1}}],[\"多种访问模式不能同时生效\",{\"1\":{\"2\":1}}],[\"内存\",{\"1\":{\"14\":1}}],[\"内资源总量的机制\",{\"1\":{\"11\":1}}],[\"包括不要熬夜做产品\",{\"1\":{\"88\":2}}],[\"包括产品有什么核心功能和特点\",{\"1\":{\"88\":2}}],[\"包括想法\",{\"1\":{\"88\":2}}],[\"包括美工问题\",{\"1\":{\"88\":2}}],[\"包括人身自由\",{\"1\":{\"88\":2}}],[\"包括什么是独立开发者\",{\"1\":{\"88\":2}}],[\"包括工件在内的管道组件非常有用\",{\"1\":{\"45\":1}}],[\"包括工作流中的所有组件及其相互关系\",{\"1\":{\"39\":1}}],[\"包括定期运行\",{\"1\":{\"45\":1}}],[\"包括\",{\"1\":{\"14\":1}}],[\"包含\",{\"1\":{\"0\":1}}],[\"主页\",{\"1\":{\"50\":1}}],[\"主要集中在容器化应用程序上\",{\"1\":{\"50\":1}}],[\"主要的\",{\"0\":{\"46\":1}}],[\"主要控制单个\",{\"1\":{\"16\":1}}],[\"主要字段\",{\"0\":{\"14\":1,\"19\":1}}],[\"主备异步复制可能导致丢数据的问题\",{\"1\":{\"0\":1}}],[\"5000\",{\"1\":{\"47\":1}}],[\"500m\",{\"1\":{\"18\":1}}],[\"5499555669\",{\"1\":{\"47\":2}}],[\"5bbh9\",{\"1\":{\"47\":2}}],[\"57dbbdfd77\",{\"1\":{\"47\":2}}],[\"512mi\",{\"1\":{\"18\":1}}],[\"5\",{\"0\":{\"82\":1},\"1\":{\"13\":1}}],[\"限制资源以确保测试环境不会占用过多的生产资源\",{\"1\":{\"15\":1}}],[\"限制内存使用总量\",{\"1\":{\"13\":1}}],[\"限制内存请求总量\",{\"1\":{\"13\":1}}],[\"限制\",{\"1\":{\"13\":4}}],[\"限制命名空间资源使用\",{\"1\":{\"12\":1}}],[\"hpack\",{\"1\":{\"81\":1}}],[\"http头部是以纯文本格式传输的\",{\"1\":{\"81\":1}}],[\"http\",{\"1\":{\"77\":4,\"78\":2,\"79\":4,\"80\":2,\"81\":2,\"82\":2,\"83\":3,\"84\":3,\"85\":3,\"86\":3,\"87\":3}}],[\"http2与http1区别\",{\"1\":{\"77\":1}}],[\"https\",{\"1\":{\"28\":1,\"48\":1,\"49\":1,\"87\":1,\"88\":1}}],[\"html\",{\"1\":{\"76\":1}}],[\"hyperopt\",{\"1\":{\"56\":1}}],[\"hyperband\",{\"1\":{\"55\":1}}],[\"helm\",{\"1\":{\"52\":1}}],[\"hard\",{\"1\":{\"13\":1,\"14\":1}}],[\"hdr\",{\"1\":{\"0\":3}}],[\"和控制器的实现\",{\"1\":{\"66\":1}}],[\"和控制器旨在改变这种状况\",{\"1\":{\"50\":1}}],[\"和行为方式\",{\"1\":{\"66\":1}}],[\"和工具来自动管理复杂应用的生命周期\",{\"1\":{\"64\":1}}],[\"和用户界面进行紧密集成\",{\"1\":{\"47\":1}}],[\"和服务正常运行\",{\"1\":{\"47\":1}}],[\"和内存的默认值和最大\",{\"1\":{\"18\":1}}],[\"和内存总量\",{\"1\":{\"13\":1}}],[\"和\",{\"1\":{\"10\":1,\"13\":1,\"23\":1,\"26\":2,\"47\":1,\"56\":2,\"61\":3,\"88\":2}}],[\"或在解析管道代码中的\",{\"1\":{\"45\":1}}],[\"或在\",{\"1\":{\"45\":1}}],[\"或跳过\",{\"1\":{\"44\":1}}],[\"或其他控制器管理的\",{\"1\":{\"24\":1}}],[\"或容器的资源使用\",{\"1\":{\"21\":1}}],[\"或容器的资源使用范围\",{\"1\":{\"16\":1}}],[\"或容器没有指定资源请求和限制\",{\"1\":{\"17\":1}}],[\"或容器资源使用的机制\",{\"1\":{\"16\":1}}],[\"或\",{\"1\":{\"10\":1,\"24\":3,\"39\":1,\"55\":1}}],[\"删除或再利用\",{\"1\":{\"10\":1}}],[\"删除\",{\"1\":{\"10\":1}}],[\"vue\",{\"1\":{\"76\":1}}],[\"v2beta1\",{\"0\":{\"59\":1},\"1\":{\"61\":4}}],[\"valuefrom\",{\"1\":{\"48\":1}}],[\"visualizationserviceport\",{\"1\":{\"58\":1}}],[\"visualizationservicehost\",{\"1\":{\"58\":1}}],[\"visualizationservice\",{\"1\":{\"58\":1,\"61\":1}}],[\"visualizationserver\",{\"1\":{\"47\":3}}],[\"viewer\",{\"1\":{\"47\":3}}],[\"v1beta1\",{\"0\":{\"58\":1},\"1\":{\"61\":8}}],[\"v1\",{\"1\":{\"13\":1,\"18\":1,\"25\":1,\"48\":1}}],[\"v\",{\"1\":{\"10\":3}}],[\"|\",{\"1\":{\"10\":6}}],[\"使得网络应用能够更高效地传输数据\",{\"1\":{\"87\":1}}],[\"使得创建复杂的应用管理变得更简单\",{\"1\":{\"70\":1}}],[\"使得\",{\"1\":{\"68\":1}}],[\"使得复杂应用的管理变得更一致和可靠\",{\"1\":{\"68\":1}}],[\"使得用户可以在\",{\"1\":{\"65\":1}}],[\"使应用程序能够声明对另一个应用程序的依赖关系\",{\"1\":{\"53\":1}}],[\"使应用程序能够向\",{\"1\":{\"53\":1}}],[\"使其能够在众多支持工具之间实现互操作\",{\"1\":{\"50\":1}}],[\"使其可以绑定到新的\",{\"1\":{\"9\":1}}],[\"使主容器可以访问子容器的文件系统和进程\",{\"1\":{\"46\":1}}],[\"使\",{\"1\":{\"45\":1,\"54\":1}}],[\"使用什么样的编程语言\",{\"1\":{\"88\":4}}],[\"使用hpack算法进行压缩\",{\"1\":{\"87\":1}}],[\"使用流的概念\",{\"1\":{\"79\":1}}],[\"使用二进制帧传输数据\",{\"1\":{\"78\":1}}],[\"使用新行符分隔的文本消息进行通信\",{\"1\":{\"78\":1}}],[\"使用大规模指标来调试管道运行或调查单个运行的性能\",{\"1\":{\"36\":1}}],[\"使用kubeflow\",{\"1\":{\"31\":1}}],[\"使用量\",{\"1\":{\"18\":2}}],[\"使用场景\",{\"0\":{\"15\":1,\"20\":1,\"26\":1}}],[\"使用总量\",{\"1\":{\"13\":1}}],[\"使用\",{\"0\":{\"69\":1},\"1\":{\"4\":1,\"5\":1,\"6\":1,\"26\":1,\"45\":2,\"64\":1,\"81\":1,\"84\":1}}],[\"如何面对压力\",{\"1\":{\"88\":2}}],[\"如何面对压力等\",{\"1\":{\"88\":2}}],[\"如何保持积极的心态\",{\"1\":{\"88\":4}}],[\"如何解决用户的问题\",{\"1\":{\"88\":4}}],[\"如何判断想法的是不是可以赚钱\",{\"1\":{\"88\":4}}],[\"如何选择适合的执行器\",{\"0\":{\"47\":1}}],[\"如下图所示\",{\"1\":{\"56\":1}}],[\"如下代码所示\",{\"1\":{\"0\":1}}],[\"如监控\",{\"1\":{\"45\":1}}],[\"如仅应用于某些特定的资源类型\",{\"1\":{\"14\":1}}],[\"如\",{\"1\":{\"13\":1,\"23\":2,\"26\":1,\"47\":1,\"56\":3,\"65\":1}}],[\"如果你对我的技能和经验感兴趣\",{\"1\":{\"76\":1}}],[\"如果你对开发\",{\"1\":{\"71\":1}}],[\"如果你更熟悉\",{\"1\":{\"47\":1}}],[\"如果你的工作流需要高效处理大量文件操作\",{\"1\":{\"47\":1}}],[\"如果你的工作流步骤之间需要共享文件或进程命名空间\",{\"1\":{\"47\":1}}],[\"如果你的工作流不需要特别的资源共享或文件处理\",{\"1\":{\"47\":1}}],[\"如果一个工件被多个不同运行中的执行使用\",{\"1\":{\"45\":1}}],[\"如果管道预计运行时间较长且触发频繁运行\",{\"1\":{\"45\":1}}],[\"如果\",{\"1\":{\"9\":1,\"17\":1,\"24\":1}}],[\"如果允许再利用\",{\"1\":{\"9\":1}}],[\"再利用或删除\",{\"1\":{\"9\":1}}],[\"再次使用\",{\"1\":{\"7\":1}}],[\"释放\",{\"1\":{\"9\":1}}],[\"释放锁的过程性能开销要尽量低\",{\"1\":{\"0\":1}}],[\"释放锁\",{\"1\":{\"0\":1}}],[\"后续请求只需发送差异部分\",{\"1\":{\"81\":1}}],[\"后端将管道运行的运行时信息存储在元数据存储中\",{\"1\":{\"45\":1}}],[\"后端\",{\"1\":{\"45\":1}}],[\"后\",{\"1\":{\"9\":1,\"66\":1}}],[\"被认为不再需要\",{\"1\":{\"9\":1}}],[\"被删除后\",{\"1\":{\"9\":1}}],[\"被绑定到\",{\"1\":{\"9\":1}}],[\"被创建后\",{\"1\":{\"9\":1}}],[\"初始状态\",{\"1\":{\"9\":1}}],[\"状态检查\",{\"1\":{\"27\":1}}],[\"状态图示\",{\"0\":{\"10\":1}}],[\"状态重置为\",{\"1\":{\"9\":1}}],[\"状态变为\",{\"1\":{\"9\":2}}],[\"状态\",{\"1\":{\"9\":1}}],[\"状态转换\",{\"0\":{\"9\":1}}],[\"状态时\",{\"1\":{\"5\":1}}],[\"无法正常使用\",{\"1\":{\"8\":1}}],[\"无论是管理数据库\",{\"1\":{\"71\":1}}],[\"无论\",{\"1\":{\"0\":1}}],[\"通信以提交\",{\"1\":{\"41\":1}}],[\"通常在集群中运行\",{\"1\":{\"41\":1}}],[\"通常用于以下场景\",{\"1\":{\"26\":1}}],[\"通常用于集群管理工具\",{\"1\":{\"23\":1}}],[\"通常是最合适的选择\",{\"1\":{\"47\":1}}],[\"通常是\",{\"1\":{\"24\":2,\"25\":1}}],[\"通常是因为与\",{\"1\":{\"8\":1}}],[\"通过多路复用\",{\"1\":{\"86\":1}}],[\"通过https\",{\"1\":{\"84\":1}}],[\"通过http或https\",{\"1\":{\"84\":1}}],[\"通过定义自定义资源和控制器\",{\"1\":{\"71\":1}}],[\"通过创建工具可以实现的标准\",{\"1\":{\"53\":1}}],[\"通过共享的进程命名空间\",{\"1\":{\"46\":1}}],[\"通过限制单个容器或\",{\"1\":{\"17\":1}}],[\"通过设置资源限额\",{\"1\":{\"12\":1}}],[\"通过\",{\"1\":{\"0\":2,\"46\":1,\"47\":1,\"65\":1,\"68\":1}}],[\"上述描述来自\",{\"1\":{\"50\":1}}],[\"上的运行详情页面来跟踪运行的进度\",{\"1\":{\"45\":1}}],[\"上的部署变得简单\",{\"1\":{\"28\":1}}],[\"上传你的管道\",{\"1\":{\"39\":1}}],[\"上\",{\"1\":{\"7\":1}}],[\"已从使用\",{\"1\":{\"45\":1}}],[\"已被删除\",{\"1\":{\"7\":1}}],[\"已经被删除\",{\"1\":{\"7\":1}}],[\"已经被绑定到一个\",{\"1\":{\"6\":1}}],[\"已经与一个\",{\"1\":{\"6\":1}}],[\"本文主要介绍了独立开发者的相关内容\",{\"1\":{\"88\":2}}],[\"本质上是一个\",{\"1\":{\"66\":1}}],[\"本质是创建了一个\",{\"1\":{\"0\":1}}],[\"本项目中的应用程序\",{\"1\":{\"50\":1}}],[\"本身\",{\"1\":{\"23\":1}}],[\"本身还没有被集群中的任何新\",{\"1\":{\"7\":1}}],[\"但非强制\",{\"1\":{\"87\":1}}],[\"但非加密的http请求仍然普遍存在\",{\"1\":{\"84\":1}}],[\"但在同一时刻只能处理一个请求\",{\"1\":{\"79\":1}}],[\"但\",{\"1\":{\"47\":1}}],[\"但要注意其兼容性问题\",{\"1\":{\"47\":1}}],[\"但它还未被新的\",{\"1\":{\"7\":1}}],[\"但是\",{\"1\":{\"7\":1}}],[\"但pv在挂载时只能使用一种访问模式\",{\"1\":{\"2\":1}}],[\"且正被\",{\"1\":{\"6\":1}}],[\"准备好用于新的\",{\"1\":{\"5\":1}}],[\"还适用于想要将\",{\"1\":{\"28\":1}}],[\"还是大数据处理集群\",{\"1\":{\"71\":1}}],[\"还是容器\",{\"1\":{\"19\":1}}],[\"还是遭遇网络分区\",{\"1\":{\"0\":1}}],[\"还未与任何\",{\"1\":{\"5\":1}}],[\"绑定\",{\"1\":{\"5\":3,\"6\":2,\"9\":1,\"10\":1}}],[\"处于\",{\"1\":{\"5\":1,\"9\":1}}],[\"可选\",{\"1\":{\"87\":1}}],[\"可选字段\",{\"1\":{\"14\":1}}],[\"可视化服务\",{\"1\":{\"58\":1}}],[\"可视化服务器\",{\"1\":{\"47\":1}}],[\"可扩展性和可移植性\",{\"1\":{\"56\":1}}],[\"可微分架构搜索\",{\"1\":{\"55\":1}}],[\"可用的运行触发器类型包括\",{\"1\":{\"45\":1}}],[\"可移植且可扩展\",{\"1\":{\"28\":1}}],[\"可能无法满足所有应用的需求\",{\"1\":{\"65\":1}}],[\"可能会使用\",{\"1\":{\"26\":1}}],[\"可能会被删除\",{\"1\":{\"9\":1}}],[\"可能需要管理员干预以修复问题\",{\"1\":{\"8\":1}}],[\"可以先从简单的示例开始\",{\"1\":{\"71\":1}}],[\"可以自动化和简化复杂应用的管理\",{\"1\":{\"71\":1}}],[\"可以自动化复杂应用的部署和管理过程\",{\"1\":{\"67\":1}}],[\"可以管理更复杂的工作负载\",{\"1\":{\"68\":1}}],[\"可以将最佳实践和操作流程编码成标准化的流程\",{\"1\":{\"68\":1}}],[\"可以将人类操作员\",{\"1\":{\"64\":1}}],[\"可以监控应用的健康状态\",{\"1\":{\"67\":1}}],[\"可以监控应用的新版本\",{\"1\":{\"67\":1}}],[\"可以定期备份应用的数据\",{\"1\":{\"67\":1}}],[\"可以与任何\",{\"1\":{\"56\":1}}],[\"可以协调更高级的优化工作流\",{\"1\":{\"56\":1}}],[\"可以协调多节点和多gpu的分布式训练工作负载\",{\"1\":{\"56\":1}}],[\"可以考虑\",{\"1\":{\"47\":1}}],[\"可以选择\",{\"1\":{\"47\":1}}],[\"可以使用\",{\"1\":{\"27\":1}}],[\"可以在\",{\"1\":{\"21\":1}}],[\"可以提供默认值\",{\"1\":{\"17\":1}}],[\"可以供新的\",{\"1\":{\"5\":1}}],[\"可以被绑定到\",{\"1\":{\"5\":1}}],[\"可通过\",{\"1\":{\"0\":1}}],[\"该状态表示\",{\"1\":{\"5\":1,\"6\":1,\"7\":1,\"8\":1}}],[\"描述应用程序元数据的能力\",{\"1\":{\"51\":1}}],[\"描述在给定组件输入参数值的情况下如何运行组件的规范\",{\"1\":{\"42\":1}}],[\"描述等\",{\"1\":{\"42\":1}}],[\"描述\",{\"1\":{\"5\":1,\"6\":1,\"7\":1,\"8\":1,\"42\":1}}],[\"以优化管道的执行效率和资源管理\",{\"1\":{\"47\":1}}],[\"以限制并行启动的运行数量\",{\"1\":{\"45\":1}}],[\"以便于重现\",{\"1\":{\"45\":1}}],[\"以便数据可以在分布式网络上传输\",{\"1\":{\"43\":1}}],[\"以图的形式呈现\",{\"1\":{\"39\":1}}],[\"以及每个组件的输入和输出\",{\"1\":{\"39\":1}}],[\"以及对象数量\",{\"1\":{\"13\":1}}],[\"以及它是否能够被持久卷声明\",{\"1\":{\"4\":1}}],[\"以下是我的专业技能和经验介绍\",{\"1\":{\"72\":1}}],[\"以下是它们之间的一些主要关联关系\",{\"1\":{\"47\":1}}],[\"以下是一个示例\",{\"1\":{\"25\":1}}],[\"以下是一个\",{\"1\":{\"13\":1,\"18\":1}}],[\"以下是对这两者的详细介绍\",{\"1\":{\"10\":1}}],[\"以下是状态转换的示意图\",{\"1\":{\"10\":1}}],[\"以下是\",{\"1\":{\"4\":1,\"77\":1}}],[\"字段来表示\",{\"1\":{\"4\":1}}],[\"中间加个具有号召性的按钮\",{\"1\":{\"88\":2}}],[\"中一个不断循环检查资源实际状态并使其符合预期状态的逻辑组件\",{\"1\":{\"65\":1}}],[\"中引入新的资源类型\",{\"1\":{\"65\":1}}],[\"中创建\",{\"1\":{\"53\":1}}],[\"中创建和管理元数据\",{\"1\":{\"47\":1}}],[\"中称为作业\",{\"1\":{\"45\":1}}],[\"中的元数据管理\",{\"1\":{\"47\":1}}],[\"中的各个核心组件\",{\"1\":{\"47\":1}}],[\"中的各个步骤\",{\"1\":{\"39\":1}}],[\"中的自定义资源定义\",{\"1\":{\"47\":1}}],[\"中的定时任务\",{\"1\":{\"47\":1}}],[\"中的图形表示\",{\"1\":{\"44\":1}}],[\"中的某一步骤\",{\"1\":{\"40\":1}}],[\"中的\",{\"1\":{\"24\":1}}],[\"中的一种特殊类型的\",{\"1\":{\"23\":1}}],[\"中用于限制命名空间内单个\",{\"1\":{\"16\":1}}],[\"中用来限制命名空间\",{\"1\":{\"11\":1}}],[\"中\",{\"1\":{\"4\":2,\"39\":1,\"40\":1,\"44\":1,\"50\":1}}],[\"在实践的过程中\",{\"1\":{\"88\":2}}],[\"在一个连接上\",{\"1\":{\"80\":1}}],[\"在一些简化的集群管理方案中\",{\"1\":{\"26\":1}}],[\"在这个\",{\"1\":{\"61\":1}}],[\"在配置\",{\"1\":{\"47\":1}}],[\"在某些\",{\"1\":{\"46\":1}}],[\"在复杂的管道中\",{\"1\":{\"45\":1}}],[\"在那里你可以看到运行时的图表\",{\"1\":{\"45\":1}}],[\"在高层次上\",{\"1\":{\"30\":1}}],[\"在集群启动或恢复过程中\",{\"1\":{\"26\":1}}],[\"在不同环境中设置不同的限制\",{\"1\":{\"20\":1}}],[\"在命名空间内强制执行资源使用标准\",{\"1\":{\"20\":1}}],[\"在共享集群中\",{\"1\":{\"15\":1}}],[\"在操作过程中遇到错误\",{\"1\":{\"8\":1}}],[\"在生命周期中的位置\",{\"1\":{\"4\":1}}],[\"在\",{\"1\":{\"4\":1,\"10\":1,\"39\":1,\"40\":1,\"44\":1}}],[\"在同一时间内\",{\"1\":{\"0\":1}}],[\"aka\",{\"1\":{\"88\":2}}],[\"alive\",{\"1\":{\"79\":1}}],[\"authservice\",{\"1\":{\"58\":1,\"61\":1}}],[\"automl\",{\"1\":{\"55\":3,\"56\":1}}],[\"adaptation\",{\"1\":{\"55\":1}}],[\"amazon\",{\"1\":{\"55\":1}}],[\"azure\",{\"1\":{\"55\":1}}],[\"azuredisk和cinder类型的pv支持delete策略\",{\"1\":{\"3\":1}}],[\"ai\",{\"1\":{\"55\":1,\"56\":1}}],[\"application\",{\"1\":{\"48\":3,\"49\":1}}],[\"app\",{\"1\":{\"48\":1}}],[\"apps\",{\"1\":{\"48\":1}}],[\"apiv2beta1\",{\"1\":{\"59\":4}}],[\"apiv1beta1\",{\"1\":{\"58\":8}}],[\"apiversion\",{\"1\":{\"13\":1,\"18\":1,\"25\":1,\"48\":1}}],[\"api服务器以创建运行管道所需的必要kubernetes资源\",{\"1\":{\"34\":1}}],[\"apiserver\",{\"1\":{\"23\":1,\"26\":1,\"47\":1}}],[\"api\",{\"0\":{\"58\":1,\"59\":1},\"1\":{\"23\":1,\"24\":2,\"26\":1,\"41\":1,\"45\":1,\"46\":1,\"47\":2,\"53\":2,\"64\":1,\"66\":1,\"70\":1}}],[\"ago\",{\"1\":{\"47\":1}}],[\"age\",{\"1\":{\"47\":1}}],[\"architecture\",{\"1\":{\"55\":2}}],[\"argo\",{\"0\":{\"46\":1},\"1\":{\"45\":3,\"47\":2,\"56\":1}}],[\"artifact\",{\"1\":{\"45\":1}}],[\"artifacts\",{\"1\":{\"36\":1}}],[\"available\",{\"1\":{\"5\":1,\"9\":2,\"10\":2}}],[\"awselasticblockstore\",{\"1\":{\"3\":1}}],[\"access\",{\"0\":{\"2\":1}}],[\"acquired\",{\"1\":{\"0\":1}}],[\"acquire\",{\"1\":{\"0\":1}}],[\"回收策略\",{\"0\":{\"3\":1}}],[\"某些pv可能支持多种访问模式\",{\"1\":{\"2\":1}}],[\"载\",{\"1\":{\"2\":1}}],[\"并在出现故障时自动进行恢复\",{\"1\":{\"67\":1}}],[\"并自动执行无中断的滚动升级\",{\"1\":{\"67\":1}}],[\"并根据用户定义的逻辑执行相应的操作\",{\"1\":{\"66\":1}}],[\"并根据这些文件创建和管理\",{\"1\":{\"24\":1}}],[\"并且支持不同版本的api\",{\"1\":{\"61\":1}}],[\"并且本身支持许多\",{\"1\":{\"55\":1}}],[\"并且希望与其他工具\",{\"1\":{\"52\":1}}],[\"并且你的集群配置支持\",{\"1\":{\"47\":1}}],[\"并且只能被单个node挂\",{\"1\":{\"2\":1}}],[\"并进行相应的标注\",{\"1\":{\"44\":1}}],[\"并将这些资源的状态持久化到ml元数据服务中\",{\"1\":{\"37\":1}}],[\"并获取到\",{\"1\":{\"0\":1}}],[\"读写权限\",{\"1\":{\"2\":2}}],[\"访问模式\",{\"0\":{\"2\":1}}],[\"笔记总结\",{\"1\":{\"1\":1}}],[\"keep\",{\"1\":{\"79\":1}}],[\"key\",{\"1\":{\"0\":8}}],[\"kudo\",{\"1\":{\"70\":1}}],[\"kubebuilder\",{\"1\":{\"70\":1}}],[\"kubeflow\",{\"0\":{\"28\":1},\"1\":{\"28\":7,\"29\":2,\"36\":2,\"39\":3,\"40\":1,\"42\":1,\"44\":2,\"45\":9,\"46\":2,\"47\":18,\"56\":2,\"75\":1}}],[\"kubectl\",{\"1\":{\"27\":2,\"47\":1,\"53\":1,\"66\":1}}],[\"kube\",{\"1\":{\"23\":3,\"25\":1,\"26\":3,\"27\":1,\"48\":1}}],[\"kubelet\",{\"1\":{\"23\":1,\"24\":4,\"25\":1,\"27\":2}}],[\"kubernetes\",{\"0\":{\"50\":1},\"1\":{\"4\":2,\"10\":1,\"11\":1,\"16\":1,\"21\":1,\"23\":4,\"24\":1,\"25\":3,\"26\":5,\"27\":1,\"28\":3,\"29\":2,\"39\":1,\"46\":2,\"47\":4,\"48\":1,\"49\":1,\"50\":3,\"53\":2,\"55\":1,\"56\":1,\"64\":4,\"65\":4,\"66\":1,\"68\":3,\"70\":2,\"71\":3,\"74\":1}}],[\"kubernetes支持的回收策略如下\",{\"1\":{\"3\":1}}],[\"kubernetes支持的访问模式如下\",{\"1\":{\"2\":1}}],[\"k8r6z\",{\"1\":{\"47\":2}}],[\"k8sapiexecutor\",{\"1\":{\"46\":1,\"47\":2}}],[\"k8s技能图谱\",{\"0\":{\"22\":1}}],[\"k8s\",{\"0\":{\"64\":1},\"1\":{\"1\":1,\"10\":1,\"28\":1,\"48\":3,\"74\":1}}],[\"k8s知识点\",{\"0\":{\"1\":1}}],[\"katib\",{\"0\":{\"55\":1,\"56\":1},\"1\":{\"47\":19,\"55\":5,\"56\":10}}],[\"kind\",{\"1\":{\"13\":1,\"18\":1,\"25\":1,\"48\":1}}],[\"避免单点故障\",{\"1\":{\"0\":1}}],[\"同时\",{\"1\":{\"83\":1}}],[\"同时要保证高可用\",{\"1\":{\"0\":1}}],[\"同时获得锁\",{\"1\":{\"0\":1}}],[\"高效神经架构搜索\",{\"1\":{\"55\":1}}],[\"高性能\",{\"1\":{\"0\":1}}],[\"高可用\",{\"1\":{\"0\":1}}],[\"常用的解决方案是超时和自动过期机制\",{\"1\":{\"0\":1}}],[\"出现\",{\"1\":{\"0\":1}}],[\"活性\",{\"1\":{\"0\":1}}],[\"不积极才是常态\",{\"1\":{\"88\":2}}],[\"不做完美的产品\",{\"1\":{\"88\":2}}],[\"不做免费的产品\",{\"1\":{\"88\":2}}],[\"不支持\",{\"1\":{\"87\":4}}],[\"不会相互阻塞\",{\"1\":{\"80\":1}}],[\"不会出现\",{\"1\":{\"0\":1}}],[\"不同的流可以独立处理\",{\"1\":{\"80\":1}}],[\"不仅仅是基础设施视图\",{\"1\":{\"52\":1}}],[\"不能依赖于\",{\"1\":{\"26\":1}}],[\"不是通过\",{\"1\":{\"24\":1}}],[\"不需要\",{\"1\":{\"24\":1}}],[\"不允许多个\",{\"1\":{\"0\":1}}],[\"互斥性\",{\"1\":{\"0\":1}}],[\"安全性\",{\"1\":{\"0\":1}}],[\"它包括了\",{\"1\":{\"66\":1}}],[\"它可以调优用任何用户选择的语言编写的应用程序的超参数\",{\"1\":{\"55\":1}}],[\"它提供了\",{\"0\":{\"51\":1}}],[\"它会定期启动运行配置的新副本\",{\"1\":{\"45\":1}}],[\"它会创建一个\",{\"1\":{\"0\":1}}],[\"它执行机器学习\",{\"1\":{\"40\":1}}],[\"它编排基于任务的工作流\",{\"1\":{\"35\":1}}],[\"它由\",{\"1\":{\"23\":1}}],[\"它为容器设置了\",{\"1\":{\"18\":1}}],[\"它限制了某个命名空间内的\",{\"1\":{\"13\":1}}],[\"它们将其软件包发布集中在应用程序安装上\",{\"1\":{\"52\":1}}],[\"它们共同组成了\",{\"1\":{\"47\":1}}],[\"它们帮助管理员公平分配集群资源\",{\"1\":{\"12\":1}}],[\"它们帮助管理员确保资源的公平分配和高效利用\",{\"1\":{\"10\":1}}],[\"它们用于防止某个命名空间消耗过多的集群资源\",{\"1\":{\"11\":1}}],[\"它不能再被其他\",{\"1\":{\"6\":1}}],[\"它未被任何\",{\"1\":{\"5\":1}}],[\"它反映了存储卷的当前状态\",{\"1\":{\"4\":1}}],[\"它一定是持久化到了集群多数节点上\",{\"1\":{\"0\":1}}],[\"因为它们可以用于性能评估\",{\"1\":{\"45\":1}}],[\"因为只有\",{\"1\":{\"0\":1}}],[\"因此\",{\"1\":{\"45\":1}}],[\"因此它们的一些管理和监控操作与普通\",{\"1\":{\"27\":1}}],[\"因此它们没有自动伸缩\",{\"1\":{\"24\":1}}],[\"因此非常适合用于管理集群的核心组件\",{\"1\":{\"24\":1}}],[\"因此一旦分布式锁申请返回给\",{\"1\":{\"0\":1}}],[\"random\",{\"1\":{\"55\":1}}],[\"raft\",{\"1\":{\"0\":1}}],[\"rgmgf\",{\"1\":{\"47\":2}}],[\"root\",{\"1\":{\"47\":1}}],[\"rox\",{\"1\":{\"2\":1}}],[\"runs创建过程是\",{\"1\":{\"63\":1}}],[\"runservice\",{\"1\":{\"58\":1,\"59\":1,\"61\":1}}],[\"run\",{\"1\":{\"45\":2}}],[\"running\",{\"1\":{\"44\":1,\"47\":13}}],[\"rwx\",{\"1\":{\"2\":1}}],[\"rwo\",{\"1\":{\"2\":1}}],[\"reflection\",{\"1\":{\"60\":1}}],[\"reflectionservice\",{\"1\":{\"60\":1,\"61\":1}}],[\"reportservice\",{\"1\":{\"58\":1,\"61\":1}}],[\"replicaset\",{\"1\":{\"24\":2,\"47\":1}}],[\"register\",{\"1\":{\"60\":1}}],[\"registerauthserviceserver\",{\"1\":{\"58\":1}}],[\"registervisualizationserviceserver\",{\"1\":{\"58\":1}}],[\"registerrecurringrunserviceserver\",{\"1\":{\"59\":1}}],[\"registerreportserviceserver\",{\"1\":{\"58\":1}}],[\"registerrunserviceserver\",{\"1\":{\"58\":1,\"59\":1}}],[\"registertaskserviceserver\",{\"1\":{\"58\":1}}],[\"registerjobserviceserver\",{\"1\":{\"58\":1}}],[\"registerpipelineserviceserver\",{\"1\":{\"58\":1,\"59\":1}}],[\"registerexperimentserviceserver\",{\"1\":{\"58\":1,\"59\":1}}],[\"registry\",{\"1\":{\"47\":1}}],[\"resource\",{\"1\":{\"65\":2}}],[\"resourcemanager\",{\"1\":{\"58\":4}}],[\"resources\",{\"1\":{\"48\":1}}],[\"resourcequota\",{\"1\":{\"13\":2,\"14\":1}}],[\"resourcequotas\",{\"0\":{\"11\":1},\"1\":{\"10\":1,\"11\":1,\"12\":1,\"16\":1,\"21\":1}}],[\"restarts\",{\"1\":{\"47\":1}}],[\"requests\",{\"1\":{\"13\":2,\"48\":1}}],[\"recurringrunservice\",{\"1\":{\"59\":1,\"61\":1}}],[\"recurring\",{\"1\":{\"45\":1}}],[\"recycle\",{\"1\":{\"3\":1}}],[\"reclaim\",{\"0\":{\"3\":1}}],[\"retain\",{\"1\":{\"3\":1}}],[\"ready\",{\"1\":{\"47\":1}}],[\"readwritemany\",{\"1\":{\"2\":1}}],[\"readwriteonce\",{\"1\":{\"2\":1}}],[\"readonlymany\",{\"1\":{\"2\":1}}],[\"redis\",{\"1\":{\"0\":2,\"74\":1}}],[\"release\",{\"1\":{\"0\":1}}],[\"released\",{\"1\":{\"0\":1,\"9\":1,\"10\":1}}],[\"revisions\",{\"1\":{\"0\":1}}],[\"revision\",{\"1\":{\"0\":3}}],[\"是对\",{\"1\":{\"77\":1}}],[\"是对管道的单次执行\",{\"1\":{\"45\":1}}],[\"是可扩展和可移植的\",{\"1\":{\"56\":1}}],[\"是由管道组件发出的输出\",{\"1\":{\"45\":1}}],[\"是管道中某个组件的执行\",{\"1\":{\"45\":1}}],[\"是管道的可重复运行\",{\"1\":{\"45\":1}}],[\"是管道运行时在\",{\"1\":{\"44\":1}}],[\"是集群稳定运行的关键保障之一\",{\"1\":{\"27\":1}}],[\"是\",{\"1\":{\"23\":1,\"27\":1,\"29\":1,\"47\":3,\"65\":1}}],[\"是一种强大的工具\",{\"1\":{\"71\":1}}],[\"是一种软件扩展\",{\"1\":{\"64\":1}}],[\"是一种在\",{\"1\":{\"11\":1,\"16\":1}}],[\"是一个与机器学习\",{\"1\":{\"55\":1}}],[\"是一个原生于\",{\"1\":{\"55\":1}}],[\"是一个开源系统\",{\"1\":{\"50\":1}}],[\"是一个好的选择\",{\"1\":{\"47\":1}}],[\"是一个面向想要构建和试验\",{\"1\":{\"28\":1}}],[\"是一个集群级别的资源\",{\"1\":{\"4\":1}}],[\"是两种用于资源管理和控制的机制\",{\"1\":{\"10\":1}}],[\"是基于\",{\"1\":{\"0\":1}}],[\"是如何等待的呢\",{\"1\":{\"0\":1}}],[\"相对于\",{\"1\":{\"77\":1}}],[\"相关的存储设备出现了错误或问题\",{\"1\":{\"8\":1}}],[\"相比\",{\"1\":{\"0\":1}}],[\"相同\",{\"1\":{\"0\":1}}],[\"去监听比自己小的\",{\"1\":{\"0\":1}}],[\"parzen\",{\"1\":{\"55\":1}}],[\"plane\",{\"1\":{\"48\":3}}],[\"pnsexecutor\",{\"1\":{\"46\":1,\"47\":2}}],[\"persistenceagent\",{\"1\":{\"47\":3}}],[\"persistentvolumeclaim\",{\"1\":{\"4\":1}}],[\"persistentvolume\",{\"1\":{\"4\":1}}],[\"periodic\",{\"1\":{\"45\":1}}],[\"pytorchjob\",{\"1\":{\"56\":1}}],[\"pytorch\",{\"1\":{\"55\":1}}],[\"python\",{\"0\":{\"31\":1},\"1\":{\"73\":1}}],[\"py\",{\"1\":{\"41\":1}}],[\"pipeline创建流程\",{\"0\":{\"62\":1}}],[\"pipeline服务注册流程\",{\"0\":{\"57\":1}}],[\"pipelineservice\",{\"1\":{\"58\":1,\"59\":1,\"61\":1}}],[\"pipelines\",{\"1\":{\"39\":3,\"40\":1,\"42\":1,\"44\":2,\"45\":8,\"46\":2,\"47\":15,\"56\":1}}],[\"pipelines将工件存储在像minio服务器或cloud\",{\"1\":{\"36\":1}}],[\"pipelines将元数据存储在mysql数据库中\",{\"1\":{\"36\":1}}],[\"pipelines特定领域语言\",{\"1\":{\"31\":1}}],[\"pipeline\",{\"0\":{\"30\":1,\"39\":1},\"1\":{\"47\":24,\"48\":1}}],[\"po\",{\"1\":{\"47\":1}}],[\"ports\",{\"1\":{\"25\":1}}],[\"pod存储两种类型的数据\",{\"1\":{\"36\":1}}],[\"pod中执行\",{\"1\":{\"35\":1}}],[\"pods\",{\"1\":{\"13\":1}}],[\"pod\",{\"0\":{\"24\":1,\"25\":1},\"1\":{\"13\":2,\"16\":2,\"17\":3,\"19\":1,\"21\":1,\"23\":3,\"24\":6,\"25\":6,\"26\":3,\"27\":9,\"39\":3,\"45\":1,\"47\":18,\"65\":1}}],[\"policy\",{\"0\":{\"3\":1}}],[\"pvc\",{\"1\":{\"4\":1,\"5\":5,\"6\":4,\"7\":4,\"9\":4,\"10\":2}}],[\"pv\",{\"0\":{\"4\":1},\"1\":{\"4\":4,\"5\":3,\"6\":2,\"7\":3,\"8\":3,\"9\":7}}],[\"pfx\",{\"1\":{\"0\":1}}],[\"prometheus\",{\"1\":{\"69\":3}}],[\"process\",{\"1\":{\"46\":1}}],[\"prior\",{\"1\":{\"0\":1}}],[\"println\",{\"1\":{\"0\":2}}],[\"prefix\",{\"1\":{\"0\":4}}],[\"wordpress\",{\"1\":{\"51\":1}}],[\"workflow\",{\"1\":{\"47\":3}}],[\"workflows\",{\"1\":{\"45\":1,\"47\":1,\"56\":1}}],[\"workflow控制器\",{\"1\":{\"35\":1}}],[\"web\",{\"1\":{\"47\":4}}],[\"werr\",{\"1\":{\"0\":2}}],[\"writer\",{\"1\":{\"47\":4}}],[\"www\",{\"1\":{\"28\":1}}],[\"watch\",{\"1\":{\"0\":2}}],[\"waitdelete\",{\"1\":{\"0\":1}}],[\"waitdeletes\",{\"1\":{\"0\":1}}],[\"wait\",{\"1\":{\"0\":2}}],[\"withttl\",{\"1\":{\"0\":1}}],[\"未获得锁的\",{\"1\":{\"0\":1}}],[\"最好有以下几方面准备\",{\"1\":{\"88\":2}}],[\"最后做数据分析\",{\"1\":{\"88\":2}}],[\"最后使用结束\",{\"1\":{\"0\":1}}],[\"最小限制\",{\"1\":{\"21\":1}}],[\"最小值\",{\"1\":{\"18\":1}}],[\"最小\",{\"1\":{\"0\":1}}],[\"404\",{\"1\":{\"89\":1}}],[\"4\",{\"0\":{\"8\":1,\"81\":1},\"1\":{\"0\":1,\"13\":1}}],[\"则进入等待模式\",{\"1\":{\"0\":1}}],[\"其中\",{\"1\":{\"0\":1}}],[\"其他服务注册在\",{\"1\":{\"57\":1}}],[\"其他\",{\"0\":{\"60\":1},\"1\":{\"0\":1}}],[\"其次得到\",{\"1\":{\"0\":1}}],[\"获得锁\",{\"1\":{\"0\":1}}],[\"获得\",{\"1\":{\"0\":1}}],[\"+\",{\"1\":{\"0\":1}}],[\"时间序列\",{\"1\":{\"36\":1}}],[\"时合理设置资源请求和限制\",{\"1\":{\"17\":1}}],[\"时\",{\"1\":{\"0\":1,\"47\":1}}],[\"0\",{\"1\":{\"0\":1,\"47\":12,\"48\":3,\"79\":1}}],[\"当你的产品完成了最小\",{\"1\":{\"88\":2}}],[\"当你运行一个管道时\",{\"1\":{\"39\":1}}],[\"当客户端请求html页面时\",{\"1\":{\"82\":1}}],[\"当节点的父节点包含条件语句时\",{\"1\":{\"44\":1}}],[\"当前运行的管道列表\",{\"1\":{\"38\":1}}],[\"当\",{\"1\":{\"0\":1}}],[\"方法释放锁\",{\"1\":{\"0\":1}}],[\"方法尝试获取锁\",{\"1\":{\"0\":1}}],[\"方法创建\",{\"1\":{\"0\":1}}],[\"30mi\",{\"1\":{\"48\":1}}],[\"3\",{\"0\":{\"7\":1,\"80\":1},\"1\":{\"0\":1}}],[\"20mi\",{\"1\":{\"48\":1}}],[\"20231101\",{\"1\":{\"48\":1}}],[\"2022\",{\"1\":{\"46\":1}}],[\"256mi\",{\"1\":{\"18\":1}}],[\"250m\",{\"1\":{\"18\":1}}],[\"2\",{\"0\":{\"6\":1,\"79\":1},\"1\":{\"0\":1,\"46\":1,\"77\":2,\"78\":1,\"79\":1,\"80\":1,\"81\":1,\"82\":1,\"83\":2,\"84\":2,\"85\":2,\"86\":2,\"87\":2}}],[\"levelsio\",{\"1\":{\"88\":2}}],[\"leaseid\",{\"1\":{\"0\":1}}],[\"lease\",{\"1\":{\"0\":2}}],[\"labels\",{\"1\":{\"48\":2}}],[\"latest\",{\"1\":{\"25\":1}}],[\"lineage\",{\"1\":{\"45\":1}}],[\"limitrange\",{\"1\":{\"18\":2}}],[\"limitranges\",{\"0\":{\"16\":1},\"1\":{\"10\":1,\"16\":2,\"17\":1,\"21\":1}}],[\"limits\",{\"1\":{\"13\":2,\"18\":2,\"48\":1}}],[\"lock\",{\"1\":{\"0\":11}}],[\"logs\",{\"1\":{\"27\":1}}],[\"log\",{\"1\":{\"0\":4}}],[\"的时候\",{\"1\":{\"88\":2}}],[\"的一些关键区别和改进\",{\"1\":{\"77\":1}}],[\"的管理能力\",{\"1\":{\"71\":1}}],[\"的管理能力扩展到了自定义应用领域\",{\"1\":{\"68\":1}}],[\"的开发过程\",{\"1\":{\"70\":1}}],[\"的工具\",{\"0\":{\"70\":1}}],[\"的工作原理\",{\"0\":{\"66\":1}}],[\"的示例\",{\"0\":{\"69\":1}}],[\"的能力\",{\"1\":{\"68\":1}}],[\"的优势\",{\"0\":{\"68\":1}}],[\"的应用场景\",{\"0\":{\"67\":1}}],[\"的内置资源\",{\"1\":{\"65\":1}}],[\"的基本概念\",{\"0\":{\"65\":1}}],[\"的操作自动化\",{\"1\":{\"64\":1}}],[\"的训练操作\",{\"1\":{\"56\":1}}],[\"的自动化机器学习\",{\"1\":{\"55\":1}}],[\"的根对象\",{\"1\":{\"51\":1}}],[\"的元数据\",{\"1\":{\"50\":1}}],[\"的各个组件通过数据库和控制器进行通信和协调\",{\"1\":{\"47\":1}}],[\"的可视化服务\",{\"1\":{\"47\":1}}],[\"的展示\",{\"1\":{\"47\":1}}],[\"的持久化存储\",{\"1\":{\"47\":1}}],[\"的核心组件之一\",{\"1\":{\"47\":1}}],[\"的数据库\",{\"1\":{\"47\":1}}],[\"的控制器组件之一\",{\"1\":{\"47\":1}}],[\"的控制器组件\",{\"1\":{\"47\":1}}],[\"的功能简介\",{\"1\":{\"47\":1}}],[\"的默认执行器\",{\"1\":{\"46\":1}}],[\"的任务\",{\"1\":{\"41\":1}}],[\"的定义\",{\"1\":{\"39\":1}}],[\"的日志\",{\"1\":{\"27\":1}}],[\"的故障而丢失\",{\"1\":{\"24\":1}}],[\"的配置是静态文件\",{\"1\":{\"24\":1}}],[\"的参与\",{\"1\":{\"24\":1}}],[\"的特点\",{\"0\":{\"24\":1}}],[\"的部署和管理\",{\"1\":{\"23\":1}}],[\"的资源使用\",{\"1\":{\"17\":1}}],[\"的整体限制不同\",{\"1\":{\"16\":1}}],[\"的总数量\",{\"1\":{\"13\":2}}],[\"的状态\",{\"1\":{\"27\":1}}],[\"的状态转换通常遵循以下过程\",{\"1\":{\"9\":1}}],[\"的状态由其\",{\"1\":{\"4\":1}}],[\"的几种可能的状态\",{\"1\":{\"4\":1}}],[\"的\",{\"1\":{\"0\":3,\"13\":1,\"18\":1,\"29\":1,\"47\":3,\"52\":1}}],[\"为什么要做独立开发者\",{\"1\":{\"88\":4}}],[\"为什么选择\",{\"0\":{\"56\":1}}],[\"为什么使用etcd分布式锁比redis分布式锁更好\",{\"1\":{\"0\":1}}],[\"为支持应用程序提供信息\",{\"1\":{\"51\":1}}],[\"为\",{\"1\":{\"0\":3}}],[\"首先通过\",{\"1\":{\"0\":1}}],[\"13\",{\"1\":{\"61\":1}}],[\"17h\",{\"1\":{\"47\":14}}],[\"128mi\",{\"1\":{\"18\":1}}],[\"1gi\",{\"1\":{\"18\":1}}],[\"16gi\",{\"1\":{\"13\":1}}],[\"1\",{\"0\":{\"5\":1,\"78\":1},\"1\":{\"0\":2,\"18\":1,\"46\":1,\"47\":27,\"48\":3,\"77\":2,\"78\":1,\"79\":4,\"80\":1,\"81\":1,\"82\":1,\"83\":1,\"84\":1,\"85\":1,\"86\":1,\"87\":1}}],[\"101\",{\"1\":{\"47\":1}}],[\"100m\",{\"1\":{\"18\":1,\"48\":2}}],[\"10\",{\"1\":{\"0\":2,\"13\":2}}],[\"tls\",{\"1\":{\"84\":1}}],[\"ts\",{\"1\":{\"76\":1}}],[\"taskservice\",{\"1\":{\"58\":1,\"61\":1}}],[\"tag\",{\"1\":{\"48\":1}}],[\"training\",{\"1\":{\"56\":1}}],[\"tree\",{\"1\":{\"55\":1}}],[\"tekton\",{\"1\":{\"56\":1}}],[\"tensorflow\",{\"1\":{\"55\":1}}],[\"template\",{\"1\":{\"48\":1}}],[\"the\",{\"1\":{\"48\":2}}],[\"thcd8\",{\"1\":{\"47\":2}}],[\"tqtgh\",{\"1\":{\"47\":2}}],[\"typescript\",{\"1\":{\"76\":1}}],[\"type\",{\"1\":{\"18\":1,\"19\":1}}],[\"tools\",{\"1\":{\"48\":3}}],[\"to\",{\"1\":{\"0\":1}}],[\"todo\",{\"1\":{\"0\":2}}],[\"ttl\",{\"1\":{\"0\":1}}],[\"two\",{\"1\":{\"0\":1}}],[\"mvp\",{\"1\":{\"88\":6}}],[\"mxnet\",{\"1\":{\"55\":1}}],[\"microsoft\",{\"1\":{\"55\":1}}],[\"min\",{\"1\":{\"18\":1,\"19\":1}}],[\"mlops\",{\"0\":{\"75\":1}}],[\"ml\",{\"1\":{\"28\":6,\"29\":2,\"39\":1,\"40\":1,\"45\":2,\"47\":24,\"48\":1,\"55\":2,\"56\":2}}],[\"matrix\",{\"1\":{\"55\":1}}],[\"matchlabels\",{\"1\":{\"48\":1}}],[\"master\",{\"1\":{\"48\":1}}],[\"manifests\",{\"1\":{\"24\":1,\"25\":3}}],[\"manager\",{\"0\":{\"48\":1},\"1\":{\"23\":1,\"26\":1,\"47\":6,\"48\":6}}],[\"max\",{\"1\":{\"18\":1,\"19\":1}}],[\"memory\",{\"1\":{\"13\":2,\"18\":4,\"48\":2}}],[\"metadata\",{\"1\":{\"13\":1,\"18\":1,\"25\":1,\"36\":1,\"45\":3,\"47\":8,\"48\":3}}],[\"modes\",{\"0\":{\"2\":1}}],[\"m\",{\"1\":{\"0\":4}}],[\"mutex\",{\"1\":{\"0\":3}}],[\"mysql\",{\"1\":{\"69\":2,\"74\":1}}],[\"mysql数据库和minio服务器都由kubernetes持久卷子系统支持\",{\"1\":{\"36\":1}}],[\"mytask\",{\"1\":{\"41\":3}}],[\"myrev\",{\"1\":{\"0\":1}}],[\"mykey\",{\"1\":{\"0\":1}}],[\"my\",{\"1\":{\"0\":4}}],[\"m1\",{\"1\":{\"0\":3}}],[\"sharedrunserver\",{\"1\":{\"58\":1,\"59\":1}}],[\"sharedjobserver\",{\"1\":{\"58\":1,\"59\":1}}],[\"sharedpipelineserver\",{\"1\":{\"58\":1,\"59\":1}}],[\"sharedexperimentserver\",{\"1\":{\"58\":1,\"59\":1}}],[\"sharing\",{\"1\":{\"46\":1}}],[\"s\",{\"1\":{\"58\":8,\"59\":4,\"60\":1}}],[\"sagemaker\",{\"1\":{\"55\":1}}],[\"sigs\",{\"1\":{\"48\":1,\"49\":1}}],[\"src\",{\"1\":{\"47\":1}}],[\"skipped\",{\"1\":{\"44\":1}}],[\"succeeded\",{\"1\":{\"44\":1}}],[\"spring\",{\"1\":{\"74\":1}}],[\"spark\",{\"1\":{\"41\":2}}],[\"specified\",{\"1\":{\"48\":1}}],[\"spec\",{\"1\":{\"13\":1,\"18\":1,\"25\":1,\"48\":2}}],[\"strategy\",{\"1\":{\"55\":1}}],[\"stg\",{\"1\":{\"47\":1}}],[\"step\",{\"1\":{\"45\":1}}],[\"storage之类的工件存储中\",{\"1\":{\"36\":1}}],[\"startrpcserver\",{\"1\":{\"57\":1,\"61\":1}}],[\"started\",{\"1\":{\"28\":1}}],[\"static\",{\"0\":{\"24\":1,\"25\":1},\"1\":{\"23\":2,\"24\":4,\"25\":3,\"26\":3,\"27\":5}}],[\"status\",{\"0\":{\"4\":1},\"1\":{\"4\":1,\"47\":1}}],[\"sdk\",{\"0\":{\"31\":1},\"1\":{\"39\":1,\"70\":1}}],[\"system\",{\"1\":{\"25\":1,\"27\":1}}],[\"scheduledworkflow\",{\"1\":{\"47\":3}}],[\"scheduler\",{\"1\":{\"23\":1,\"26\":1}}],[\"scopes\",{\"1\":{\"14\":1}}],[\"s1\",{\"1\":{\"0\":6}}],[\"search\",{\"1\":{\"55\":3}}],[\"selector\",{\"1\":{\"48\":1}}],[\"server\",{\"1\":{\"23\":1,\"24\":2,\"26\":1,\"47\":1,\"58\":4}}],[\"serviceaccountname\",{\"1\":{\"48\":1}}],[\"services\",{\"1\":{\"13\":1}}],[\"service\",{\"1\":{\"13\":2,\"65\":1}}],[\"session\",{\"1\":{\"0\":2}}],[\"sessions\",{\"1\":{\"0\":1}}],[\"separate\",{\"1\":{\"0\":1}}],[\"found\",{\"1\":{\"89\":1}}],[\"for\",{\"1\":{\"0\":5}}],[\"fieldpath\",{\"1\":{\"48\":1}}],[\"fieldref\",{\"1\":{\"48\":1}}],[\"from\",{\"1\":{\"48\":1}}],[\"fsgks\",{\"1\":{\"47\":2}}],[\"fast\",{\"1\":{\"55\":1}}],[\"failed\",{\"1\":{\"0\":1,\"10\":1,\"44\":1}}],[\"fatal\",{\"1\":{\"0\":4}}],[\"fmt\",{\"1\":{\"0\":2}}],[\"not\",{\"1\":{\"89\":1}}],[\"neural\",{\"1\":{\"55\":1}}],[\"newauthserver\",{\"1\":{\"58\":1}}],[\"newvisualizationserver\",{\"1\":{\"58\":1}}],[\"newreportserver\",{\"1\":{\"58\":1}}],[\"newtaskserver\",{\"1\":{\"58\":1}}],[\"newmutex\",{\"1\":{\"0\":2}}],[\"newsession\",{\"1\":{\"0\":2}}],[\"new\",{\"1\":{\"0\":1}}],[\"nacos\",{\"1\":{\"74\":1}}],[\"nas\",{\"1\":{\"55\":1}}],[\"name\",{\"1\":{\"13\":1,\"18\":1,\"25\":2,\"47\":1,\"48\":3}}],[\"namespace\",{\"1\":{\"11\":1,\"13\":2,\"18\":2,\"25\":1,\"46\":1,\"48\":2}}],[\"nv8km\",{\"1\":{\"47\":2}}],[\"n\",{\"1\":{\"27\":1,\"47\":1}}],[\"nginx\",{\"1\":{\"25\":2}}],[\"nil\",{\"1\":{\"0\":5}}],[\"c\",{\"1\":{\"73\":1}}],[\"c++\",{\"1\":{\"73\":1}}],[\"custom\",{\"1\":{\"65\":2}}],[\"cm\",{\"1\":{\"58\":2}}],[\"cnbita\",{\"1\":{\"47\":1}}],[\"cpu\",{\"1\":{\"13\":5,\"14\":1,\"18\":9,\"48\":2}}],[\"cr\",{\"1\":{\"65\":3}}],[\"cron\",{\"1\":{\"45\":2}}],[\"crd\",{\"1\":{\"34\":1,\"47\":6,\"48\":1,\"50\":1,\"65\":3,\"66\":4}}],[\"crash\",{\"1\":{\"0\":1}}],[\"createrevision\",{\"1\":{\"0\":1}}],[\"create\",{\"1\":{\"0\":1}}],[\"ctx\",{\"1\":{\"0\":2}}],[\"covariance\",{\"1\":{\"55\":1}}],[\"common\",{\"1\":{\"58\":2}}],[\"command\",{\"1\":{\"48\":1}}],[\"com\",{\"1\":{\"47\":1,\"48\":1,\"49\":1}}],[\"component\",{\"0\":{\"40\":1}}],[\"competition\",{\"1\":{\"0\":1}}],[\"control\",{\"1\":{\"48\":3}}],[\"controller\",{\"0\":{\"48\":1},\"1\":{\"23\":1,\"26\":1,\"47\":9,\"48\":8,\"65\":1}}],[\"containerport\",{\"1\":{\"25\":1}}],[\"containers\",{\"1\":{\"25\":1,\"48\":1}}],[\"container\",{\"1\":{\"18\":1}}],[\"context\",{\"1\":{\"0\":2}}],[\"concurrency\",{\"1\":{\"0\":5}}],[\"config\",{\"1\":{\"0\":1}}],[\"cloud\",{\"1\":{\"55\":1}}],[\"close\",{\"1\":{\"0\":2}}],[\"client\",{\"1\":{\"0\":8}}],[\"clientv3\",{\"1\":{\"0\":2}}],[\"cli\",{\"1\":{\"0\":3,\"53\":1}}],[\"=\",{\"1\":{\"0\":12}}],[\"element\",{\"1\":{\"76\":1}}],[\"elasticsearch\",{\"1\":{\"69\":2}}],[\"else\",{\"1\":{\"0\":1,\"45\":1}}],[\"efficient\",{\"1\":{\"55\":1}}],[\"evolution\",{\"1\":{\"55\":1}}],[\"estimators\",{\"1\":{\"55\":1}}],[\"env\",{\"1\":{\"48\":1}}],[\"endpoints\",{\"1\":{\"0\":2}}],[\"emissary\",{\"1\":{\"46\":2,\"47\":1}}],[\"emissaryexecutor\",{\"1\":{\"46\":1,\"47\":2}}],[\"experimentservice\",{\"1\":{\"58\":1,\"59\":1,\"61\":1}}],[\"experiment\",{\"0\":{\"45\":1}}],[\"example\",{\"1\":{\"13\":2,\"18\":2,\"25\":2}}],[\"etc\",{\"1\":{\"24\":1,\"25\":3}}],[\"etcd获取分布式锁\",{\"1\":{\"0\":1}}],[\"etcd\",{\"0\":{\"0\":1},\"1\":{\"0\":1,\"23\":1,\"24\":1,\"26\":2}}],[\"err\",{\"1\":{\"0\":12}}]],\"serializationVersion\":2}";